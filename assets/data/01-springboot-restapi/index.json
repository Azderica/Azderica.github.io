{"hash":"441d039ecb7f9b8f8ede21c119627ec9bc8d91ab","data":{"post":{"title":"[SpringBoot API] Springboot REST API : 시작하기","path":"/01-springboot-restapi/","date":"7. September 2020","timeToRead":8,"tags":[{"id":"Spring","title":"Spring","path":"/tag/Spring/"},{"id":"SpringBoot","title":"SpringBoot","path":"/tag/SpringBoot/"},{"id":"Springboot API","title":"Springboot API","path":"/tag/Springboot%20API/"},{"id":"REST API","title":"REST API","path":"/tag/REST%20API/"},{"id":"Backend","title":"Backend","path":"/tag/Backend/"}],"description":" 'SpringBoot REST API'의 첫번째 게시글입니다. ","content":"<h1 id=\"springboot-api-시작하기\"><a href=\"#springboot-api-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SpringBoot API 시작하기.</h1>\n<p><a href=\"https://drive.google.com/file/d/0B-4fgYvMaU-zYVlVUzB2ZnpuRU8ySFVpV2h3ZjRmd096azFN/view\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">강의 자료</a></p>\n<p><a href=\"https://docs.google.com/document/d/1GFo3W6XxqhxDVVqxiSEtqkuVCX93Tdb3xzINRtTIx10/edit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">수업 자료</a></p>\n<p><a href=\"https://gitlab.com/whiteship/natural\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">코드</a></p>\n<br/>\n<h2 id=\"rest-api\"><a href=\"#rest-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST API</h2>\n<h3 id=\"api\"><a href=\"#api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>API</h3>\n<ul>\n<li><strong>A</strong>pplication <strong>P</strong>rogramming <strong>I</strong>nterface</li>\n</ul>\n<h3 id=\"rest\"><a href=\"#rest\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST</h3>\n<ul>\n<li><strong>RE</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer</li>\n<li>인터넷 상의 시스템 간의 상호 운용성(interoperability)을 제공하는 방법중 하나</li>\n<li>시스템 제각각의 독립적인 진화를 보장하기 위한 방법</li>\n<li>REST API: REST 아키텍처 스타일을 따르는 API</li>\n</ul>\n<h3 id=\"rest-아키텍처-스타일-발표-영상-11분\"><a href=\"#rest-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EC%8A%A4%ED%83%80%EC%9D%BC-%EB%B0%9C%ED%91%9C-%EC%98%81%EC%83%81-11%EB%B6%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST 아키텍처 스타일 (<a href=\"https://www.youtube.com/watch?v=RP_f5dMoHFc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">발표 영상</a> 11분)</h3>\n<ul>\n<li>Client-Server</li>\n<li>Stateless</li>\n<li>Cache</li>\n<li><strong>Uniform Interface</strong></li>\n<li>Layered System</li>\n<li>Code-On-Demand (optional)</li>\n</ul>\n<h3 id=\"uniform-interface-발표-영상-11분-40초\"><a href=\"#uniform-interface-%EB%B0%9C%ED%91%9C-%EC%98%81%EC%83%81-11%EB%B6%84-40%EC%B4%88\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Uniform Interface (발표 영상 11분 40초)</h3>\n<details>\n<summary>상세</summary>\n<div markdown=\"1\">\n<p>Uniform Interface(일관된 인터페이스)란, Resource(URI)에 대한 요청을 통일되고, 한정적으로 수행하는 아키텍처 스타일을 의미합니다. 이것은 요청을 하는 Client가 플랫폼(Android, Ios, Jsp 등) 에 무관하며, 특정 언어나 기술에 종속받지 않는 특징을 의미합니다. 이러한 특징 덕분에 Rest API는 HTTP를 사용하는 모든 플랫폼에서 요청가능하며, Loosely Coupling(느슨한 결함) 형태를 갖게 되었습니다.</p>\n</div>\n</details>\n<ul>\n<li>\n<p>Identification of resources</p>\n<ul>\n<li>리소스가 URI로 식별되면 된다.</li>\n</ul>\n</li>\n<li>\n<p>manipulation of resources through represenations</p>\n<ul>\n<li>리소스를 요청할 때 서버는 리소스를 표현하여 응답한다.</li>\n<li>대표적인 API 예로는 HTML, JSON, XML이 있다.</li>\n<li>\n<p>콘텐츠 협상</p>\n<ul>\n<li>클라이언트가 클라이언트의 요구에 맞는 특정 표현을 요청할 수 있다.</li>\n<li>예를 들어 클라이언트는 리소스의 JSON 표현 또는 리소스의 XML 표현을 요청할 수 있다.</li>\n<li>서버는 그렇게 할 수 있는 경우 이 표현을 제공할 수 있다.</li>\n</ul>\n</li>\n<li>API에서 콘텐츠 협상을 사용하여 여러 클라이언트가 동일한 URL에서 다른 리소스 표현에 액세스할 수 있도록 할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p><strong>self-descrive messages</strong></p>\n<ul>\n<li>클라이언트가 resource를 가지고 어떤 일을 수행할때 필요한 모든 데이터가 응답되어야함.</li>\n<li>보통 안에 profile(docs) 링크를 명시하는식으로 구현.</li>\n</ul>\n</li>\n<li>\n<p><strong>hypermedia as the engine of appliaction state (HATEOAS)</strong></p>\n<ul>\n<li>거의 모든 rest api에서 지키지못함.</li>\n<li>어플리케이션의 상태가 하이퍼링크를 통해서 항상 전이가 되어야함.</li>\n<li>스프링에서는 spring-boot-hateoas 패키지로 좀 편하게 구현 가능.</li>\n</ul>\n</li>\n</ul>\n<details>\n<summary>좋은 API 예시(github API)</summary>\n<div markdown=\"1\">\n<pre class=\"language-xml\"><code class=\"language-xml\">{\n  \"timeline_url\": \"https://github.com/timeline\",\n  \"user_url\": \"https://github.com/{user}\",\n  \"current_user_public_url\": \"https://github.com/octocat\",\n  \"current_user_url\": \"https://github.com/octocat.private?token=abc123\",\n  \"current_user_actor_url\": \"https://github.com/octocat.private.actor?token=abc123\",\n  \"current_user_organization_url\": \"\",\n  \"current_user_organization_urls\": [\n    \"https://github.com/organizations/github/octocat.private.atom?token=abc123\"\n  ],\n  \"security_advisories_url\": \"https://github.com/security-advisories\",\n  \"_links\": {\n    \"timeline\": {\n      \"href\": \"https://github.com/timeline\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"user\": {\n      \"href\": \"https://github.com/{user}\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"current_user_public\": {\n      \"href\": \"https://github.com/octocat\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"current_user\": {\n      \"href\": \"https://github.com/octocat.private?token=abc123\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"current_user_actor\": {\n      \"href\": \"https://github.com/octocat.private.actor?token=abc123\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"current_user_organization\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"current_user_organizations\": [\n      {\n        \"href\": \"https://github.com/organizations/github/octocat.private.atom?token=abc123\",\n        \"type\": \"application/atom+xml\"\n      }\n    ],\n    \"security_advisories\": {\n      \"href\": \"https://github.com/security-advisories\",\n      \"type\": \"application/atom+xml\"\n    }\n  }\n}</code></pre>\n</div>\n</details>\n<h3 id=\"두-문제를-좀-더-자세히-살펴보자-발표-영상-37분-50초\"><a href=\"#%EB%91%90-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%A2%80-%EB%8D%94-%EC%9E%90%EC%84%B8%ED%9E%88-%EC%82%B4%ED%8E%B4%EB%B3%B4%EC%9E%90-%EB%B0%9C%ED%91%9C-%EC%98%81%EC%83%81-37%EB%B6%84-50%EC%B4%88\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>두 문제를 좀 더 자세히 살펴보자. (발표 영상 37분 50초)</h3>\n<ul>\n<li>\n<p>Self-descriptive message</p>\n<ul>\n<li>메시지 스스로 메시지에 대한 설명이 가능해야 한다.</li>\n<li>서버가 변해서 메시지가 변해도 클라이언트는 그 메시지를 보고 해석이 가능하다.</li>\n<li>확장 가능한 커뮤니케이션</li>\n</ul>\n</li>\n<li>\n<p>HATEOAS</p>\n<ul>\n<li>하이퍼미디어(링크)를 통해 애플리케이션 상태 변화가 가능해야 한다.</li>\n<li>링크 정보를 동적으로 바꿀 수 있다. (Versioning 할 필요 없이!)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"self-descriptive-message-해결-방법\"><a href=\"#self-descriptive-message-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Self-descriptive message 해결 방법</h3>\n<ul>\n<li>방법 1: 미디어 타입을 정의하고 IANA에 등록하고 그 미디어 타입을 리소스 리턴할 때 Content-Type으로 사용한다.</li>\n<li>\n<p>방법 2: profile 링크 헤더를 추가한다. (발표 영상 41분 50초)</p>\n<ul>\n<li><a href=\"http://test.greenbytes.de/tech/tc/httplink/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">브라우저들이 아직 스팩 지원을 잘 안해</a></li>\n<li>대안으로 <a href=\"http://stateless.co/hal_specification.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HAL</a>의 링크 데이터에 <a href=\"https://tools.ietf.org/html/draft-wilde-profile-link-04\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">profile 링크</a> 추가</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"hateoas-해결-방법\"><a href=\"#hateoas-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HATEOAS 해결 방법</h3>\n<ul>\n<li>\n<p>방법1: 데이터에 링크 제공</p>\n<ul>\n<li>링크를 어떻게 정의할 것인가? HAL</li>\n</ul>\n</li>\n<li>방법2: 링크 헤더나 Location을 제공</li>\n</ul>\n<br/>\n<h2 id=\"event-rest-api\"><a href=\"#event-rest-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>“Event” REST API</h2>\n<blockquote>\n<p><a href=\"https://gitlab.com/whiteship/natural\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">참고 자료</a></p>\n</blockquote>\n<p>이벤트 등록, 조회 및 수정 API</p>\n<h3 id=\"get-apievents\"><a href=\"#get-apievents\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GET /api/events</h3>\n<h4 id=\"이벤트-목록-조회-rest-api-로그인-안-한-상태\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%AA%A9%EB%A1%9D-%EC%A1%B0%ED%9A%8C-rest-api-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%95%88-%ED%95%9C-%EC%83%81%ED%83%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 목록 조회 REST API (로그인 안 한 상태)</h4>\n<ul>\n<li>\n<p>응답에 보여줘야 할 데이터</p>\n<ul>\n<li>이벤트 목록</li>\n<li>\n<p>링크</p>\n<ul>\n<li>self</li>\n<li>profile: 이벤트 목록 조회 API 문서로 링크</li>\n<li>get-an-event: 이벤트 하나 조회하는 API 링크</li>\n<li>next: 다음 페이지 (optional)</li>\n<li>prev: 이전 페이지 (optional)</li>\n</ul>\n</li>\n<li>\n<p>문서?</p>\n<ul>\n<li>스프링 REST Docs로 만들 예정</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"이벤트-목록-조회-rest-api-로그인-한-상태\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%AA%A9%EB%A1%9D-%EC%A1%B0%ED%9A%8C-rest-api-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%95%9C-%EC%83%81%ED%83%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 목록 조회 REST API (로그인 한 상태)</h4>\n<ul>\n<li>\n<p>응답에 보여줘야 할 데이터</p>\n<ul>\n<li>이벤트 목록</li>\n<li>\n<p>링크</p>\n<ul>\n<li>self</li>\n<li>profile: 이벤트 목록 조회 API 문서로 링크</li>\n<li>get-an-event: 이벤트 하나 조회하는 API 링크</li>\n<li><strong>create-new-event: 이벤트를 생성할 수 있는 API 링크</strong></li>\n<li>next: 다음 페이지 (optional)</li>\n<li>prev: 이전 페이지 (optional)</li>\n</ul>\n</li>\n<li>\n<p>로그인 한 상태???? (stateless라며..)</p>\n<ul>\n<li>아니, 사실은 Bearer 헤더에 유효한 AccessToken이 들어있는 경우!</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"post-apievents\"><a href=\"#post-apievents\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>POST /api/events</h3>\n<ul>\n<li>이벤트 생성</li>\n</ul>\n<h3 id=\"get-apieventsid\"><a href=\"#get-apieventsid\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GET /api/events/{id}</h3>\n<ul>\n<li>이벤트 하나 조회</li>\n</ul>\n<h3 id=\"put-apieventsid\"><a href=\"#put-apieventsid\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>PUT /api/events/{id}</h3>\n<ul>\n<li>이벤트 수정</li>\n</ul>\n<br/>\n<h2 id=\"events-api-사용-예제\"><a href=\"#events-api-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Events API 사용 예제</h2>\n<ol>\n<li>\n<p>(토큰 없이) 이벤트 목록 조회</p>\n<ul>\n<li>create 안 보임</li>\n</ul>\n</li>\n<li>access token 발급 받기 (A 사용자 로그인)</li>\n<li>\n<p>(유효한 A 토큰 가지고) 이벤트 목록 조회</p>\n<ul>\n<li>create event 보임</li>\n</ul>\n</li>\n<li>(유효한 A 토큰 가지고) 이벤트 만들기</li>\n<li>\n<p>(토큰 없이) 이벤트 조회</p>\n<ul>\n<li>update 링크 안 보임</li>\n</ul>\n</li>\n<li>\n<p>(유효한 A 토큰 가지고) 이벤트 조회</p>\n<ul>\n<li>update 링크 보임</li>\n</ul>\n</li>\n<li>access token 발급 받기 (B 사용자 로그인)</li>\n<li>\n<p>(유효한 B 토큰 가지고) 이벤트 조회</p>\n<ul>\n<li>update 안 보임</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"rest-api-테스트-클라이언트-애플리케이션\"><a href=\"#rest-api-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST API 테스트 클라이언트 애플리케이션</h3>\n<ul>\n<li>\n<p>크롬 플러그인</p>\n<ul>\n<li>Restlet</li>\n</ul>\n</li>\n<li>\n<p>애플리케이션</p>\n<ul>\n<li>Postman</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-부트-프로젝트-만들기\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 프로젝트 만들기</h2>\n<h3 id=\"추가할-의존성\"><a href=\"#%EC%B6%94%EA%B0%80%ED%95%A0-%EC%9D%98%EC%A1%B4%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>추가할 의존성</h3>\n<ul>\n<li>Web</li>\n<li>JPA</li>\n<li>HATEOAS</li>\n<li>REST Docs</li>\n<li>H2</li>\n<li>PostgreSQL</li>\n<li>Lombok</li>\n</ul>\n<h3 id=\"자바-버전-11로-시작\"><a href=\"#%EC%9E%90%EB%B0%94-%EB%B2%84%EC%A0%84-11%EB%A1%9C-%EC%8B%9C%EC%9E%91\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>자바 버전 11로 시작</h3>\n<ul>\n<li>자바는 여전히 무료다.</li>\n</ul>\n<h3 id=\"스프링-부트-핵심-원리\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 핵심 원리</h3>\n<ul>\n<li>의존성 설정 (pom.xml)</li>\n<li>자동 설정 (@EnableAutoConfiguration)</li>\n<li>내장 웹 서버 (의존성과 자동 설정의 일부)</li>\n<li>독립적으로 실행 가능한 JAR (pom.xml의 플러그인)</li>\n</ul>\n<h2 id=\"event-생성-api-구현-비즈니스-로직\"><a href=\"#event-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84-%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 생성 API 구현: 비즈니스 로직</h2>\n<h3 id=\"event-생성-api\"><a href=\"#event-%EC%83%9D%EC%84%B1-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 생성 API</h3>\n<ul>\n<li>\n<p>다음의 입력 값을 받는다.</p>\n<ul>\n<li>name</li>\n<li>description</li>\n<li>beginEnrollmentDateTime</li>\n<li>closeEnrollmentDateTime</li>\n<li>beginEventDateTime</li>\n<li>endEventDateTime</li>\n<li>location (optional) 이게 없으면 온라인 모임</li>\n<li>basePrice (optional)</li>\n<li>maxPrice (optional)</li>\n<li>limitOfEnrollment</li>\n</ul>\n</li>\n</ul>\n<p>basePrice와 maxPrice 경우의 수와 각각의 로직\n| basePrice | maxPrice | |\n| --------- | -------- | ------------------------------------------------------------ |\n| 0 | 100 | 선착순 등록 |\n| 0 | 0 | 무로 |\n| 100 | 0 | 무제한 경매 (높은 금액 낸 사람이 등록) |\n| 100 | 200 | 제한가 선착순 등록<br /><br />처음부터 200을 낸 사람은 선 등록<br /><br />100을 내고 등록할 수 있으나 더 많이 낸 사람에 의해 밀려날 수 있음. |</p>\n<ul>\n<li>\n<p>결과값</p>\n<ul>\n<li>id</li>\n<li>name</li>\n<li>...</li>\n<li>eventStatus: DRAFT, PUBLISHED, ENROLLMENT_STARTED, ...</li>\n<li>offline</li>\n<li>free</li>\n<li>\n<p>_links</p>\n<ul>\n<li>profile (for the self-descriptive message)</li>\n<li>self</li>\n<li>publish</li>\n<li>...</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"event-생성-api-구현-event-도메인-구현\"><a href=\"#event-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84-event-%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B5%AC%ED%98%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 생성 API 구현: Event 도메인 구현</h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Event</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> beginEnrollmentDateTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> closeEnrollmentDateTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> beginEventDateTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> endEventDateTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> location<span class=\"token punctuation\">;</span> <span class=\"token comment\">// (optional) 이게 없으면 온라인 모임</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> basePrice<span class=\"token punctuation\">;</span> <span class=\"token comment\">// (optional)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> maxPrice<span class=\"token punctuation\">;</span> <span class=\"token comment\">// (optional)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> limitOfEnrollment<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n<p>추가 필드</p>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> offline<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> free<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">EventStatus</span> eventStatus <span class=\"token operator\">=</span> <span class=\"token class-name\">EventStatus</span><span class=\"token punctuation\">.</span>DRAFT<span class=\"token punctuation\">;</span></code></pre>\n<p>EventStatus ENUM 추가</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">EventStatus</span> <span class=\"token punctuation\">{</span>\n\n    DRAFT<span class=\"token punctuation\">,</span> PUBLISHED<span class=\"token punctuation\">,</span> BEGAN_ENROLLMEND<span class=\"token punctuation\">,</span> CLOSED_ENROLLMENT<span class=\"token punctuation\">,</span> STARTED<span class=\"token punctuation\">,</span> ENDED\n\n<span class=\"token punctuation\">}</span></code></pre>\n<p>롬복 애노테이션 추가</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Getter</span> <span class=\"token annotation punctuation\">@Setter</span> <span class=\"token annotation punctuation\">@EqualsAndHashCode</span><span class=\"token punctuation\">(</span>of <span class=\"token operator\">=</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Builder</span> <span class=\"token annotation punctuation\">@NoArgsConstructor</span> <span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Event</span> <span class=\"token punctuation\">{</span></code></pre>\n<ul>\n<li>왜 @EqualsAndHasCode에서 of를 사용하는가</li>\n<li>왜 @Builder를 사용할 때 @AllArgsConstructor가 필요한가</li>\n<li>@Data를 쓰지 않는 이유</li>\n<li>애노테이션 줄일 수 없나</li>\n</ul>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/SpringLogo.214a68b.be0c3d9590430504675b948223711f21.png","size":{"width":820,"height":442},"sizes":"(max-width: 820px) 100vw, 820px","srcset":["/assets/static/SpringLogo.a67b0b2.be0c3d9590430504675b948223711f21.png 480w","/assets/static/SpringLogo.214a68b.be0c3d9590430504675b948223711f21.png 820w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 820 442' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-29f2605aef896f90944d207b9d4e9d4c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-29f2605aef896f90944d207b9d4e9d4c)' width='820' height='442' xlink:href='data:image/png%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAiAEADASIAAhEBAxEB/8QAGwABAAMBAAMAAAAAAAAAAAAAAAQFBgMCBwj/xAAqEAABAwQBAgUEAwAAAAAAAAABAgMEAAURIRIGMRNBUWGBFBUiMgdxof/EABgBAQADAQAAAAAAAAAAAAAAAAACAwQB/8QAIxEAAgICAgIBBQAAAAAAAAAAAAECEQMhEjEEQVEiYZGx4f/aAAwDAQACEQMRAD8A%2bnaUpQCs51b1SxYEobS348xwckt5wEj1Ua0dYx2BBX/IEt%2b9lrwRGQ7HD5AQcYB76OPT3rN5U5xglj026v4Ksrkl9Psr7H17OnXFqO5bUPpcVjEbPJPvvR/yvYDKy42FKTxVsFOc4I0RUWNLiuZFrZQhgDLkkN8G0pHocDkf60PWu8RYdbU6j9HFqWj3STo/Pf5rnjKcVU58hiUlpys7UpStRaKgXi5t2xplS21uuPuBpptBAKlEZ7kgDt51PqtvsF6fFS019ItPLK2pTXNCx8HII9RUMnLi%2bPZGV1oiOdRcJLMUWueZjrRdSxxSDpWDk5wB557VW3i%2b225Qm4cmBOedfWtox2xxdQ4jB4nfuDntquMKx3W3XmMIbyCW4jmVuNqUz%2bTmfCG8gAdt51VjbunXo90jXCRKQ7IDjzr5CMBSlpCQE%2bgAFYrz5Fxa%2bzuutfn2UXkkqKCNHs0e4JaMS7T5AeW0mO66Fp5oSFdsgY3561WjR1RHcaaSxDluTXHVsiGEgOJUj9snOABkbrxidPusX77gZCCj6h57gEnOFpSAPjFV1ytUy1z/ALjBDj0lUp50eGyXEhtYT%2bK0gg%2bXcVGMcuFNxVK/hda3%2bziU4LSNDaLu3c3pbSWH2HYqkpcS8ACCRnGjVlWd6Rjzg9c51yQpDkt1JSlaOBwlOM8cnA9Ad6rRVtwSlKCcu/7ovxtuNsUpSrSYpSlAKUpQClKUB//Z' /%3e%3c/svg%3e"}}},"context":{}}