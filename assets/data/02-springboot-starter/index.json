{"hash":"314c4422387ef2cae421ff768d6b6746d38a40d1","data":{"post":{"title":"[SpringBoot] SpringBoot 이해하기","path":"/02-springboot-starter/","date":"9. July 2020","timeToRead":10,"tags":[{"id":"Spring","title":"Spring","path":"/tag/Spring/"},{"id":"SpringBoot","title":"SpringBoot","path":"/tag/SpringBoot/"},{"id":"Backend","title":"Backend","path":"/tag/Backend/"},{"id":"SpringStarter","title":"SpringStarter","path":"/tag/SpringStarter/"}],"description":" 'Springboot 시작하기'의 두 번째 게시글입니다. ","content":"<h1 id=\"springboot-이해하기\"><a href=\"#springboot-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SpringBoot 이해하기</h1>\n<br/>\n<h2 id=\"의존성-관리-이해\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B4%80%EB%A6%AC-%EC%9D%B4%ED%95%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>의존성 관리 이해</h2>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-dependency-management\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-dependency-management</a></p>\n<p>의존성으로 다 정의가 되어있어서 적게 신경을 써도 된다는 것은 큰 장점입니다.</p>\n<p>또한 parent를 바꿔서 dependency를 줄 수 있습니다. 만약에 parent를 못바꾸는 상항이면 dependencyManagement에 dependency를 주는 방법이 있습니다.</p>\n<p>일반적으로는 <strong>parent를 설정</strong>하여 <strong>dependency를 주는 것이 중요</strong>합니다.</p>\n<p>의존성 관리 기능을 최대한 사용하는 것이 좋습니다.</p>\n<br/>\n<h2 id=\"의존성-관리-응용\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B4%80%EB%A6%AC-%EC%9D%91%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>의존성 관리 응용</h2>\n<ul>\n<li>버전을 관리해주는 의존성을 추가 (자동으로 버전 관리)</li>\n<li>버전 관리 안해주는 의존성 추가 (추가적으로 버전을 체크해줘야 함)</li>\n<li>\n<p>기존 의존성 버전 변경하기</p>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>spring.version</span><span class=\"token punctuation\">></span></span>5.0.6.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>spring.version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n<li><a href=\"https://mvnrepository.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://mvnrepository.com/</a></li>\n</ul>\n<p>버전을 관리해주는 version이 있으면 자동으로 spring boot 가 처리를 해주지만,\nversion이 없으면 따로 버전을 관리해줘야합니다.(다른 버전으로 처리가 안되는 경우가 발생할 수 있음. )</p>\n<h2 id=\"자동-설정-이해\"><a href=\"#%EC%9E%90%EB%8F%99-%EC%84%A4%EC%A0%95-%EC%9D%B4%ED%95%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>자동 설정 이해</h2>\n<ul>\n<li><code class=\"language-text\">@EnableAutoConfiguration</code> (<code class=\"language-text\">@SpringBootApplication</code> 안에 숨어 있음)</li>\n<li>\n<p>빈(Bean)은 두단계로 나눠서읽혀집니다.</p>\n<ul>\n<li>1단계: <code class=\"language-text\">@ComponentScan</code></li>\n<li>2단계: <code class=\"language-text\">@EnableAutoConfiguration</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@ComponentScan</code> -<code class=\"language-text\">@Component</code></p>\n<ul>\n<li><code class=\"language-text\">@Configuration @Repository @Service @Controller @RestController</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@EnableAutoConfiguration</code></p>\n<ul>\n<li>\n<p>spring.factories</p>\n<ul>\n<li>org.springframework.boot.autoconfigure.EnableAutoConfigu ration</li>\n</ul>\n</li>\n<li><code class=\"language-text\">@Configuration</code></li>\n<li><code class=\"language-text\">@ConditionalOnXxxYyyZzz</code></li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Application</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>대부분 이 방법으로 진행하는 것이 좋습니다.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootConfiguration</span>\n<span class=\"token annotation punctuation\">@ComponentScan</span>\n<span class=\"token comment\">// @EnableAutoConfiguration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Application</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SpringApplication</span> application <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        application<span class=\"token punctuation\">.</span><span class=\"token function\">setWebApplicationType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebApplicationType</span><span class=\"token punctuation\">.</span>NONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        application<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// SpringApplication.run(Application.class, args);</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>위와 같이 돌릴 수도 있습니다. 그러나 다음과 같이 하게된다면 Web 처리는 못하는 단점이 있습니다.</p>\n<h3 id=\"componentscan\"><a href=\"#componentscan\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@ComponentScan</h3>\n<p>자기 밑에 있는 모든 Component를 찾아서 Bin으로 등록시킵니다. (자기 자신 포함, 다른 패키지는 안됩니다.)</p>\n<h3 id=\"enableautoconfiguration\"><a href=\"#enableautoconfiguration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@EnableAutoConfiguration</h3>\n<p><code class=\"language-text\">: Maven: org.springframework.boot:spring-boot-autoconfiguration:2.3.1.REALSE\\spring-boot-autoconfigure-2.3.1.RELEASE.jar\\META-INF\\spring.factories</code></p>\n<p>자기 밑에 있는 모든 메타파일을 찾아준다. 위의 링크에서 EnableAutoConfiguration이 있는데 아래에 있는 모든 링크를 다 추가해준다.</p>\n<h3 id=\"configuration\"><a href=\"#configuration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configuration</h3>\n<p>Bean을 등록하는 java 설정파일입니다.</p>\n<p><code class=\"language-text\">Maven: org.springframework.boot:spring-boot-autoconfiguration:2.3.1.REALSE\\spring-boot-autoconfigure-2.3.1.RELEASE.jar\\org.springframework.boot.autoconfigure\\web\\servlet\\WebMvcAutoConfiguration</code></p>\n<p>에 들어가보면 Bean이 있을 때와 없을때를 구분해줍니다.</p>\n<p><code class=\"language-text\">autoConfiguartion</code> 를 설정하면 수많은 bean이 생성이 되고 적용이 됩니다.</p>\n<br/>\n<h2 id=\"자동-설정-만들기-starter와-autoconfigure\"><a href=\"#%EC%9E%90%EB%8F%99-%EC%84%A4%EC%A0%95-%EB%A7%8C%EB%93%A4%EA%B8%B0-starter%EC%99%80-autoconfigure\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>자동 설정 만들기. Starter와 AutoConfigure</h2>\n<p>유용한 단축키 :</p>\n<ul>\n<li><code class=\"language-text\">command + N</code> : get, set, toString() 등을 제공</li>\n<li><code class=\"language-text\">command + opt + L</code> : 줄 정렬</li>\n</ul>\n<p>AutoConfigure은 흠.. 현재 Process terminated 상태. => 나중에 하기</p>\n<p>문제는 Bean을 등록할려고 하는데 두가지 페이스. component scan 이 먼저 적용됩니다.\n두번째 페이스가 auto configuration인데 첫번째를 두번째 애가 덮어쓴거다.</p>\n<p>이거를 해결하는 방법은 아래와 같습니다.</p>\n<br/>\n<h2 id=\"자동-설정-만들기-configurationproperties\"><a href=\"#%EC%9E%90%EB%8F%99-%EC%84%A4%EC%A0%95-%EB%A7%8C%EB%93%A4%EA%B8%B0-configurationproperties\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>자동 설정 만들기. @ConfigurationProperties</h2>\n<p><strong>덮어쓰기 방지하기</strong></p>\n<ul>\n<li>@ConditionalOnMissingBean : 이 타입의 Bean이 없는 경우만 이 Bean을 등록하는 의미입니다.</li>\n</ul>\n<p><strong>빈 재정의 수고덜기</strong></p>\n<ul>\n<li>@ConfigurationProperties(“holoman”)</li>\n<li>@EnableConfigurationProperties(HolomanProperties)</li>\n<li>프로퍼티 키값 자동 완성</li>\n</ul>\n<p><code class=\"language-text\">src\\main\\resource\\application.properties</code> 파일을 만들어서 해당 파일에 다음과 같이 선언하면 이후에 사용하기 편해집니다.</p>\n<ul>\n<li>holoman.name = {쓰고 싶은 글, ex name}</li>\n<li>holoman.how-long = {쓰고 싶은 숫자. ex 10}</li>\n</ul>\n<p>또한 src\\main\\java\\me.whiteship\\HolomanProperties.class를 만들어서 name이랑 how-long에 대해 Get 이랑 set 다 정의하고 HolomanConfiguration에서</p>\n<p>@EnableConfigurationProperties(HolomanProperties)와 같이 선언해서 하기</p>\n<pre class=\"language-xml\"><code class=\"language-xml\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>​org.springframework.boot​<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>​spring-boot-configuration-processor​<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>optional</span><span class=\"token punctuation\">></span></span>​true​<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>optional</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"내장-서블릿-컨테이너\"><a href=\"#%EB%82%B4%EC%9E%A5-%EC%84%9C%EB%B8%94%EB%A6%BF-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>내장 서블릿 컨테이너</h2>\n<ul>\n<li>\n<p>스프링 부트는 서버가 아니다. 그저 툴이라고 생각하자</p>\n<ul>\n<li>톰캣 객체 생성</li>\n<li>포트 선정</li>\n<li>톰캣에 컨텍스트 추가</li>\n<li>서블릿 만들기</li>\n<li>톰캣에 서블릿 추가</li>\n<li>컨텍스트에 서블릿 맵핑</li>\n<li>톰캣 실행 및 대기</li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">LifecycleException</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Tomcat</span> tomcat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tomcat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttomcat<span class=\"token punctuation\">.</span><span class=\"token function\">setPort</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">Context</span> context <span class=\"token operator\">=</span> tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">addContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">HttpServlet</span> servlet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpServlet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> resp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token class-name\">PrintWriter</span> writer <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\twriter<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;html>&lt;head>&lt;title>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\twriter<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hey, Tomcat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\twriter<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/title>&lt;/head>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\twriter<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;body>&lt;h1>Hello Tomcat&lt;/h1>&lt;/body>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\twriter<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/html>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">String</span> servletName <span class=\"token operator\">=</span> <span class=\"token string\">\"helloServlet\"</span><span class=\"token punctuation\">;</span>\n\t\ttomcat<span class=\"token punctuation\">.</span><span class=\"token function\">addServlet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> servletName<span class=\"token punctuation\">,</span> servlet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcontext<span class=\"token punctuation\">.</span><span class=\"token function\">addServletMappingDecoded</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> servletName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\ttomcat<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">await</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code></pre>\n<p>다음은 예제 코드. 이게 다 Spring boot에서 해주는거구나로 이해하기</p>\n<ul>\n<li>\n<p>이 모든 과정을 보다 상세히 또 유연하고 설정하고 실행해주는게 바로 스프링 부트의 자동 설정</p>\n<ul>\n<li>\n<p>ServletWebServerFactoryAutoConfiguration (서블릿 웹 서버 생성)</p>\n<ul>\n<li>TomcatServletWebServerFactoryCustomizer(서버 커스터마이징)</li>\n</ul>\n</li>\n<li>\n<p>DispatcherServletAutoConfiguration</p>\n<ul>\n<li>서블릿 만들고 등록</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"내장-웹-서버-응용--컨테이너와-포트\"><a href=\"#%EB%82%B4%EC%9E%A5-%EC%9B%B9-%EC%84%9C%EB%B2%84-%EC%9D%91%EC%9A%A9--%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%99%80-%ED%8F%AC%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>내장 웹 서버 응용 : 컨테이너와 포트</h2>\n<p>다음과 같이 자동으로 쓰는 tomcat 대신 jetty를 쓸 수도 있다.</p>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-api.version</span><span class=\"token punctuation\">></span></span>3.1.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-api.version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Exclude the Tomcat dependency --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusion</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-tomcat<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusion</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusions</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- Use Jetty instead --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-jetty<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>해당 글에서 <dependencies></dependencies>를 안주면 에러가 나서. 에러 처리해주었음.</p>\n<ul>\n<li>다른 서블릿 컨테이너로 변경</li>\n<li>웹서버사용하지않기</li>\n<li>\n<p>포트</p>\n<ul>\n<li>server.port</li>\n<li>랜덤포트</li>\n<li>ApplicationListner<ServletWebServerInitializedEvent></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"내장-웹-서버-응용--https-http2\"><a href=\"#%EB%82%B4%EC%9E%A5-%EC%9B%B9-%EC%84%9C%EB%B2%84-%EC%9D%91%EC%9A%A9--https-http2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>내장 웹 서버 응용 : HTTPS, HTTP2</h2>\n<p>추가 공부 자료\n<a href=\"https://opentutorials.org/course/228/4894\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://opentutorials.org/course/228/4894</a>\n<a href=\"https://gist.github.com/keesun/f93f0b83d7232137283450e08a53c4fd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://gist.github.com/keesun/f93f0b83d7232137283450e08a53c4fd</a></p>\n<p>application.properties</p>\n<pre class=\"language-xml\"><code class=\"language-xml\">server.ssl.key-store: keystore.p12\nserver.ssl.key-store-password: 123456\nserver.ssl.keyStoreType: PKCS12\nserver.ssl.keyAlias: tomcat</code></pre>\n<p>generate-keystore.sh</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">keytool -genkey\n  -alias tomcat\n  -storetype PKCS12\n  -keyalg RSA\n  -keysize <span class=\"token number\">2048</span>\n  -keystore keystore.p12\n  -validity <span class=\"token number\">4000</span></code></pre>\n<ul>\n<li>\n<p>HTTPS 설정하기</p>\n<ul>\n<li>키스토어 만들기</li>\n<li>HTTP는 못쓰네?</li>\n</ul>\n</li>\n<li>\n<p>HTTP 커넥터는 코딩으로 설정하기</p>\n<ul>\n<li><a href=\"https://github.com/spring-projects/spring-boot/tree/v2.0.3.RELEASE/spring-boot-samples/spring-boot-sample-tomcat-multi-connectors\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/spring-projects/spring-boot/tree/v2.0.3.RELEASE/spring-boot-samples/spring-boot-sample-tomcat-multi-connectors</a></li>\n</ul>\n</li>\n<li>\n<p>HTTP2 설정</p>\n<ul>\n<li>server.http2.enable</li>\n<li>사용하는 서블릿 컨테이너 마다 다름</li>\n</ul>\n</li>\n</ul>\n<p>pom.xml</p>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusions</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusion</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-tomcatb<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusion</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-undertow<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>application.properties</p>\n<pre class=\"language-xml\"><code class=\"language-xml\">server.ssl.key-store: keystore.p12\nserver.ssl.key-store-password: 123456\nserver.ssl.keyStoreType: PKCS12\nserver.ssl.keyAlias: spring\nserver.port=8443\nserver.http2.enabled=true</code></pre>\n<p>http2를 사용할려면 꼭 <code class=\"language-text\">server.http2.enabled</code> 을 true로 해주어야한다.</p>\n<br/>\n<h2 id=\"톰캣-http2\"><a href=\"#%ED%86%B0%EC%BA%A3-http2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>톰캣 HTTP2</h2>\n<p>pom.xml</p>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span>UTF-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project.reporting.outputEncoding</span><span class=\"token punctuation\">></span></span>UT-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project.reporting.outputEncoding</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>java.version</span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>java.version</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tomcat.version</span><span class=\"token punctuation\">></span></span>9.0.18<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tomcat.version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>여기에 추가적으로 Project Setting에 Project에 version과, module을 맞춰줘야한다.\n그렇게 진행하면. 문제없이 http2로 돌아가는 것을 확인할 수 있다.</p>\n<ul>\n<li>JDK9와 Tomcat 9+ 추천</li>\n<li>\n<p>그이하는아래링크참고</p>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-web-servers.html#howto-configure-http2-tomcat\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-web-servers.html#howto-configure-http2-tomcat</a></li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"독립적으로-실행-가능한-jar\"><a href=\"#%EB%8F%85%EB%A6%BD%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%8B%A4%ED%96%89-%EA%B0%80%EB%8A%A5%ED%95%9C-jar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>독립적으로 실행 가능한 JAR</h2>\n<ul>\n<li>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/executable-jar.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.spring.io/spring-boot/docs/current/reference/html/executable-jar.html</a></p>\n<ul>\n<li>JAR 파일 하나로 실행 가능, 이걸로 앱이 돌아간다. - mvn package를 하면 실행 가능한 JAR 파일 “하나가\" 생성 됨.</li>\n<li>spring-maven-plugin이 해주는 일 (패키징)</li>\n<li>\n<p>과거 “uber” jar 를 사용</p>\n<ul>\n<li>모든 클래스 (의존성 및 애플리케이션)를 하나로 압축하는 방법</li>\n<li>\n<p>뭐가 어디에서 온건지 알 수가 없음</p>\n<ul>\n<li>무슨 라이브러리를 쓰는건지..</li>\n</ul>\n</li>\n<li>내용은 다르지만 이름이 같은 파일은 또 어떻게?</li>\n</ul>\n</li>\n<li>\n<p>스프링 부트의 전략</p>\n<ul>\n<li><strong>내장 JAR</strong> : 기본적으로 자바에는 내장 JAR를 로딩하는 표준적인 방법이 없음.</li>\n<li>애플리케이션 클래스와 라이브러리 위치 구분</li>\n<li>org.springframework.boot.loader.jar.JarFile을 사용해서 내장 JAR를 읽는다.</li>\n<li>org.springframework.boot.loader.Launcher를 사용해서 실행한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-부트-원리-정리\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%EC%9B%90%EB%A6%AC-%EC%A0%95%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 원리 정리</h2>\n<ul>\n<li>\n<p>의존성 관리</p>\n<ul>\n<li>이것만 넣어도 이만큼이나 다 알아서 가져오네?</li>\n</ul>\n</li>\n<li>\n<p><strong>자동 설정</strong></p>\n<ul>\n<li>@EnableAutoConfiguration이 뭘 해주는지 알겠어.</li>\n</ul>\n</li>\n<li>\n<p>내장 웹 서버</p>\n<ul>\n<li>아 스프링 부트가 서버가 아니라 내장 서버를 실행하는 거군.</li>\n</ul>\n</li>\n<li>\n<p>독립적으로 실행 가능한 JAR</p>\n<ul>\n<li>spring-boot-maven 플러그인이 이런걸 해주는구나..</li>\n</ul>\n</li>\n</ul>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/SpringLogo.214a68b.be0c3d9590430504675b948223711f21.png","size":{"width":820,"height":442},"sizes":"(max-width: 820px) 100vw, 820px","srcset":["/assets/static/SpringLogo.a67b0b2.be0c3d9590430504675b948223711f21.png 480w","/assets/static/SpringLogo.214a68b.be0c3d9590430504675b948223711f21.png 820w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 820 442' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-29f2605aef896f90944d207b9d4e9d4c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-29f2605aef896f90944d207b9d4e9d4c)' width='820' height='442' xlink:href='data:image/png%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAiAEADASIAAhEBAxEB/8QAGwABAAMBAAMAAAAAAAAAAAAAAAQFBgMCBwj/xAAqEAABAwQBAgUEAwAAAAAAAAABAgMEAAURIRIGMRNBUWGBFBUiMgdxof/EABgBAQADAQAAAAAAAAAAAAAAAAACAwQB/8QAIxEAAgICAgIBBQAAAAAAAAAAAAECEQMhEjEEQVEiYZGx4f/aAAwDAQACEQMRAD8A%2bnaUpQCs51b1SxYEobS348xwckt5wEj1Ua0dYx2BBX/IEt%2b9lrwRGQ7HD5AQcYB76OPT3rN5U5xglj026v4Ksrkl9Psr7H17OnXFqO5bUPpcVjEbPJPvvR/yvYDKy42FKTxVsFOc4I0RUWNLiuZFrZQhgDLkkN8G0pHocDkf60PWu8RYdbU6j9HFqWj3STo/Pf5rnjKcVU58hiUlpys7UpStRaKgXi5t2xplS21uuPuBpptBAKlEZ7kgDt51PqtvsF6fFS019ItPLK2pTXNCx8HII9RUMnLi%2bPZGV1oiOdRcJLMUWueZjrRdSxxSDpWDk5wB557VW3i%2b225Qm4cmBOedfWtox2xxdQ4jB4nfuDntquMKx3W3XmMIbyCW4jmVuNqUz%2bTmfCG8gAdt51VjbunXo90jXCRKQ7IDjzr5CMBSlpCQE%2bgAFYrz5Fxa%2bzuutfn2UXkkqKCNHs0e4JaMS7T5AeW0mO66Fp5oSFdsgY3561WjR1RHcaaSxDluTXHVsiGEgOJUj9snOABkbrxidPusX77gZCCj6h57gEnOFpSAPjFV1ytUy1z/ALjBDj0lUp50eGyXEhtYT%2bK0gg%2bXcVGMcuFNxVK/hda3%2bziU4LSNDaLu3c3pbSWH2HYqkpcS8ACCRnGjVlWd6Rjzg9c51yQpDkt1JSlaOBwlOM8cnA9Ad6rRVtwSlKCcu/7ovxtuNsUpSrSYpSlAKUpQClKUB//Z' /%3e%3c/svg%3e"}}},"context":{}}