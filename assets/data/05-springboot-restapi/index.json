{"hash":"441d039ecb7f9b8f8ede21c119627ec9bc8d91ab","data":{"post":{"title":"[SpringBoot API] SpringBoot REST API : REST API 보안 적용","path":"/05-springboot-restapi/","date":"21. September 2020","timeToRead":7,"tags":[{"id":"Spring","title":"Spring","path":"/tag/Spring/"},{"id":"SpringBoot","title":"SpringBoot","path":"/tag/SpringBoot/"},{"id":"SpringBoot API","title":"SpringBoot API","path":"/tag/SpringBoot%20API/"},{"id":"REST API","title":"REST API","path":"/tag/REST%20API/"},{"id":"Backend","title":"Backend","path":"/tag/Backend/"}],"description":" 'SpringBoot REST API'의 다섯번째 게시글입니다. ","content":"<h1 id=\"rest-api-보안-적용\"><a href=\"#rest-api-%EB%B3%B4%EC%95%88-%EC%A0%81%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST API 보안 적용</h1>\n<br/>\n<h2 id=\"account-도메인-추가\"><a href=\"#account-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%B6%94%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Account 도메인 추가</h2>\n<h3 id=\"oauth2로-인증을-하려면-일단-account-부터\"><a href=\"#oauth2%EB%A1%9C-%EC%9D%B8%EC%A6%9D%EC%9D%84-%ED%95%98%EB%A0%A4%EB%A9%B4-%EC%9D%BC%EB%8B%A8-account-%EB%B6%80%ED%84%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>OAuth2로 인증을 하려면 일단 Account 부터</h3>\n<ul>\n<li>id</li>\n<li>email</li>\n<li>password</li>\n<li>roles</li>\n</ul>\n<h3 id=\"accountroles\"><a href=\"#accountroles\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>AccountRoles</h3>\n<ul>\n<li>ADMIN, USER</li>\n</ul>\n<h3 id=\"jpa-맵핑\"><a href=\"#jpa-%EB%A7%B5%ED%95%91\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JPA 맵핑</h3>\n<ul>\n<li>@Table(“Users”)</li>\n</ul>\n<h3 id=\"jpa-enumeration-collection-mapping\"><a href=\"#jpa-enumeration-collection-mapping\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JPA enumeration collection mapping</h3>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@ElementCollection</span><span class=\"token punctuation\">(</span>fetch <span class=\"token operator\">=</span> <span class=\"token class-name\">FetchType</span><span class=\"token punctuation\">.</span>EAGER<span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Enumerated</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnumType</span><span class=\"token punctuation\">.</span>STRING<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AccountRole</span><span class=\"token punctuation\">></span></span> roles<span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"event에-owner-추가\"><a href=\"#event%EC%97%90-owner-%EC%B6%94%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event에 owner 추가</h3>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@ManyToOne</span>\n    <span class=\"token class-name\">Account</span> manager<span class=\"token punctuation\">;</span></code></pre>\n<br/>\n<h2 id=\"스프링-시큐리티\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티</h2>\n<h3 id=\"스프링-시큐리티-1\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티</h3>\n<ul>\n<li>웹 시큐리티 (Filter 기반 시큐리티)</li>\n<li>메소드 시큐리티</li>\n<li>\n<p>이 둘 다 Security Interceptor를 사용합니다.</p>\n<ul>\n<li>리소스에 접근을 허용할 것이냐 말것이냐를 결정하는 로직이 들어있음.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/93766241-19958000-fc51-11ea-82da-7b4f7b41a230.png\" alt=\"image\"></p>\n<h3 id=\"의존성-추가\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%B6%94%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>의존성 추가</h3>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.security.oauth.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-security-oauth2-autoconfigure<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.1.0.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<ul>\n<li>\n<p>테스트 다 깨짐 (401 Unauthorized)</p>\n<ul>\n<li>깨지는 이유는 스프링 부트가 제공하는 스프링 시큐리티 기본 설정 때문.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"예외-테스트\"><a href=\"#%EC%98%88%EC%99%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>예외 테스트</h2>\n<ol>\n<li>@Test(expected)</li>\n</ol>\n<p>예외 타입만 확인 가능</p>\n<ol start=\"2\">\n<li>try-catch</li>\n</ol>\n<p>예외 타입과 메시지 확인 가능.\n하지만 코드가 다소 복잡.</p>\n<ol start=\"3\">\n<li>@Rule ExpectedException</li>\n</ol>\n<p>코드는 간결하면서 예외 타입과 메시지 모두 확인 가능</p>\n<br/>\n<h2 id=\"스프링-시큐리티-기본-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 기본 설정</h2>\n<h3 id=\"시큐리티-필터를-적용하기-않음\"><a href=\"#%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%ED%95%84%ED%84%B0%EB%A5%BC-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%95%8A%EC%9D%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>시큐리티 필터를 적용하기 않음...</h3>\n<ul>\n<li>/docs/index.html</li>\n</ul>\n<h3 id=\"로그인-없이-접근-가능\"><a href=\"#%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%97%86%EC%9D%B4-%EC%A0%91%EA%B7%BC-%EA%B0%80%EB%8A%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>로그인 없이 접근 가능</h3>\n<ul>\n<li>GET /api/events</li>\n<li>GET /api/events/{id}</li>\n</ul>\n<h3 id=\"로그인-해야-접근-가능\"><a href=\"#%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%95%B4%EC%95%BC-%EC%A0%91%EA%B7%BC-%EA%B0%80%EB%8A%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>로그인 해야 접근 가능</h3>\n<ul>\n<li>나머지 다...</li>\n<li>POST /api/events</li>\n<li>PUT /api/events/{id{</li>\n<li>...</li>\n</ul>\n<h3 id=\"스프링-시큐리티-oauth-20\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-oauth-20\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 OAuth 2.0</h3>\n<ul>\n<li>\n<p>AuthorizationServer: OAuth2 토큰 발행(/oauth/token) 및 토큰 인증(/oauth/authorize)</p>\n<ul>\n<li>Oder 0 (리소스 서버 보다 우선 순위가 높다.)</li>\n</ul>\n</li>\n<li>\n<p>ResourceServer: 리소스 요청 인증 처리 (OAuth 2 토큰 검사)</p>\n<ul>\n<li>Oder 3 (이 값은 현재 고칠 수 없음)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"스프링-시큐리티-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 설정</h3>\n<ul>\n<li>@EnableWebSecurity</li>\n<li>@EnableGlobalMethodSecurity</li>\n<li>extends WebSecurityConfigurerAdapter</li>\n<li>PasswordEncoder: PasswordEncoderFactories.createDelegatingPassworkEncoder()</li>\n<li>TokenStore: InMemoryTokenStore</li>\n<li>AuthenticationManagerBean</li>\n<li>\n<p>configure(AuthenticationManagerBuidler auth)</p>\n<ul>\n<li>userDetailsService</li>\n<li>passwordEncoder</li>\n</ul>\n</li>\n<li>\n<p>configure(HttpSecurity http)</p>\n<ul>\n<li>/docs/**: permitAll</li>\n</ul>\n</li>\n<li>\n<p>configure(WebSecurty web)</p>\n<ul>\n<li>\n<p>ignore</p>\n<ul>\n<li>/docs/**</li>\n<li>/favicon.ico</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>PathRequest.toStaticResources() 사용하기</li>\n</ul>\n<br/>\n<h2 id=\"스프링-시큐리티-폼-인증-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%ED%8F%BC-%EC%9D%B8%EC%A6%9D-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 폼 인증 설정</h2>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        http\n            <span class=\"token punctuation\">.</span><span class=\"token function\">anonymous</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">mvcMatchers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/api/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>익명 사용자 사용 활성화</li>\n<li>\n<p>폼 인증 방식 활성화</p>\n<ul>\n<li>스프링 시큐리티가 기본 로그인 페이지 제공</li>\n</ul>\n</li>\n<li>\n<p>요청에 인증 적용</p>\n<ul>\n<li>/api 이하 모든 GET 요청에 인증이 필요함. (permitAll()을 사용하여 인증이 필요없이 익명으로 접근이 가능케 할 수 있음)</li>\n<li>그밖에 모은 요청도 인증이 필요함.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-시큐리티-oauth-2-설정--인증-서버-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-oauth-2-%EC%84%A4%EC%A0%95--%EC%9D%B8%EC%A6%9D-%EC%84%9C%EB%B2%84-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 OAuth 2 설정 : 인증 서버 설정</h2>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.security<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-security-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>${spring-security.version}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"토큰-발행-테스트\"><a href=\"#%ED%86%A0%ED%81%B0-%EB%B0%9C%ED%96%89-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토큰 발행 테스트</h3>\n<ul>\n<li>User</li>\n<li>Client</li>\n<li>\n<p>POST /oauth/token</p>\n<ul>\n<li>HTTP Basic 인증 헤더 (클라이언트 아이디 + 클라이언트 시크릿)</li>\n<li>\n<p>요청 매개변수 (MultiValuMap&#x3C;String, String>)</p>\n<ul>\n<li>grant_type: password</li>\n<li>username</li>\n<li>password</li>\n</ul>\n</li>\n<li>응답에 access_token 나오는지 확인</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"grant-type-password\"><a href=\"#grant-type-password\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Grant Type: Password</h3>\n<ul>\n<li>Granty Type: 토큰 받아오는 방법</li>\n<li>서비스 오너가 만든 클라이언트에서 사용하는 Grant Type</li>\n<li><a href=\"https://developer.okta.com/blog/2018/06/29/what-is-the-oauth2-password-grant\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.okta.com/blog/2018/06/29/what-is-the-oauth2-password-grant</a></li>\n</ul>\n<h3 id=\"authorizationserver-설정\"><a href=\"#authorizationserver-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>AuthorizationServer 설정</h3>\n<ul>\n<li>@EnableAuthorizationServer</li>\n<li>extends AuthorizationServerConfigurerAdapter</li>\n<li>\n<p>configure(AuthorizationServerSecurityConfigurer security)</p>\n<ul>\n<li>PassswordEncode 설정</li>\n</ul>\n</li>\n<li>\n<p>configure(ClientDetailsServiceConfigurer clients)</p>\n<ul>\n<li>클라이언트 설정</li>\n<li>\n<p>grantTypes</p>\n<ul>\n<li>password</li>\n<li>refresh_token</li>\n</ul>\n</li>\n<li>scopes</li>\n<li>secret / name</li>\n<li>accessTokenValiditySeconds</li>\n<li>refreshTokenValiditySeconds</li>\n</ul>\n</li>\n<li>\n<p>AuthorizationServerEndpointsConfigurer</p>\n<ul>\n<li>tokenStore</li>\n<li>authenticationMaanger</li>\n<li>userDetailsService</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-시큐리티-oauth-2-설정-리소스-서버-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-oauth-2-%EC%84%A4%EC%A0%95-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%84%9C%EB%B2%84-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 OAuth 2 설정: 리소스 서버 설정</h2>\n<h3 id=\"테스트-수정\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%88%98%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 수정</h3>\n<ul>\n<li>GET을 제외하고 모두 엑세스 토큰을 가지고 요청 하도록 테스트 수정</li>\n</ul>\n<h3 id=\"resourceserver-설정\"><a href=\"#resourceserver-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ResourceServer 설정</h3>\n<ul>\n<li>@EnableResourceServer</li>\n<li>extends ResourceServerConfigurerAdapter</li>\n<li>\n<p>configure(ResourceServerSecurityConfigurer resources)</p>\n<ul>\n<li>리소스 ID</li>\n</ul>\n</li>\n<li>\n<p>configure(HttpSecurity http)</p>\n<ul>\n<li>anonymous</li>\n<li>GET /api/** : permit all</li>\n<li>POST /api/**: authenticated</li>\n<li>PUT /api/**: authenticated</li>\n<li>\n<p>에러 처리</p>\n<ul>\n<li>accessDeniedHandler(OAuth2AccessDeniedHandler())</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"문자열을-외부-설정으로-빼내기\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84-%EC%99%B8%EB%B6%80-%EC%84%A4%EC%A0%95%EC%9C%BC%EB%A1%9C-%EB%B9%BC%EB%82%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>문자열을 외부 설정으로 빼내기</h2>\n<h3 id=\"기본-유저-만들기\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%9C%A0%EC%A0%80-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>기본 유저 만들기</h3>\n<ul>\n<li>\n<p>ApplicationRunner</p>\n<ul>\n<li>Admin</li>\n<li>User</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"외부-설정으로-기본-유저와-클라이언트-정보-빼내기\"><a href=\"#%EC%99%B8%EB%B6%80-%EC%84%A4%EC%A0%95%EC%9C%BC%EB%A1%9C-%EA%B8%B0%EB%B3%B8-%EC%9C%A0%EC%A0%80%EC%99%80-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%A0%95%EB%B3%B4-%EB%B9%BC%EB%82%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>외부 설정으로 기본 유저와 클라이언트 정보 빼내기</h3>\n<ul>\n<li>@ConfigurationProperties</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-api-점검\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-api-%EC%A0%90%EA%B2%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 API 점검</h2>\n<h3 id=\"토큰-발급-받기\"><a href=\"#%ED%86%A0%ED%81%B0-%EB%B0%9C%EA%B8%89-%EB%B0%9B%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토큰 발급 받기</h3>\n<ul>\n<li>POST /oauth/token</li>\n<li>\n<p>BASIC authentication 헤더</p>\n<ul>\n<li>client Id(myApp) + client secret(pass)</li>\n</ul>\n</li>\n<li>\n<p>요청 본문 폼</p>\n<ul>\n<li>username: admin@email.com</li>\n<li>password: admin</li>\n<li>grant_type: password</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/94319205-1ab60c80-ffc5-11ea-8fa6-9bcce9e4434a.png\" alt=\"image\"></p>\n<h3 id=\"토큰-갱신하기\"><a href=\"#%ED%86%A0%ED%81%B0-%EA%B0%B1%EC%8B%A0%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토큰 갱신하기</h3>\n<ul>\n<li>POST /oauth/token</li>\n<li>\n<p>BASIC authentication 헤더</p>\n<ul>\n<li>client Id(myApp) + client secret(pass)</li>\n</ul>\n</li>\n<li>\n<p>요청 본문 폼</p>\n<ul>\n<li>token: 처음에 발급받았던 refersh 토큰</li>\n<li>grant_type: refresh_token</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/94319161-06720f80-ffc5-11ea-98cf-d9826e6c834a.png\" alt=\"image\"></p>\n<h3 id=\"이벤트-목록-조회-api\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%AA%A9%EB%A1%9D-%EC%A1%B0%ED%9A%8C-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 목록 조회 API</h3>\n<ul>\n<li>\n<p>로그인 했을 때</p>\n<ul>\n<li>이벤트 생성 링크 제공</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"이벤트-조회\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A1%B0%ED%9A%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 조회</h3>\n<ul>\n<li>\n<p>로그인 했을 때</p>\n<ul>\n<li>이벤트 Manager인 경우에는 이벤트 수정 링크 제공</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-시큐리티-현재-사용자\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%ED%98%84%EC%9E%AC-%EC%82%AC%EC%9A%A9%EC%9E%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 현재 사용자</h2>\n<h3 id=\"securitycontext\"><a href=\"#securitycontext\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SecurityContext</h3>\n<ul>\n<li>자바 ThreadLocal 기반 구현으로 인증 정보를 담고 있다.</li>\n<li>인증 정보 꺼내는 방법:\n<code class=\"language-text\">Authentication authentication = SecurityContextHolder.getContext().getAuthentication();</code></li>\n</ul>\n<h3 id=\"authenticationprincipal-springsecurityuser-user\"><a href=\"#authenticationprincipal-springsecurityuser-user\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@AuthenticationPrincipal spring.security.User user</h3>\n<ul>\n<li>인증 안한 경우에 null</li>\n<li>인증 한 경우에는 username과 authorities 참조 가능</li>\n</ul>\n<h3 id=\"springsecurityuser를-상속받는-클래스를-구현하면\"><a href=\"#springsecurityuser%EB%A5%BC-%EC%83%81%EC%86%8D%EB%B0%9B%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EB%A9%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>spring.security.User를 상속받는 클래스를 구현하면</h3>\n<ul>\n<li>도메인 User를 받을 수 있다.</li>\n<li>@AuthenticationPrincipa <code class=\"language-text\">me.whiteship.user.</code>UserAdapter</li>\n<li>Adatepr.getUser().getId()</li>\n</ul>\n<h3 id=\"spel을-사용하면\"><a href=\"#spel%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SpEL을 사용하면</h3>\n<ul>\n<li>@AuthenticationPrincipa(expression=”account”) <code class=\"language-text\">me.whiteship.user.Account</code></li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>PARAMETER<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@AuthenticationPrincipal</span><span class=\"token punctuation\">(</span>expression <span class=\"token operator\">=</span> <span class=\"token string\">\"account\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">CurrentUser</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"커스텀-애노테이션을-만들면\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%95%A0%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EC%9D%84-%EB%A7%8C%EB%93%A4%EB%A9%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>커스텀 애노테이션을 만들면</h3>\n<ul>\n<li>@CurrentUser Account account</li>\n<li>엇? 근데 인증 안하고 접근하면..?</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\">expression <span class=\"token operator\">=</span> <span class=\"token string\">\"#this == 'anonymousUser' ? null : account\"</span></code></pre>\n<ul>\n<li>현재 인증 정보가 anonymousUse 인 경우에는 null을 보내고 아니면 “account”를 꺼내준다.</li>\n</ul>\n<h3 id=\"조회-api-개선\"><a href=\"#%EC%A1%B0%ED%9A%8C-api-%EA%B0%9C%EC%84%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>조회 API 개선</h3>\n<ul>\n<li>현재 조회하는 사용자가 owner인 경우에 update 링크 추가 (HATEOAS)</li>\n</ul>\n<h3 id=\"수정-api-개선\"><a href=\"#%EC%88%98%EC%A0%95-api-%EA%B0%9C%EC%84%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>수정 API 개선</h3>\n<ul>\n<li>현재 사용자가 이벤트 owner가 아닌 경우에 403 에러 발생</li>\n</ul>\n<br/>\n<h2 id=\"events-api-개선-출력값-제한하기\"><a href=\"#events-api-%EA%B0%9C%EC%84%A0-%EC%B6%9C%EB%A0%A5%EA%B0%92-%EC%A0%9C%ED%95%9C%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Events API 개선: 출력값 제한하기</h2>\n<h3 id=\"생성-api-개선\"><a href=\"#%EC%83%9D%EC%84%B1-api-%EA%B0%9C%EC%84%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>생성 API 개선</h3>\n<ul>\n<li>Event owner 설정</li>\n<li>응답에서 owner의 id만 보내 줄 것.</li>\n</ul>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test 3PISM1Ju\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test event\"</span><span class=\"token punctuation\">,</span>\n...\n  <span class=\"token property\">\"free\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token property\">\"eventStatus\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"DRAFT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"owner\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"email\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"keesun@email.com\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"password\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"{bcrypt}$2a$10$3z/rHmeYsKpoOQR3aUq38OmZjZNsrGfRZxSnmpLfL3lpLxjD5/JZ6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"roles\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"USER\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ADMIN\"</span> <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre>\n<ul>\n<li>JsonSerializer<User> 구현</li>\n<li>@JsonSerialize(using) 설정</li>\n</ul>\n<br/>\n<h2 id=\"깨진-테스트-살펴보기\"><a href=\"#%EA%B9%A8%EC%A7%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>깨진 테스트 살펴보기</h2>\n<h3 id=\"eventcontrollertestsupdateevent\"><a href=\"#eventcontrollertestsupdateevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EventControllerTests.updateEvent()</h3>\n<ul>\n<li>깨지는 이유</li>\n<li>해결 방법</li>\n</ul>\n<h3 id=\"eventcontrollertestsgetevent\"><a href=\"#eventcontrollertestsgetevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EventControllerTests.getEvent()</h3>\n<ul>\n<li>깨지는 이유</li>\n<li>해결 방법</li>\n</ul>\n<h3 id=\"demoapplicationtests\"><a href=\"#demoapplicationtests\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DemoApplicationTests</h3>\n<ul>\n<li>깨지는 이유</li>\n<li>해결 방법</li>\n</ul>\n<br/>\n<h2 id=\"스프링-부트-225-버전으로-업데이트\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-225-%EB%B2%84%EC%A0%84%EC%9C%BC%EB%A1%9C-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 2.2.5 버전으로 업데이트</h2>\n<h3 id=\"현재-스프링-부트-최신-권장-버전은-225\"><a href=\"#%ED%98%84%EC%9E%AC-%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%EC%B5%9C%EC%8B%A0-%EA%B6%8C%EC%9E%A5-%EB%B2%84%EC%A0%84%EC%9D%80-225\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>현재 스프링 부트 최신 권장 버전은 2.2.5</h3>\n<ul>\n<li><a href=\"https://spring.io/projects/spring-boot\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://spring.io/projects/spring-boot</a></li>\n</ul>\n<h3 id=\"스프링-부트-버전을-올리면-바뀔-수-있는-일\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%EB%B2%84%EC%A0%84%EC%9D%84-%EC%98%AC%EB%A6%AC%EB%A9%B4-%EB%B0%94%EB%80%94-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 버전을 올리면 바뀔 수 있는 일</h3>\n<ul>\n<li>기본 (자동) 설정 값 변경</li>\n<li>의존성 변경</li>\n<li>기존 애플리케이션의 동작이 바뀌거나 컴파일 에러가 발생할 수 있다.</li>\n</ul>\n<h3 id=\"스프링-부트-22-주요-변화\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-22-%EC%A3%BC%EC%9A%94-%EB%B3%80%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 2.2.* 주요 변화</h3>\n<ul>\n<li>JUnit 4 -> JUnit 5</li>\n<li>스프링 HATEOAS 버전이 올라가면서 스프링 HATEOAS의 API가 바뀌었다.</li>\n</ul>\n<h3 id=\"스프링-hateoas\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-hateoas\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 HATEOAS</h3>\n<ul>\n<li>Resource -> EntityModel</li>\n<li>Resources -> CollectionModel</li>\n<li>PagedResrouces -> PagedModel</li>\n<li>ResourceSupport -> RepresentationModel</li>\n<li>assembler.toResource -> assembler.toModel</li>\n<li>org.springframework.hateoas.mvc.ControllerLinkBuilder -> org.springframework.hateoas.server.mvc.WebMvcLinkBuilder</li>\n<li>MediaTypes 중에 (UTF8)인코딩이 들어간 상수 제거.</li>\n</ul>\n<h3 id=\"junit-5\"><a href=\"#junit-5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JUnit 5</h3>\n<ul>\n<li>org.junit -> org.junit.jupiter</li>\n<li>@Ignore -> @Disabled</li>\n<li>@Before, @After -> @BeforeEach, @AfterEach</li>\n<li>@TestDescription (우리가 만든거) -> @DisplayName</li>\n</ul>\n<h3 id=\"스프링-mvc-변경\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-mvc-%EB%B3%80%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 MVC 변경</h3>\n<ul>\n<li>MediaType 중에 (UTF8)인코딩이 들어간 상수 deprecation.</li>\n</ul>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/SpringLogo.214a68b.be0c3d9590430504675b948223711f21.png","size":{"width":820,"height":442},"sizes":"(max-width: 820px) 100vw, 820px","srcset":["/assets/static/SpringLogo.a67b0b2.be0c3d9590430504675b948223711f21.png 480w","/assets/static/SpringLogo.214a68b.be0c3d9590430504675b948223711f21.png 820w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 820 442' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-29f2605aef896f90944d207b9d4e9d4c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-29f2605aef896f90944d207b9d4e9d4c)' width='820' height='442' xlink:href='data:image/png%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAiAEADASIAAhEBAxEB/8QAGwABAAMBAAMAAAAAAAAAAAAAAAQFBgMCBwj/xAAqEAABAwQBAgUEAwAAAAAAAAABAgMEAAURIRIGMRNBUWGBFBUiMgdxof/EABgBAQADAQAAAAAAAAAAAAAAAAACAwQB/8QAIxEAAgICAgIBBQAAAAAAAAAAAAECEQMhEjEEQVEiYZGx4f/aAAwDAQACEQMRAD8A%2bnaUpQCs51b1SxYEobS348xwckt5wEj1Ua0dYx2BBX/IEt%2b9lrwRGQ7HD5AQcYB76OPT3rN5U5xglj026v4Ksrkl9Psr7H17OnXFqO5bUPpcVjEbPJPvvR/yvYDKy42FKTxVsFOc4I0RUWNLiuZFrZQhgDLkkN8G0pHocDkf60PWu8RYdbU6j9HFqWj3STo/Pf5rnjKcVU58hiUlpys7UpStRaKgXi5t2xplS21uuPuBpptBAKlEZ7kgDt51PqtvsF6fFS019ItPLK2pTXNCx8HII9RUMnLi%2bPZGV1oiOdRcJLMUWueZjrRdSxxSDpWDk5wB557VW3i%2b225Qm4cmBOedfWtox2xxdQ4jB4nfuDntquMKx3W3XmMIbyCW4jmVuNqUz%2bTmfCG8gAdt51VjbunXo90jXCRKQ7IDjzr5CMBSlpCQE%2bgAFYrz5Fxa%2bzuutfn2UXkkqKCNHs0e4JaMS7T5AeW0mO66Fp5oSFdsgY3561WjR1RHcaaSxDluTXHVsiGEgOJUj9snOABkbrxidPusX77gZCCj6h57gEnOFpSAPjFV1ytUy1z/ALjBDj0lUp50eGyXEhtYT%2bK0gg%2bXcVGMcuFNxVK/hda3%2bziU4LSNDaLu3c3pbSWH2HYqkpcS8ACCRnGjVlWd6Rjzg9c51yQpDkt1JSlaOBwlOM8cnA9Ad6rRVtwSlKCcu/7ovxtuNsUpSrSYpSlAKUpQClKUB//Z' /%3e%3c/svg%3e"}}},"context":{}}