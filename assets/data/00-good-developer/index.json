{"hash":"789c289f730ce10c0bf627a2164c6d2e51781270","data":{"post":{"title":"[Others] 좋은 개발자가 되기 위한 19가지","path":"/00-good-developer/","date":"21. October 2020","timeToRead":9,"tags":[{"id":"Others","title":"Others","path":"/tag/Others/"},{"id":"Developer","title":"Developer","path":"/tag/Developer/"}],"description":" 좋은 개발자가 되기 위한 19가지의 방법입니다.","content":"<h1 id=\"좋은-개발자가-되기-위한-19-가지-방법\"><a href=\"#%EC%A2%8B%EC%9D%80-%EA%B0%9C%EB%B0%9C%EC%9E%90%EA%B0%80-%EB%90%98%EA%B8%B0-%EC%9C%84%ED%95%9C-19-%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>좋은 개발자가 되기 위한 19 가지 방법</h1>\n<br/>\n<h2 id=\"1-3개의-룰을-지켜라\"><a href=\"#1-3%EA%B0%9C%EC%9D%98-%EB%A3%B0%EC%9D%84-%EC%A7%80%EC%BC%9C%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. 3개의 룰을 지켜라</h2>\n<blockquote>\n<p>Rule of 3.</p>\n</blockquote>\n<p>코드 리팩터링을 진행할 때, 중복된 코드를 새로운 코드(new code), 절차(procedure), 방법(methods)으로 교체한다.</p>\n<p>이러한 리팩토링을 통해 코드와 절차, 방법 등을 일반화해서 여러곳에서 재사용할 수 있게 하는 것이 주 개념이다.</p>\n<br/>\n<h2 id=\"2-지속성을-유지해라\"><a href=\"#2-%EC%A7%80%EC%86%8D%EC%84%B1%EC%9D%84-%EC%9C%A0%EC%A7%80%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. 지속성을 유지해라</h2>\n<blockquote>\n<p>Consistency is king</p>\n</blockquote>\n<p>코드를 짜고, 구조를 짜는 것에 일관성을 가져라. 이는 애플리케이션의 가독성과 유지관리에 도움이 된다.</p>\n<p>코딩의 표준을 만들어서 일관성을 유지하는 것이 좋다. 이는 대신 변수의 명명 규칙만큼 작아야한다. </p>\n<p>애플리케이션의 구조는 개발자가 변경할 부분이나 새로운 것을 추가해야하는 부분에 대해 명확해야한다.</p>\n<br/>\n<h2 id=\"3-중복을-피해라\"><a href=\"#3-%EC%A4%91%EB%B3%B5%EC%9D%84-%ED%94%BC%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. 중복을 피해라</h2>\n<blockquote>\n<p>Reduce nesting</p>\n</blockquote>\n<p>If 문안에 있는 If 문은 매우 빨리 지저분해지고 읽기가 매우 어렵다.</p>\n<p>마찬가지로 이러한 중복은 최대한 피해야한다. </p>\n<p>이를 해결하는 방법으로 <strong>guard clause</strong> 을 지키는 것도 방법입니다.</p>\n<ul>\n<li>guard clause가 없을 경우.</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>account <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>order <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>term <span class=\"token operator\">==</span> <span class=\"token class-name\">Term</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Annually</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// term annually</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>term <span class=\"token operator\">==</span> <span class=\"token class-name\">Term</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Monthly</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// term monthly</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidEnumArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token function\">nameof</span><span class=\"token punctuation\">(</span>term<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArgumentNullException</span><span class=\"token punctuation\">(</span><span class=\"token function\">nameof</span><span class=\"token punctuation\">(</span>subscription<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>guard clause가 있는 경우</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>account <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArgumentNullException</span><span class=\"token punctuation\">(</span><span class=\"token function\">nameof</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>order <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArgumentNullException</span><span class=\"token punctuation\">(</span><span class=\"token function\">nameof</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>term <span class=\"token operator\">==</span> <span class=\"token class-name\">Term</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Annually</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// term annually (return here)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>term <span class=\"token operator\">==</span> <span class=\"token class-name\">Term</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Monthly</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// term monthly (return here)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidEnumArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token function\">nameof</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>term<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<br/>\n<h2 id=\"4-더-큰-그림을-생각해라\"><a href=\"#4-%EB%8D%94-%ED%81%B0-%EA%B7%B8%EB%A6%BC%EC%9D%84-%EC%83%9D%EA%B0%81%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. 더 큰 그림을 생각해라</h2>\n<blockquote>\n<p>Think of the bigger picture</p>\n</blockquote>\n<p>큰 그림을 이해하면 작은 세부 사항들을 더 쉽게 따라가고 이해할 수 있다. </p>\n<br/>\n<h2 id=\"5-이름-설정에-시간을-투자해라\"><a href=\"#5-%EC%9D%B4%EB%A6%84-%EC%84%A4%EC%A0%95%EC%97%90-%EC%8B%9C%EA%B0%84%EC%9D%84-%ED%88%AC%EC%9E%90%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. 이름 설정에 시간을 투자해라</h2>\n<blockquote>\n<p>Spend time thinking of naming things</p>\n</blockquote>\n<p>클래스, 메소드, 변수에 대한 이름을 정하는 것은 어렵다. 그러나 좋은 이름은 가독성에 큰 도움이 된다.</p>\n<br/>\n<h2 id=\"6-기술적인-빚은-나쁘다\"><a href=\"#6-%EA%B8%B0%EC%88%A0%EC%A0%81%EC%9D%B8-%EB%B9%9A%EC%9D%80-%EB%82%98%EC%81%98%EB%8B%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6. 기술적인 빚은 나쁘다</h2>\n<blockquote>\n<p>Technical debt is bad</p>\n</blockquote>\n<p>기술적인 빚은 소프트웨어 개발에서 나오는 개념이며, 시간이 더 오래걸린다고 더 나은 접근법을 사용하지 않고 현재 쉬운 방법을 선택하면 이후에 발생하는 묵시적인 비용이 발생할 수 있다.</p>\n<br/>\n<h2 id=\"7-과대평가를-피해라\"><a href=\"#7-%EA%B3%BC%EB%8C%80%ED%8F%89%EA%B0%80%EB%A5%BC-%ED%94%BC%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>7. 과대평가를 피해라</h2>\n<blockquote>\n<p>Overestimate</p>\n</blockquote>\n<p>많은 일들이 보통 기대하는 것보다 더 오래 걸린다. 이를 과대평가하면 이후에 문제가 발생할 수 있다.</p>\n<p>따라서 시간적 여유를 가지고 개발을 진행하는 것이 좋다.</p>\n<br/>\n<h2 id=\"8-문서화와-주석을-달아라\"><a href=\"#8-%EB%AC%B8%EC%84%9C%ED%99%94%EC%99%80-%EC%A3%BC%EC%84%9D%EC%9D%84-%EB%8B%AC%EC%95%84%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>8. 문서화와 주석을 달아라</h2>\n<blockquote>\n<p>Document and code comments</p>\n</blockquote>\n<p>문서화와 주석은 지식을 공유하는데 도움이 된다. 이러한 기록들을 통해서 이후에 개발에 큰 도움이 된다.</p>\n<br/>\n<h2 id=\"9-나쁜-코드는-자신감있게-없애라\"><a href=\"#9-%EB%82%98%EC%81%9C-%EC%BD%94%EB%93%9C%EB%8A%94-%EC%9E%90%EC%8B%A0%EA%B0%90%EC%9E%88%EA%B2%8C-%EC%97%86%EC%95%A0%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>9. 나쁜 코드는 자신감있게 없애라</h2>\n<blockquote>\n<p>Be confident about deleting bad code</p>\n</blockquote>\n<p>잘못된 코드를 언급하고 남겨놓은 경우가 발생한다. 이보다는 버전관리를 하는 것이 더 좋다. 사용하지 않는 많은 코드들은 나쁜 코드이며 삭제를 해야한다.</p>\n<br/>\n<h2 id=\"10-코드-리뷰에-시간을-투자해라\"><a href=\"#10-%EC%BD%94%EB%93%9C-%EB%A6%AC%EB%B7%B0%EC%97%90-%EC%8B%9C%EA%B0%84%EC%9D%84-%ED%88%AC%EC%9E%90%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>10. 코드 리뷰에 시간을 투자해라</h2>\n<blockquote>\n<p>Spend time on code Reviews</p>\n</blockquote>\n<p>코드 리뷰는 다음과 같은 이점이 있다.</p>\n<ul>\n<li>버그를 찾기 쉽게 도와준다.</li>\n<li>개발 기술의 향상과 팀원에게 좋은 실전을 제공한다.</li>\n<li>지식을 공유할 수 있다.</li>\n<li>일관성있는 디자인과 개발이 가능하다.</li>\n</ul>\n<p>좋은 개발자가 좋은 코드 검토 프로세스는 다음과 같다.</p>\n<ul>\n<li><strong>리스크가 적은 작은 업무</strong>는 개발자 한명이 진행한다.</li>\n<li><strong>중형이나 대형 변경, 위험한 변경</strong>은 3명의 개발자가 진행하며 그 중 한명은 시니어 개발자가 진행하는 것이 좋다.</li>\n<li><strong>극도로 위험한 변경이나, 개발중인 애플리케이션의 새로운 부분</strong>은 미팅을 진행하고 3명의 개발자가 각 라인을 함께 거치며 포인트를 만드는 리드 개발자가 있어야한다.</li>\n</ul>\n<br/>\n<h2 id=\"11-좋은-테스트를-작성해라\"><a href=\"#11-%EC%A2%8B%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>11. 좋은 테스트를 작성해라</h2>\n<blockquote>\n<p>Write good tests</p>\n</blockquote>\n<p>좋은 개발자는 좋은 테스트를 만드는데 시간을 투자한다.</p>\n<p>이 테스트가 잘 수행되면 응용프로그램을 더욱 자신있게 확장할 수 있으며 생산 버그를 줄일 수 있다.</p>\n<br/>\n<h2 id=\"12-디자인에-시간을-투자해라\"><a href=\"#12-%EB%94%94%EC%9E%90%EC%9D%B8%EC%97%90-%EC%8B%9C%EA%B0%84%EC%9D%84-%ED%88%AC%EC%9E%90%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>12. 디자인에 시간을 투자해라</h2>\n<blockquote>\n<p>Spend time designing</p>\n</blockquote>\n<p>코드를 짜기전에는 먼저 생각을 하고, 이를 작은 덩어리로 분리해야한다. 이는 좀더 조화를 이루게 할 수 있고 더 깨끗한 코드를 만들 수 있게 도와준다.</p>\n<br/>\n<h2 id=\"13-구문보다는-기본에-충실해라\"><a href=\"#13-%EA%B5%AC%EB%AC%B8%EB%B3%B4%EB%8B%A4%EB%8A%94-%EA%B8%B0%EB%B3%B8%EC%97%90-%EC%B6%A9%EC%8B%A4%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>13. 구문보다는 기본에 충실해라</h2>\n<blockquote>\n<p>Focus on the fundamentals and not on the syntax</p>\n</blockquote>\n<p>기본적인 부분에 집중을 해야한다. 이는 문제를 더 효과적으로 찾을 수 있고 많은 이해를 바탕으로 구글링하기 편해진다.</p>\n<br/>\n<h2 id=\"14-구글을-좋은-친구로-사용해라\"><a href=\"#14-%EA%B5%AC%EA%B8%80%EC%9D%84-%EC%A2%8B%EC%9D%80-%EC%B9%9C%EA%B5%AC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>14. 구글을 좋은 친구로 사용해라.</h2>\n<blockquote>\n<p>Make Google your best friend</p>\n</blockquote>\n<p>구글리을 통하면 많은 문제를 해결할 수 있다. 이때 특히, 기본적인 부분이 검색에서 많은 도움이 된다. 구글은 어떤 용어를 검색해야 하는지 알고 있는 부분에 초점을 맞추었기 때문에 이를 잘 이용해야한다.</p>\n<br/>\n<h2 id=\"15-일단-작동하게하고-그-다음에-아름답게-만들어라\"><a href=\"#15-%EC%9D%BC%EB%8B%A8-%EC%9E%91%EB%8F%99%ED%95%98%EA%B2%8C%ED%95%98%EA%B3%A0-%EA%B7%B8-%EB%8B%A4%EC%9D%8C%EC%97%90-%EC%95%84%EB%A6%84%EB%8B%B5%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>15. 일단 작동하게하고, 그 다음에 아름답게 만들어라.</h2>\n<blockquote>\n<p>Make sure it works first, then make it pretty later</p>\n</blockquote>\n<p>초보 개발자의 실수는 처음에 예쁘게 만들려고 너무 많은 시간을 할애한다. 이는 나중에 동작이 작동하지 않게되는 결과를 얻게된다.</p>\n<p>좋은 개발자는 일찍부터 작동하도록 구성한다. 코드를 아름답게 짜기전에 어떤 문제든 일찍 확인할 수 있게 구성해놓습니다. 이는 이후에 좀 더 프로젝트가 훨씬 더 원활하게 진행됩니다.</p>\n<br/>\n<h2 id=\"16-위험-관리와-문제-해결에-신경을-써라\"><a href=\"#16-%EC%9C%84%ED%97%98-%EA%B4%80%EB%A6%AC%EC%99%80-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0%EC%97%90-%EC%8B%A0%EA%B2%BD%EC%9D%84-%EC%8D%A8%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>16. 위험 관리와 문제 해결에 신경을 써라</h2>\n<blockquote>\n<p>Risk management and problem resultion</p>\n</blockquote>\n<p>좋은 개발자는 위험을 정의하고 디자인 패턴을 적용해서 복잡한 문제를 해결할 수 있습니다. 더 나아가 과거의 경험을 통해서 다양한 문제를 독립적으로 해결합니다.</p>\n<br/>\n<h2 id=\"17-질문을-해라\"><a href=\"#17-%EC%A7%88%EB%AC%B8%EC%9D%84-%ED%95%B4%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>17. 질문을 해라.</h2>\n<blockquote>\n<p>Ask questions</p>\n</blockquote>\n<p>좋은 개발자는 극히 간단한 질문이라도 개의치않으며 모든 것을 알려고 한다. 이유는 비지니스와 관련된 질문일 수도 있기 때문이다.</p>\n<p>비지니스 요구를 이해하면 좋은 코드를 만들 수 있다. 좋은 개발자는 자신의 능력에 자신이 있으므로 질문을 두려워하지 않는다.</p>\n<br/>\n<h2 id=\"18-가능한-논리를-데이터베이스에서-제외시켜라\"><a href=\"#18-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%85%BC%EB%A6%AC%EB%A5%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%97%90%EC%84%9C-%EC%A0%9C%EC%99%B8%EC%8B%9C%EC%BC%9C%EB%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>18. 가능한 논리를 데이터베이스에서 제외시켜라</h2>\n<blockquote>\n<p>Keep logic out of the database whenever possible</p>\n</blockquote>\n<p>이 조건은 구축중인 애플리케이션의 유형 중, 성능에 영향을 미치지 않는 경우에만 해당한다.</p>\n<p>좋은 개발자들은 간단한 CRUD 작업에 대한 데이터베이스 쿼리를 유지한다.</p>\n<blockquote>\n<p>CRUD : Create, Read, Update, Delete</p>\n</blockquote>\n<p>다음과 같이 진행할려면 비즈니스 논리 계층을 하나로 묶는 작업이 필요하다. 이렇게 진행하면 개발자들이 비지니스 논리를 쉽게 찾을 수 있으며, 데이터베이스 쿼리와 코드에 논리가 있으면 지저분해 진다.</p>\n<br/>\n<h2 id=\"19-kiss\"><a href=\"#19-kiss\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>19. KISS</h2>\n<blockquote>\n<p>Keep It simple Stupid</p>\n</blockquote>\n<p>코드를 단순하게 유지하는 것이 최선의 방법이다. 때로는 이 부분이 많은 코드라인을 생성하더라도 이는 반드시 필요하다</p>\n<ul>\n<li>잘못된 케이스는 다음과 같다. 이는 읽기 매우 어렵다.</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">return</span> dir<span class=\"token punctuation\">.</span><span class=\"token class-name\">Keys</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Any</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span><span class=\"token operator\">></span> k <span class=\"token operator\">>=</span> limit<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> dir<span class=\"token punctuation\">.</span><span class=\"token class-name\">First</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span><span class=\"token operator\">></span> x<span class=\"token punctuation\">.</span><span class=\"token class-name\">Key</span> <span class=\"token operator\">>=</span> limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Value</span> <span class=\"token operator\">:</span> dir<span class=\"token punctuation\">[</span>dir<span class=\"token punctuation\">.</span><span class=\"token class-name\">Keys</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"결론\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>결론.</h2>\n<p>이러한 부분은 좋은 개발자들이 매일 사용하는 방법이고, 실제 코딩보다도 어떠하게 작업에 접근을 해야하는지를 알려줍니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://medium.com/javascript-in-plain-english/19-things-i-stole-from-great-developers-85511ff56570\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/javascript-in-plain-english/19-things-i-stole-from-great-developers-85511ff56570</a></li>\n</ul>\n","cover_image":{"type":"image","mimeType":"image/jpeg","src":"/assets/static/DeveloperImage.07cc2b7.59f69a58073bf0d9c1ee50a9708c0118.jpeg","size":{"width":860,"height":572},"sizes":"(max-width: 860px) 100vw, 860px","srcset":["/assets/static/DeveloperImage.a67b0b2.59f69a58073bf0d9c1ee50a9708c0118.jpeg 480w","/assets/static/DeveloperImage.07cc2b7.59f69a58073bf0d9c1ee50a9708c0118.jpeg 860w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 860 572' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-10367a3af137bdaace0ffd376bca07fe'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-10367a3af137bdaace0ffd376bca07fe)' width='860' height='572' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAArAEADASIAAhEBAxEB/8QAGwAAAgIDAQAAAAAAAAAAAAAABAUDBgECBwD/xAAxEAACAQMDAgMFCAMAAAAAAAABAgMABBESITEFQQYTUSIjYXGRFBUyM0KBocFjseH/xAAYAQADAQEAAAAAAAAAAAAAAAACAwQFAP/EACMRAAICAQMEAwEAAAAAAAAAAAECABEDEiExBEFh8CJRUqH/2gAMAwEAAhEDEQA/AODIsE3RoMGJbhWbO3tMNiOF%2bfJr1qmkhsldLBsjkbjijfDyLceHLsMgYxlX2AB7jnHy71myh1hlwTqQ8fKr8WDg/cB8mrntDPLRGlBu/wAs59p0Ods7ZHegoL2BRhUm06sjKxk4%2blOILKZdEi9O6eFliVl1EHHx2Tk54qK66DdlZrvEOkjzQkXGO%2bO4xUrYWZyO3aLUfqLWlhfTpa7TAwMad9%2b9aiedGYRXEwQ7btg/xWVQYrcQufwox/auZDHjaVCVdEsinsxrWmN1bKb%2b4WQMGyDgVE9mMZRsfOlzo/8AAs6q7wudKyHQXyBpzgg7kdx6intjZmLqcP5rQE%2b8kCg4Bzng4/mqb4aKtNNG5IUqCcc7H/tX68byWVvNeFG3HmQZkOw9RsfXetLpkJUMvv8AYhyosEb%2b%2bJHadShs1KTvOY4XMUZK4JGOCB%2b3NDX/AFOK70LDbBUTgyMSfiOcEfOobmMzz6gnmIfbVWkKqNQGdhvU8EOjOHRB/ijx39Tk1VopjUEEcmQo1ww92gUeqoFH1qCfzM%2b3JqPwbNNfLj2JXUR%2bpjq/3Qd8A8qpEMtxgD6UrLj2jEaU/rhe2vVdOHXfNA/byPxR5PwO1PfGNhLBZ280wC5YrjuKqZLAbNtWVkUq1GNu466Bn75jjUga9SZJwOK6Cba0NsJbmdmkKg69ecn0BOP7rmdoSOoQEc61q9vEn3eJdPvA6rn4YNaHRH4EeZPl2NzLMumEjIXBUAnJOCdvpisNctA2kqxcjOGGMVpYjW/UEJICWryrpOCGGO43/bigoQPs7Pj2g2Kq12YIFCHrNLNy2F9F2FDXPU7bp0g85yXG%2bhN2z/VJeu3lxAEWGVkDc6dj9aSwgM51b996kz9VpJVRvGou1x5cXV54muktIljiiJLKrN/Of6FCdT8I9WskMqwfaIR%2buH2sfMcirH0yGO08LSX1uirdlD73GTz2zxVdN7dW1zBLb3M0crgMzq5BYn1PeoWJY23MbVT/2Q==' /%3e%3c/svg%3e"}}},"context":{}}