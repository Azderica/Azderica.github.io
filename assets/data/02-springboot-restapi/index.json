{"hash":"6c2dfb1ddb93a73e45fdcdb1ab7e78aeeef8d2e9","data":{"post":{"title":"[Springboot API] Springboot REST API : 이벤트 생성 API 개발","path":"/02-springboot-restapi/","date":"10. September 2020","timeToRead":6,"tags":[{"id":"Spring","title":"Spring","path":"/tag/Spring/"},{"id":"Springboot","title":"Springboot","path":"/tag/Springboot/"},{"id":"Springboot API","title":"Springboot API","path":"/tag/Springboot%20API/"},{"id":"REST API","title":"REST API","path":"/tag/REST%20API/"},{"id":"Backend","title":"Backend","path":"/tag/Backend/"}],"description":" 'Springboot REST API'의 두번째 게시글입니다. ","content":"<h1 id=\"이벤트-생성-api-개발\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B0%9C%EB%B0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 개발</h1>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--이벤트-api-테스트-클래스-생성\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EC%9D%B4%EB%B2%A4%ED%8A%B8-api-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 이벤트 API 테스트 클래스 생성</h2>\n<h3 id=\"스프링-부트-슬라이스-테스트\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EC%8A%A4-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 슬라이스 테스트</h3>\n<ul>\n<li>\n<p>@WebMvcTest</p>\n<ul>\n<li>MockMvc 빈을 자동 설정 해준다. 따라서 그냥 가져와서 쓰면 됨.</li>\n<li>웹 관련 빈만 등록해 준다. (슬라이스)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mockmvc스프링\"><a href=\"#mockmvc%EC%8A%A4%ED%94%84%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MockMvc스프링</h3>\n<ul>\n<li>MVC 테스트 핵심 클래스</li>\n<li>웹 서버를 띄우지 않고도 스프링 MVC (DispatcherServlet)가 요청을 처리하는 과정을 확인할 수 있기 때문에 컨트롤러 테스트용으로 자주 쓰임.</li>\n</ul>\n<h3 id=\"테스트-할-것입력\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83%EC%9E%85%EB%A0%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것입력</h3>\n<ul>\n<li>\n<p>값들을 전달하면 JSON 응답으로 201이 나오는지 확인.</p>\n<ul>\n<li>Location 헤더에 생성된 이벤트를 조회할 수 있는 URI 담겨 있는지 확인.</li>\n<li>id는 DB에 들어갈 때 자동생성된 값으로 나오는지 확인</li>\n</ul>\n</li>\n<li>\n<p>입력값으로 누가 id나 eventStatus, offline, free 이런 데이터까지 같이 주면?</p>\n<ul>\n<li>Bad_Request로 응답 vs <strong>받기로 한 값 이외는 무시</strong></li>\n</ul>\n</li>\n<li>\n<p>입력 데이터가 이상한 경우 Bad_Request로 응답</p>\n<ul>\n<li>입력값이 이상한 경우 에러</li>\n<li>비즈니스 로직으로 검사할 수 있는 에러</li>\n<li>에러 응답 메시지에 에러에 대한 정보가 있어야 한다.</li>\n</ul>\n</li>\n<li>\n<p>비즈니스 로직 적용 됐는지 응답 메시지 확인</p>\n<ul>\n<li>offline과 free 값 확인</li>\n</ul>\n</li>\n<li>\n<p>응답에 HATEOA와 profile 관련 링크가 있는지 확인.</p>\n<ul>\n<li>self (view)</li>\n<li>update (만든 사람은 수정할 수 있으니까)</li>\n<li>events (목록으로 가는 링크)</li>\n</ul>\n</li>\n<li>\n<p>API 문서 만들기</p>\n<ul>\n<li>요청 문서화</li>\n<li>응답 문서화</li>\n<li>링크 문서화</li>\n<li>profile 링크 추가</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--201-응답-받기\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--201-%EC%9D%91%EB%8B%B5-%EB%B0%9B%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 201 응답 받기</h2>\n<h3 id=\"restcontroller\"><a href=\"#restcontroller\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@RestController</h3>\n<ul>\n<li>@ResponseBody를 모든 메소드에 적용한 것과 동일하다.</li>\n</ul>\n<h3 id=\"responseentity를-사용하는-이유\"><a href=\"#responseentity%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ResponseEntity를 사용하는 이유</h3>\n<ul>\n<li>응답 코드, 헤더, 본문 모두 다루기 편한 API</li>\n</ul>\n<h3 id=\"location-uri-만들기\"><a href=\"#location-uri-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Location URI 만들기</h3>\n<ul>\n<li>HATEOS가 제공하는 linkTo(), methodOn() 사용</li>\n</ul>\n<h3 id=\"객체를-json으로-변환\"><a href=\"#%EA%B0%9D%EC%B2%B4%EB%A5%BC-json%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>객체를 JSON으로 변환</h3>\n<ul>\n<li>ObjectMapper 사용</li>\n</ul>\n<h3 id=\"테스트-할-것\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력값들을 전달하면 JSON 응답으로 201이 나오는지 확인.</p>\n<ul>\n<li>Location 헤더에 생성된 이벤트를 조회할 수 있는 URI 담겨 있는지 확인.</li>\n<li>id는 DB에 들어갈 때 자동생성된 값으로 나오는지 확인</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--eventrepository-구현\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--eventrepository-%EA%B5%AC%ED%98%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : EventRepository 구현</h2>\n<h3 id=\"스프링-데이터-jpa\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-jpa\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 데이터 JPA</h3>\n<ul>\n<li>JpaRepository 상속 받아 만들기</li>\n</ul>\n<h3 id=\"enum을-jpa-맵핑시-주의할-것\"><a href=\"#enum%EC%9D%84-jpa-%EB%A7%B5%ED%95%91%EC%8B%9C-%EC%A3%BC%EC%9D%98%ED%95%A0-%EA%B2%83\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Enum을 JPA 맵핑시 주의할 것</h3>\n<ul>\n<li>@Enumerated(EnumType.STRING)</li>\n</ul>\n<h3 id=\"mockbean\"><a href=\"#mockbean\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@MockBean</h3>\n<ul>\n<li>Mockito를 사용해서 mock 객체를 만들고 빈으로 등록해 줌.</li>\n<li>(주의) 기존 빈을 테스트용 빈이 대체 한다.</li>\n</ul>\n<h3 id=\"테스트-할-것-1\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력값들을 전달하면 JSON 응답으로 201이 나오는지 확인.</p>\n<ul>\n<li>Location 헤더에 생성된 이벤트를 조회할 수 있는 URI 담겨 있는지 확인.</li>\n<li>id는 DB에 들어갈 때 자동생성된 값으로 나오는지 확인</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--입력값-제한하기\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EC%9E%85%EB%A0%A5%EA%B0%92-%EC%A0%9C%ED%95%9C%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 입력값 제한하기</h2>\n<h3 id=\"입력값-제한\"><a href=\"#%EC%9E%85%EB%A0%A5%EA%B0%92-%EC%A0%9C%ED%95%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>입력값 제한</h3>\n<ul>\n<li>id 또는 입력 받은 데이터로 계산해야 하는 값들은 입력을 받지 않아야 한다.</li>\n<li>EventDto 적용</li>\n</ul>\n<h3 id=\"dto---도메인-객체로-값-복사\"><a href=\"#dto---%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B0%9D%EC%B2%B4%EB%A1%9C-%EA%B0%92-%EB%B3%B5%EC%82%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DTO -> 도메인 객체로 값 복사</h3>\n<ul>\n<li>ModelMapper</li>\n</ul>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.modelmapper<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>modelmapper<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.3.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"통합-테스트로-전환\"><a href=\"#%ED%86%B5%ED%95%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A1%9C-%EC%A0%84%ED%99%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>통합 테스트로 전환</h3>\n<ul>\n<li>\n<p>@WebMvcTest 빼고 다음 애노테이션 추가</p>\n<ul>\n<li>@SpringBootTest</li>\n<li>@AutoConfigureMockMvc</li>\n</ul>\n</li>\n<li>Repository @MockBean 코드 제거</li>\n</ul>\n<h3 id=\"테스트-할-것-2\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력값으로 누가 id나 eventStatus, offline, free 이런 데이터까지 같이 주면?</p>\n<ul>\n<li>Bad_Request로 응답 vs 받기로 한 값 이외는 무시  </li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--입력값-이외에-에러-발생\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EC%9E%85%EB%A0%A5%EA%B0%92-%EC%9D%B4%EC%99%B8%EC%97%90-%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 입력값 이외에 에러 발생</h2>\n<h3 id=\"objectmapper-커스터마이징\"><a href=\"#objectmapper-%EC%BB%A4%EC%8A%A4%ED%84%B0%EB%A7%88%EC%9D%B4%EC%A7%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ObjectMapper 커스터마이징</h3>\n<ul>\n<li>spring.jackson.deserialization.fail-on-unknown-properties=true</li>\n</ul>\n<h3 id=\"테스트-할-것-3\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력값으로 누가 id나 eventStatus, offline, free 이런 데이터까지 같이 주면?</p>\n<ul>\n<li>Bad_Request로 응답 vs 받기로 한 값 이외는 무시</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--bad-request-처리하기\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--bad-request-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : Bad Request 처리하기</h2>\n<h3 id=\"valid와-bindingresult-또는-errors\"><a href=\"#valid%EC%99%80-bindingresult-%EB%98%90%EB%8A%94-errors\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@Valid와 BindingResult (또는 Errors)</h3>\n<ul>\n<li>BindingResult는 항상 @Valid 바로 다음 인자로 사용해야 함. (스프링 MVC)</li>\n<li>@NotNull, @NotEmpty, @Min, @Max, ... 사용해서 입력값 바인딩할 때 에러 확인할 수 있음</li>\n</ul>\n<h3 id=\"도메인-validator-만들기\"><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-validator-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>도메인 Validator 만들기</h3>\n<ul>\n<li>Validator 인터페이스 없이 만들어도 상관없음</li>\n</ul>\n<h3 id=\"테스트-설명-용-애노테이션-만들기\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%84%A4%EB%AA%85-%EC%9A%A9-%EC%95%A0%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 설명 용 애노테이션 만들기</h3>\n<ul>\n<li>@Target, @Retention</li>\n</ul>\n<h3 id=\"테스트-할-것-4\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력 데이터가 이상한 경우 Bad_Request로 응답</p>\n<ul>\n<li>입력값이 이상한 경우 에러</li>\n<li>비즈니스 로직으로 검사할 수 있는 에러</li>\n<li>에러 응답 메시지에 에러에 대한 정보가 있어야 한다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--bad-request-응답-본문-만들기\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--bad-request-%EC%9D%91%EB%8B%B5-%EB%B3%B8%EB%AC%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : Bad Request 응답 본문 만들기</h2>\n<h3 id=\"커스텀-json-serializer-만들기\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-json-serializer-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>커스텀 JSON Serializer 만들기</h3>\n<ul>\n<li>extends JsonSerializer<T> (Jackson JSON 제공)</li>\n<li>@JsonComponent (스프링 부트 제공)</li>\n</ul>\n<h3 id=\"bindingerror\"><a href=\"#bindingerror\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>BindingError</h3>\n<ul>\n<li>FieldError 와 GlobalError (ObjectError)가 있음</li>\n<li>objectName</li>\n<li>defaultMessage</li>\n<li>code</li>\n<li>field</li>\n<li>rejectedValue</li>\n</ul>\n<h3 id=\"테스트-할-것-5\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력 데이터가 이상한 경우 Bad_Request로 응답</p>\n<ul>\n<li>입력값이 이상한 경우 에러</li>\n<li>비즈니스 로직으로 검사할 수 있는 에러</li>\n<li><strong>에러 응답 메시지에 에러에 대한 정보가 있어야 한다.</strong></li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--비즈니스-로직-적용\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81-%EC%A0%81%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 비즈니스 로직 적용</h2>\n<h3 id=\"테스트-할-것-6\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-6\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>비즈니스 로직 적용 됐는지 응답 메시지 확인</p>\n<ul>\n<li>offline과 free 값 확인</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--매개변수를-이용한-테스트\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 매개변수를 이용한 테스트</h2>\n<h3 id=\"테스트-코드-리팩토링\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 코드 리팩토링</h3>\n<ul>\n<li>테스트에서 중복 코드 제거</li>\n<li>매개변수만 바꿀 수 있으면 좋겠는데?</li>\n<li>JUnitParams</li>\n</ul>\n<h3 id=\"junitparams\"><a href=\"#junitparams\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JUnitParams</h3>\n<ul>\n<li><a href=\"https://github.com/Pragmatists/JUnitParams\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/Pragmatists/JUnitParams</a></li>\n</ul>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/pl.pragmatists/JUnitParams --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>pl.pragmatists<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>JUnitParams<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.1.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/SpringLogo.214a68b.be0c3d9590430504675b948223711f21.png","size":{"width":820,"height":442},"sizes":"(max-width: 820px) 100vw, 820px","srcset":["/assets/static/SpringLogo.a67b0b2.be0c3d9590430504675b948223711f21.png 480w","/assets/static/SpringLogo.214a68b.be0c3d9590430504675b948223711f21.png 820w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 820 442' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-29f2605aef896f90944d207b9d4e9d4c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-29f2605aef896f90944d207b9d4e9d4c)' width='820' height='442' xlink:href='data:image/png%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAiAEADASIAAhEBAxEB/8QAGwABAAMBAAMAAAAAAAAAAAAAAAQFBgMCBwj/xAAqEAABAwQBAgUEAwAAAAAAAAABAgMEAAURIRIGMRNBUWGBFBUiMgdxof/EABgBAQADAQAAAAAAAAAAAAAAAAACAwQB/8QAIxEAAgICAgIBBQAAAAAAAAAAAAECEQMhEjEEQVEiYZGx4f/aAAwDAQACEQMRAD8A%2bnaUpQCs51b1SxYEobS348xwckt5wEj1Ua0dYx2BBX/IEt%2b9lrwRGQ7HD5AQcYB76OPT3rN5U5xglj026v4Ksrkl9Psr7H17OnXFqO5bUPpcVjEbPJPvvR/yvYDKy42FKTxVsFOc4I0RUWNLiuZFrZQhgDLkkN8G0pHocDkf60PWu8RYdbU6j9HFqWj3STo/Pf5rnjKcVU58hiUlpys7UpStRaKgXi5t2xplS21uuPuBpptBAKlEZ7kgDt51PqtvsF6fFS019ItPLK2pTXNCx8HII9RUMnLi%2bPZGV1oiOdRcJLMUWueZjrRdSxxSDpWDk5wB557VW3i%2b225Qm4cmBOedfWtox2xxdQ4jB4nfuDntquMKx3W3XmMIbyCW4jmVuNqUz%2bTmfCG8gAdt51VjbunXo90jXCRKQ7IDjzr5CMBSlpCQE%2bgAFYrz5Fxa%2bzuutfn2UXkkqKCNHs0e4JaMS7T5AeW0mO66Fp5oSFdsgY3561WjR1RHcaaSxDluTXHVsiGEgOJUj9snOABkbrxidPusX77gZCCj6h57gEnOFpSAPjFV1ytUy1z/ALjBDj0lUp50eGyXEhtYT%2bK0gg%2bXcVGMcuFNxVK/hda3%2bziU4LSNDaLu3c3pbSWH2HYqkpcS8ACCRnGjVlWd6Rjzg9c51yQpDkt1JSlaOBwlOM8cnA9Ad6rRVtwSlKCcu/7ovxtuNsUpSrSYpSlAKUpQClKUB//Z' /%3e%3c/svg%3e"}}},"context":{}}