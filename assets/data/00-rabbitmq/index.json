{"hash":"2858839cb272bd8e3f388ae3dd5d59774a4a3863","data":{"post":{"title":"[RabbitMQ] What is RabbitMQ","path":"/00-rabbitmq/","date":"9. March 2022","timeToRead":11,"tags":[{"id":"RabbitMQ","title":"RabbitMQ","path":"/tag/RabbitMQ/"},{"id":"Kafka","title":"Kafka","path":"/tag/Kafka/"},{"id":"Platform","title":"Platform","path":"/tag/Platform/"},{"id":"Message Queue","title":"Message Queue","path":"/tag/Message%20Queue/"},{"id":"Backend","title":"Backend","path":"/tag/Backend/"}],"description":" RabbitMQ에 대한 기본적인 내용을 정리하고, Kafka와의 차이에 대해 서술합니다.","content":"<h1 id=\"what-is-rabbitmq\"><a href=\"#what-is-rabbitmq\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>What is RabbitMQ.</h1>\n<p>과거 오래전에 Kafka에 대한 개념을 정리했습니다. (그 후로 따로 업무에서 사용해본적은 없지만...) 그럼에도 불구하고 백엔드 개발자라면 이후 필요시 사용할 수 있다고 생각하기 때문에 오늘은 rabbitmq에 대해 정리합니다. 마찬가지로 쓴 적은 없지만, NAS 서버의 앞단에 rabbitmq가 설치된 것은 봤습니다.</p>\n<ul>\n<li><a href=\"https://azderica.github.io/00-kafka/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">카프카 공부</a></li>\n</ul>\n<br/>\n<h2 id=\"메시지-큐\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%81%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>메시지 큐</h2>\n<p>들어가기 앞서, 메시지 큐에 대한 내용부터 잡습니다. 메시지 큐(message queue)는 <strong>서버리스 및 마이크로서비스 아키텍처에서 사용되는 비동기 서비스 간 통신의 한 형태</strong>입니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/157424872-337442d7-0166-4f18-b6bb-82ff29a6db6a.png\" alt=\"message queue\"></p>\n<p>메시지 큐를 통해 시스템의 서로 다른 부분이 통신하고 비동기식으로 작업을 처리할 수 있습니다.</p>\n<ul>\n<li>메시지 큐는 메시지를 임시로 저장하는 간단한 버퍼를 제공합니다.</li>\n<li>메시지 전송 및 수신을 위해 허용하는 엔드포인트를 제공합니다.</li>\n<li>생산자라 부르는 구성 요소가 메시지를 대기열에 추가하고, 소비자라 부르는 구성요소가 메시지를 검색하고 이를 사용해 어떤 작업을 수행할 때까지 대기열 에 저장됩니다.</li>\n</ul>\n<h3 id=\"메시지-큐의-장점\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%81%90%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>메시지 큐의 장점</h3>\n<p>메시지 큐는 다음의 장점을 가집니다.</p>\n<ul>\n<li>Asynchronous(비동기) : Queue에 넣음을 통해서 나중에 처리 가능합니다.</li>\n<li>Decoupling(비동조) : Application과 분리할 수 있습니다.</li>\n<li>Resilience(탄력성) : 일부가 실패해도 전체에 영향을 받지 않습니다.</li>\n<li>Redundancy(과잉) : 실패시 재실행이 가능합니다.</li>\n<li>Guarantees(보증) : 작업 처리에 대해 확인이 가능합니다.</li>\n<li>Scalable(확장성) : 다수의 프로세스뜰이 큐에 메시지를 보낼 수 있습니다.</li>\n</ul>\n<p>위의 장점들을 살리기 위해 일반적으로 <strong>메시지 큐</strong>를 사용합니다.</p>\n<h3 id=\"이때-메시지-큐가-적합합니다\"><a href=\"#%EC%9D%B4%EB%95%8C-%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%81%90%EA%B0%80-%EC%A0%81%ED%95%A9%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이때 메시지 큐가 적합합니다.</h3>\n<ul>\n<li>다른 곳의 API로부터 데이터 송수신이 가능합니다.</li>\n<li>다양한 애플리케이션에서 비동기 통신을 할 수 있습니다.</li>\n<li>이메일 발송 및 문서 업로드가 가능합니다.</li>\n<li>많은 양의 프로세스들을 처리할 수 있습니다.</li>\n</ul>\n<br/>\n<h2 id=\"rabbitmq는-그래서-뭐야\"><a href=\"#rabbitmq%EB%8A%94-%EA%B7%B8%EB%9E%98%EC%84%9C-%EB%AD%90%EC%95%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>RabbitMQ는 그래서 뭐야?</h2>\n<blockquote>\n<p>RabbitMQ is the most widely deployed open source message broker (공식 홈페이지)</p>\n<p>RabbitMQ는 가장 널리 퍼져있는 오픈소스 메세지브로커입니다.</p>\n</blockquote>\n<p>RabbitMQ는 다음을 지원합니다.</p>\n<ul>\n<li>\n<p>AMQP 프로토콜을 구현해 놓은 프로그램입니다.</p>\n<ul>\n<li>*AMQP : Advanced Message Queuing Protocol의 약자이며 IP 네트워크를 통한 프로세스 간 통신에 중점을 둔 애플리케이션 계층 프로토콜입니다.</li>\n<li><a href=\"https://www.cloudamqp.com/blog/what-is-amqp-and-why-is-it-used-in-rabbitmq.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AMQP에 대한 상세 설명</a></li>\n</ul>\n</li>\n<li>신뢰성, 안전성, 성능을 충족할 수 있도록 다양한 기능을 제공합니다.</li>\n<li>유연한 라우팅: Message Queue가 도착하기 전에 라우팅되며 플러그인을 통해 더 복잡한 라우팅도 가능합니다.</li>\n<li>\n<p>클러스터링을 제공합니다.</p>\n<ul>\n<li>*클러스터링 : 로컬네트워크에 있는 여러 RabbitMQ 서버를 논리적으로 클러스트링할 수 있고 논리적인 브로커도 가능합니다.</li>\n</ul>\n</li>\n<li>관리 UI가 있어 편하게 관리 가능합니다.</li>\n<li>거의 모든 언어와 운영체제를 지원합니다.</li>\n<li>오픈소스로 상업적 지원이 가능합니다.</li>\n</ul>\n<br/>\n<h2 id=\"rabbitmq-외의-서비스\"><a href=\"#rabbitmq-%EC%99%B8%EC%9D%98-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>RabbitMQ 외의 서비스</h2>\n<h3 id=\"activemq\"><a href=\"#activemq\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ActiveMQ</h3>\n<ul>\n<li>풀자바 메시지 서비스(JMS) 클라이언트와 함께 자바로 만든 오픈소스 메시지 브로커</li>\n<li>시스템은 엔터프라이즈 기능을 제공합니다.</li>\n</ul>\n<p>다음의 특징이 있습니다.</p>\n<ul>\n<li>다양한 언어 환경의 클라이언트들과 프로토콜을 지원합니다.</li>\n<li>Spring 지원으로 쉽게 설정이 가능합니다.</li>\n<li>고성능의 저널을 사용할 때에 JDBC를 사용하여 매우 빠른 Persistnece을 지원합니다.</li>\n<li>고성능의 클러스터링, 클라이언트-서버, Peer 기반 통신을 지원을 위한 설계가 되어 있습니다.</li>\n<li>REST API를 통해 웹기반 메시징 API를 지원합니다.</li>\n<li>웹브라우저가 메시징 도구가 될 수 있도록, Ajax를 통해 순수한 DHTML을 사용한 웹스트리밍을 지원합니다.</li>\n</ul>\n<h3 id=\"zeromq\"><a href=\"#zeromq\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ZeroMQ</h3>\n<ul>\n<li>메시징 라이브러리</li>\n<li>복잡한 커뮤니케이션 시스템을 설계할 수 있도록 해줍니다.</li>\n<li>ZeroMQ는 in-process, inter-process, TCP, and multicast 처럼 다양한 방식으로 메시지를 전송하는 소켓을 제공합니다.</li>\n</ul>\n<p>다음의 특징을 가집니다.</p>\n<ul>\n<li>\n<p>퍼포먼스</p>\n<ul>\n<li>AMQP보다 빠르며, AMQP처럼 과도하게 복잡한 프로토콜이 없습니다.</li>\n<li>신뢰성 있는 멀티캐스트같은 효율적인 전송을 활용합니다.</li>\n<li>지능적인 메시지 묶음을 확용합니다.</li>\n</ul>\n</li>\n<li>\n<p>단순성</p>\n<ul>\n<li>비동기 send 호출을 부르기만 하면, 메시지를 별도의 큐에 넣고 필요한 모든 일을 해줍니다.</li>\n<li>이벤트 중심의 프레임워크에도 최적입니다.</li>\n</ul>\n</li>\n<li>\n<p>확장성</p>\n<ul>\n<li>복수의 접점을 가질 수 있으며, 자동으로 메시지 부하 분산을 수행합니다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"kafka\"><a href=\"#kafka\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka</h3>\n<ul>\n<li>대용량의 실시간 로그 처리에 특화되어 설계된 메시징 시스템으로서 기존 범용 메시징 시스템대비 TPS가 매우 우수합니다.</li>\n<li>분산 시스템을 기본으로 설계되었기 때문에, 기존 메시징 시스템에 비해 분산 및 복제 구성을 손쉽게 할 수 있습니다.</li>\n<li>AMQP 프로토콜이나 JMS API를 사용하지 않고 단순한 메시지 헤더를 지닌 TCP 기반의 프로토콜을 사용하여 프로토콜에 의한 오버헤드를 감소시킵니다.</li>\n</ul>\n<p>상세 내용은 <a href=\"https://azderica.github.io/00-kafka/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">카프카 공부</a> 을 참조하면 좋습니다.</p>\n<br/>\n<h2 id=\"kafka-와-rabbitmq-중에서-어떤-것을-선택할-것인가\"><a href=\"#kafka-%EC%99%80-rabbitmq-%EC%A4%91%EC%97%90%EC%84%9C-%EC%96%B4%EB%96%A4-%EA%B2%83%EC%9D%84-%EC%84%A0%ED%83%9D%ED%95%A0-%EA%B2%83%EC%9D%B8%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka 와 RabbitMQ 중에서 어떤 것을 선택할 것인가.</h2>\n<blockquote>\n<p>일반적으로 많이 사용하는 두 메시지큐인 Kafka와 RabbitMQ를 비교합니다.</p>\n</blockquote>\n<ul>\n<li>RabbitMQ는 메시지 브로커 방식이고, Kafka는 pub/sub 방식입니다.</li>\n<li>\n<p>메시지브로커</p>\n<ul>\n<li>메시지브로커는 응용프로그램, 서비스 및 시스템이 정보를 통신하고 교환할 수 있도록 하는 소프트웨어 모듈입니다</li>\n<li>메시지 브로커는 지정된 수신인에게 메시지를 확인, 라우팅, 저장 및 배달합니다.</li>\n</ul>\n</li>\n<li>\n<p>pub/sub</p>\n<ul>\n<li>생산자가 원하는 각 메시지를 게시할 수 있도록 하는 메시지 배포 패턴입니다.</li>\n</ul>\n</li>\n</ul>\n<p>일반적으로 Kafka는 고성능을 추구하기 때문에 비교적 무거우나, 대용량 데이터를 다루지 않는다면 가벼운 RabbitMQ가 더 낫습니다.</p>\n<h3 id=\"kafka가-적절한-경우\"><a href=\"#kafka%EA%B0%80-%EC%A0%81%EC%A0%88%ED%95%9C-%EA%B2%BD%EC%9A%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka가 적절한 경우</h3>\n<ul>\n<li>Kafka는 복잡한 라우팅에 의존하지 않고 최대 처리량으로 스트리밍하는데 가장 적합합니다.</li>\n<li>이벤트 소싱, 스트림 처리 및 일련의 이벤트로 시스템에 대한 모델링 변경을 수행하는 데 이상적입니다.</li>\n<li>Kafka는 다단계 파이프라인에서 데이터를 처리하는데도 적합합니다.</li>\n<li>스트리밍 데이터를 저장, 읽기, 다시 읽기 및 분석하는 프레임워크가 필요한 경우에 더 좋습니다.</li>\n<li>특히, <strong>정기적으로 감사하는 시스템이나 메시지를 영구적으로 저장하는 데 이상적입니다.</strong></li>\n</ul>\n<h3 id=\"rabbitmq가-적절한-경우\"><a href=\"#rabbitmq%EA%B0%80-%EC%A0%81%EC%A0%88%ED%95%9C-%EA%B2%BD%EC%9A%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>RabbitMQ가 적절한 경우</h3>\n<ul>\n<li>복잡한 라우팅의 경우 RabbitMQ를 사용합니다.</li>\n<li>RabbitMQ는 신속한 요청-응답이 필요한 웹 서버에 적합합니다.</li>\n<li>부하가 높은 작업자 간에 부하를 공유합니다.</li>\n<li>RabbitMQ는 백그라운드 작업이나 PDF 변환, 파일 검색 또는 이미지 확장과 같은 장기 실행 작업도 처리할 수 있습니다.</li>\n<li>즉, <strong>장시간 실행되는 태스크, 안정적인 백그라운드 작업 실행, 애플리케이션 간/내부 통신/통합이 필요할 때 RabbitMQ를 사용합니다.</strong></li>\n</ul>\n<br/>\n<h2 id=\"그외-용어에-대한-설명\"><a href=\"#%EA%B7%B8%EC%99%B8-%EC%9A%A9%EC%96%B4%EC%97%90-%EB%8C%80%ED%95%9C-%EC%84%A4%EB%AA%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>그외 용어에 대한 설명</h2>\n<h3 id=\"jms란\"><a href=\"#jms%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JMS란.</h3>\n<ul>\n<li>JMS는 MOM(Message-Oriented Middleware, 메시지 지향 미들웨어)을 자바에서 지원하는 표준 API</li>\n<li>Java EE에 기반한 애플리케이션 구성요소에서 메시지를 작성, 전송, 수신하고 읽을 수 있도록 하는 API</li>\n<li>JMS는 서버 구성을 통해 큐와 같은 기타 자원을 관리할 수 있습니다.</li>\n<li>JMS는 다른 자바 애플리케이션들끼리 통신이 가능하지만 다른 MOM의 통신이 어렵습니다. (ex. AMQL, SMTP)</li>\n<li>JMS 라이브러리는 AMQP를 지원하지 않습니다.</li>\n</ul>\n<p>다음의 필수요소를 지원합니다.</p>\n<ul>\n<li>메시지 경로를 지정하고 전달하는 메시징 공급자 개념</li>\n<li>별개의 메시징 패턴 또는 도메인</li>\n<li>동기식 및 비동기식 메시지 수신 기능</li>\n<li>안정적인 메시지 전달 지원</li>\n<li>공통 메시지 형식</li>\n</ul>\n<p>조금 더 상세한 정보를 보고 싶다면 아래를 공유합니다.</p>\n<ul>\n<li><a href=\"https://www.ibm.com/docs/ko/cics-ts/5.6?topic=server-java-message-service-jms\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JMS 상세 내용</a>]</li>\n<li><a href=\"https://docs.oracle.com/cd/E19148-01/820-0532/gbpdg/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MOM 표준으로서의 JMS</a></li>\n</ul>\n<h3 id=\"amqp에-대해-상세하게-보기\"><a href=\"#amqp%EC%97%90-%EB%8C%80%ED%95%B4-%EC%83%81%EC%84%B8%ED%95%98%EA%B2%8C-%EB%B3%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>AMQP에 대해 상세하게 보기</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/157615147-53398e01-737a-40b7-8550-8ed9034947e6.png\" alt=\"AMQP 명세\"></p>\n<ul>\n<li>AMQP는 ISO 응용 계층의 MOM 표준입니다.</li>\n<li>AMQP는 IP 네트워크 간의 프로세스 간 통신에 초점을 맞춘 응용 프로그램 계층 프로토콜</li>\n<li>AMQP의 목표는 TCP/IP 연결을 통해 메시지를 브로커 서비스를 통해 전달할 수 있도록 하는 것입니다.</li>\n<li>AMQP는 프로토콜만 맞다면 다른 AMQP를 사용한 애플리케이션끼리 통신이 가능합니다.</li>\n<li>AMQP는 이진 프로토콜입니다.</li>\n</ul>\n<p>상세한 내용은 아래와 같습니다.</p>\n<ul>\n<li><a href=\"https://www.cloudamqp.com/blog/what-is-amqp-and-why-is-it-used-in-rabbitmq.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What is AMQP ...</a></li>\n</ul>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://aws.amazon.com/ko/message-queue/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS - Message Queue</a></li>\n<li><a href=\"https://coding-nyan.tistory.com/129\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kafka vs RabbitMQ</a></li>\n<li><a href=\"https://12bme.tistory.com/176\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">메시지큐(Message Queue) 알아보기</a></li>\n<li><a href=\"https://www.cloudamqp.com/blog/what-is-amqp-and-why-is-it-used-in-rabbitmq.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What is AMQP and why is it used in RabbitMQ?</a></li>\n<li><a href=\"https://velog.io/@cckn/%EB%B2%88%EC%97%AD%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-RabbitMQ%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">(번역)마이크로서비스 - RabbitMQ를 사용하는 이유</a></li>\n<li><a href=\"https://kamang-it.tistory.com/entry/AMQPRabbitMQRabbitMQ%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EC%99%80-%EC%84%A4%EC%B9%98%EB%B0%A9%EB%B2%95-1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">[AMQP][RabbitMQ]RabbitMQ를 사용하는 이유와 설치방법</a></li>\n</ul>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/RabbitmqLogo.41ba824.edee284248a0d2dff8e6a9760e57343e.png","size":{"width":725,"height":270},"sizes":"(max-width: 725px) 100vw, 725px","srcset":["/assets/static/RabbitmqLogo.41ba824.edee284248a0d2dff8e6a9760e57343e.png 725w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 725 270' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-d31874a1a843b739298cf819de0691d3'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-d31874a1a843b739298cf819de0691d3)' width='725' height='270' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAIAAADF1mwTAAAACXBIWXMAAAsSAAALEgHS3X78AAAGZUlEQVRYw%2b1X6W9UVRR/UI3GD/oPSIwmRqMYFSKiRqJfXEBEAqIUkaXQUiSASoJAQSpdrCyaspVAaQuUrdBSutB1us5MO512mG5DF7pMO52Z7i1LO%2bvPc957nRmG5QN8Mvbk5ua%2b8%2b679/zO%2bZ1z7xPwHxdhEsAkgCcF4HLCZYfbxU/U05g0fsJ6x0RzPnQxtxNu970aN1wu/2m0gtv1gK9FebTS7SNPEIH7tnl8eeKlBOjSkLIFpjp%2buqnCxZ9hUMhe9/Rd15EViawI5MSgreIBG0vTDIUY6JTfShMGjDAUeOdLvTIRHVrvVxOubTO291jN0tjTW/qsrZ1tLjGMpGnv6lRVazT6msHhIUkj4O/5mCsgP5aXSdmOzwQkBMmBJnHaub8ajp1vIX8fzm3AtpeQGT7BKxdPcDrkacdXojaLB45x%2bfO6HBxf4dVIFh%2bcB1UCD8ZvY6hb5Jjb6XSmF1yj5hQ/9DDkWnF%2bam6mzc7rV9XpcksVbcaO2hsN6fnZvQN9YgSOLsL3AooO8fS0HVgs4EyouKWNt6SeAfyOtG2yrywGhL2OIdM9LpQAnFqLhhxZT6hIGgtwas3ETLd3vgSvIQ%2bpv0lvyURldeW1kgJLXy%2b/F10%2bMDyYU6ooq1I7nE7rQF92UR7hlBZo7WzPKy8SARz5BksElMbJhi4UkLzeJwKiHVd34exPos9usX7/J2hT8%2bNwD2pS0ZgP2x1%2bTFzNFpsN0GfImoZcJK/jsTYFva2y9SNm2MfgtCE7CvE/wNyIkZ5xh6tCV6Wt0%2bkamcxSHOqbDdpanapGQ3joFTmeHetwUHzsdnt2cf7w6AgBWIDvBFz8BSMWxC9nMIfmw9qETi06qmBt5i3Tw2RX8ao52P4yD1rKEPYqLmxG7FwcXciaC5tweAHbRI%2bHv2ZNcwliv8SxJTgdjPC3UZfNyoQVnEhGHfa8g/Dp7EH9VQq0skplspoV6lIPf4orld1mE0XGZreValQd3UbfulSoKjH2dJO5X2GFgLUBWCNwC6axOAgJwI8Cot/nlbIjETkTioNIWo2YD2U7cvfKxCOJmYNBE7MlYoas2f8pVImwtiBkKseBRJ%2bJ8PfEQK1i8pDoUnFpi4dCJRrV2Ph4kbqsb6CfdEOjIwRm3Mamj9vGC9WlPb0WXwAllcrWjrYJAOueYtODp4j9VGx6AaHPMoCImWIqRbOzr%2bxA7BfYOwe3%2b0WOubxMI6dampCwEsVHZABFRzgluvWInjWRFTb8MYPjfHa9DElzjoMmLkKUKK4oJ8v0hnqJKo2tTdX1ejEO5QRAoS4zTdQoCQDpqUB5AAQgZAr3ZDRRgvbL24dAAVGzZAp5kjgpCGekJHGg7DjilyE%2bEFtfxGAX0/36FXla9WXELWYSnljqLaAUli49zm9kHpJoL3LVFuExgEolJSu5nxzPDtaoeqwWspWA2R0OeqQa6gsgX1ncZTb5AAgW%2b%2bUCTizjRStOc3WKEoOevosLqCRNxcwikpy/ED2bU4VKZNwijsDpENRclqfR5ycCmejHvpUDRS1qNqytvJQ/AI4AUYI8TflKzjb3WolLdgdZ7pAiU1Ov981vmpmhyBm5NUpJvBBBAjY8h/XPcAt9GhufR8wH2DoNqwT8OZs3yAiXySrVEEJlv4sDn0N7SaxFZjECRlyhartLnpYYhMwIrlp73sXYKGu66xH2Bg%2bSQ7lwcWFPwfnNnghQubw7dpeTxVCfW6aoaailsU3MAYIxMDyUqcglu6XliWAV17ViGT0wD4sELA/AMkFuxBw6DQIDuN8p5kDKVpze4K2qkR%2bhpZwP5p2vIWM39n6MX6ehuxFDXdjxCkqOMeDd0%2bWzInEll6baTK45dJCTxC1FnZjEnTXY/SaUJ2Gqt7lRqCy%2bIwLo7e87mZJssphFT9uo2kjAqKpmFeXRcUbsP5V2Qa3T6G80CGguZSqrk7hoyC0JlWeYA6SXss1Yg3aNN2XpytDXxmAIA6VEeyUze1g0l%2b4IVFgp3aU7BQmV/IJ/2OsedrWW8wEiCZ0YVNmaS6ggWHrN0jnlcDqMZhPxRzrR6DbhOb/6hwYMN5tvtLVQPjS1t9L48a7Tbr%2bbjPdG5FF6xr7T/G6yD7nJ%2bd6F7tc/8DrteHhz%2blvme22WvpXfTqCSle577Obmc4/wvJVeuV1%2b9j1i7CeTf2STAP7vAP4FQk93pdsKeUAAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}}},"context":{}}