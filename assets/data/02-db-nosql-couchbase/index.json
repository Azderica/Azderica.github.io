{"hash":"4d08d5d9909bc52ba8ae53ab8b5e8ea790bc2d53","data":{"post":{"title":"[DB] Couchbase의 개념과 특징, 아키텍처","path":"/02-db-nosql-couchbase/","date":"20. September 2021","timeToRead":4,"tags":[{"id":"Database","title":"Database","path":"/tag/Database/"},{"id":"Nosql","title":"Nosql","path":"/tag/Nosql/"},{"id":"Redis","title":"Redis","path":"/tag/Redis/"},{"id":"Architecture","title":"Architecture","path":"/tag/Architecture/"},{"id":"Sentinel","title":"Sentinel","path":"/tag/Sentinel/"},{"id":"Cluster","title":"Cluster","path":"/tag/Cluster/"}],"description":"Nosql 중 Couchbase에 대해 좀 더 자세하게 알아봅니다.","content":"<h1 id=\"couchbase를-좀-더-자세하게\"><a href=\"#couchbase%EB%A5%BC-%EC%A2%80-%EB%8D%94-%EC%9E%90%EC%84%B8%ED%95%98%EA%B2%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Couchbase를 좀 더 자세하게</h1>\n<p>지난 게시글은 다음과 같습니다.</p>\n<ul>\n<li><a href=\"https://azderica.github.io/00-db-nosql/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NoSQL</a></li>\n<li><a href=\"https://azderica.github.io/01-db-nosql-redis/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redis</a></li>\n</ul>\n<p>오늘은 Couchbase 개념입니다.</p>\n<h2 id=\"couchbase-개념\"><a href=\"#couchbase-%EA%B0%9C%EB%85%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Couchbase 개념</h2>\n<ul>\n<li>카우치 베이스는 Document 기반의 Key-Value 스토어입니다.</li>\n<li>하나의 유니크(Unique)한 키에 값을 저장하는 방식이며, 저장되는 값은 JSON 도큐먼트가 저장됩니다.</li>\n<li>키(key)는 최대 <strong>250 바이트</strong>, 밸류(Value)는 카우치베이스 버킷은 20BMB, Memcached 방식의 버킷의 경우 1MB까지 저장이 됩니다.</li>\n</ul>\n<p>저장할 때, 키와 값 뿐만 아니라 메타데이터도 같이 저장되며 메타 데이터는 <code class=\"language-text\">CAS, TTL, Flag</code> 값 3가지가 저장됩니다.</p>\n<ul>\n<li><code class=\"language-text\">CAS</code> : 데이터에 대한 일종의 타임 스탬프와 같은 개념으로, 여러 클라이언트가 같이 데이터를 접근했을 때 일관성(Consistent) 문제를 해결해줍니다.</li>\n<li><code class=\"language-text\">TTL</code> : <code class=\"language-text\">Time To Live</code>, 데이터의 유효 시간을 정의합니다.</li>\n<li><code class=\"language-text\">FLAG</code> : 카우치베이스 클라이언트에서 사용하는 메타데이터입니다.</li>\n</ul>\n<p>이러한 메타데이터는 하나의 메타데이터(CAS, TTL, Flag)는 60바이트의 메모리를 차지하며, 카우치베이스 서버는 모든 키와 메타데이터를 유지하기 위해 용량을 설계할때, RAM의 사이즈를 결정합니다.</p>\n<h3 id=\"버킷bucket\"><a href=\"#%EB%B2%84%ED%82%B7bucket\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>버킷(Bucket)</h3>\n<h3 id=\"뷰view\"><a href=\"#%EB%B7%B0view\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>뷰(View)</h3>\n<br/>\n<h2 id=\"couchbase-특징\"><a href=\"#couchbase-%ED%8A%B9%EC%A7%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Couchbase 특징</h2>\n<h3 id=\"memcached-기반의-level-2-캐쉬를-내장하여-빠릅니다\"><a href=\"#memcached-%EA%B8%B0%EB%B0%98%EC%9D%98-level-2-%EC%BA%90%EC%89%AC%EB%A5%BC-%EB%82%B4%EC%9E%A5%ED%95%98%EC%97%AC-%EB%B9%A0%EB%A6%85%EB%8B%88%EB%8B%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Memcached 기반의 Level 2 캐쉬를 내장하여 빠릅니다.</h3>\n<ul>\n<li>memcached를 자체적으로 Level 2 캐쉬로 사용합니다.</li>\n<li>자체적으로 메모리 캐쉬 기능을 가지고 있기 때문에 성능이 빠릅니다.</li>\n</ul>\n<p>(다만, 키의 유연성이나 클러스터에서 단점을 가집니다.)</p>\n<h3 id=\"모바일-디바이스와-sync\"><a href=\"#%EB%AA%A8%EB%B0%94%EC%9D%BC-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%99%80-sync\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>모바일 디바이스와 Sync</h3>\n<ul>\n<li>카우치디비 계열 DB들은 모바일 디바이스에 탑재할 수 있으며, 서버에 설치된 카우치베이스 계열과 Sync가 됩니다.</li>\n</ul>\n<h3 id=\"데이터-센터간-복제-기간\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%BC%ED%84%B0%EA%B0%84-%EB%B3%B5%EC%A0%9C-%EA%B8%B0%EA%B0%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>데이터 센터간 복제 기간</h3>\n<ul>\n<li>XDCR(Cross Data Center Replication)의 기능을 이용해서 물리적으로 떨어진 데이터 센터간에 복제가 가능합니다.</li>\n<li><a href=\"https://azderica.github.io/00-db-couchbase-xdcr/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XDCR의 상세 내용</a></li>\n</ul>\n<h3 id=\"indexing-grouping-ordering-join-가능\"><a href=\"#indexing-grouping-ordering-join-%EA%B0%80%EB%8A%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Indexing, Grouping, Ordering, Join 가능</h3>\n<ul>\n<li>대부분의 NoSQL은 Key/Value Store 형식으로, 개별 필드에 대한 Indexing이나 필드별로 group by를 통한 sum,count 등의 기능, 특정 필드별로의 Sorting이 불가능합니다.</li>\n<li>Indexing을 지원하는 경우도 있기는 하지만, 내부적으로 성능상 문제가 있는 경우가 많으나 카우치베이스는 그러한 문제가 없습니다.</li>\n</ul>\n<h3 id=\"확장이-쉬움\"><a href=\"#%ED%99%95%EC%9E%A5%EC%9D%B4-%EC%89%AC%EC%9B%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>확장이 쉬움</h3>\n<ul>\n<li>분산 구조의 NoSQL의 경우 노드확장이 어렵거나 장애처리가 어려운 경우가 많으나 카우치베이스는 손쉽게 확장을 하고 장애 처리를 합니다.</li>\n<li>이러한 장점은 운영에서 큰 이점이 됩니다.</li>\n</ul>\n<h3 id=\"built-in-관리-도구-제공\"><a href=\"#built-in-%EA%B4%80%EB%A6%AC-%EB%8F%84%EA%B5%AC-%EC%A0%9C%EA%B3%B5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Built in 관리 도구 제공</h3>\n<ul>\n<li>카우치베이스는 웹 기반의 GUI 관리 도구를 기본으로 제공합니다.</li>\n</ul>\n<h3 id=\"memcached-프로토콜-지원\"><a href=\"#memcached-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C-%EC%A7%80%EC%9B%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Memcached 프로토콜 지원</h3>\n<ul>\n<li>캐쉬 솔루션으로 유명한 Memcached 르포토콜을 지원하기 때문에 Memcached 인프라를 사용할 수 있습니다.</li>\n</ul>\n<h3 id=\"스키마가-없는-유연한-저장-구조scheme-less\"><a href=\"#%EC%8A%A4%ED%82%A4%EB%A7%88%EA%B0%80-%EC%97%86%EB%8A%94-%EC%9C%A0%EC%97%B0%ED%95%9C-%EC%A0%80%EC%9E%A5-%EA%B5%AC%EC%A1%B0scheme-less\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스키마가 없는 유연한 저장 구조(Scheme-less)</h3>\n<ul>\n<li>스키마가 없으므로 하나의 테이블에 컬럼 형식이 다른 데이터를 넣을 수 있습니다.</li>\n<li>하나의 데이터 버켐ㅅ에 데이타 구조가 다른 JSON 문서들을 넣을 수 있습니다.</li>\n<li>데이터 타입이 다름에도 불구하고 공통되는 필드에 대해 Indexing, grouping 등을 제공할 수 있으며 JSON 도큐먼트에 country 라는 앨리먼트가 있는 도큐먼트등을 대상으로 grouping등을 할수 있습니다.</li>\n</ul>\n<br/>\n<h2 id=\"couchbase-architecture\"><a href=\"#couchbase-architecture\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Couchbase Architecture</h2>\n<br/>\n<h2 id=\"couchbase-cluster\"><a href=\"#couchbase-cluster\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Couchbase Cluster</h2>\n<br/>\n<h2 id=\"couchbase-vs-mongodb\"><a href=\"#couchbase-vs-mongodb\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Couchbase VS MongoDB</h2>\n<hr>\n<ul>\n<li><a href=\"https://bcho.tistory.com/924\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">couchbase 소개</a></li>\n<li><a href=\"https://bcho.tistory.com/925\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">couchbase 개념</a></li>\n<li><a href=\"https://bcho.tistory.com/928\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">couchbase view</a></li>\n<li><a href=\"https://bcho.tistory.com/934\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">couchbase architecture</a></li>\n<li><a href=\"https://docs.couchbase.com/server/5.0/architecture/architecture-intro.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">couchbase architecture detail</a></li>\n<li><a href=\"https://docs.couchbase.com/server/current/learn/clusters-and-availability/clusters-and-availability.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">couchbase cluster</a></li>\n<li><a href=\"https://dzone.com/articles/introduction-to-couchbase-for-mongodb-developers-a-1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">couchbase vs mongodb</a></li>\n<li><a href=\"https://zepinos.tistory.com/60?category=797689\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">왜 Couchbase을 선택하게 되었는가 - 1</a></li>\n<li><a href=\"https://zepinos.tistory.com/61\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">왜 Couchbase을 선택하게 되었는가 - 2</a></li>\n</ul>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/CouchbaseLogo.61e6a9a.d8a43ca2ab3c3f89651f789d8aaebd62.png","size":{"width":648,"height":316},"sizes":"(max-width: 648px) 100vw, 648px","srcset":["/assets/static/CouchbaseLogo.61e6a9a.d8a43ca2ab3c3f89651f789d8aaebd62.png 648w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 648 316' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-830cf1fa20beee5b0c8ba1ee1eaef397'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-830cf1fa20beee5b0c8ba1ee1eaef397)' width='648' height='316' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAfCAYAAABXscv8AAAACXBIWXMAAAsTAAALEwEAmpwYAAAHwUlEQVRYw%2b1Ze0yVRxbHt/HFu4CXNwiXpioaN90YX9EYtGAVXSCKqwkmGq0mLrr1UW00/rFm4yNqREGl2voIRvGR1RgLZY0ooigsS7FQ1EVZF%2b81FBAub34759w7n9/9uPeCqa2YdpKTO3Nm5syc3/zOmflynfAbL06/A/BWSic6OzvNNfHb2dGBzvZ2s7S1W/dZ6l0sqPrM89pe2%2bjB/HcKgNZ5R2N6asvRGr2PAfJkLJtrK/8RLVnfoTnzEktnY%2bMbMaDpnzfxKuMcGq5nwVTw4Bdz/u0xwEJb3vyZDBi9A2HwCoDB0w8vhrqjNf/ea2p3d8ItLaga/QdUOHuhTBeMEk8dniZ/3vtDQFL/p0/m4cUILxgDwlkMHr5ovX1HAUB7ktIpBYCmZlRGfszOPwzWo9g3BIXit/npM3O/nRB79wBYHPgpOhYGt5Ew%2bofB6DdK1HVoyb2tnC4nN3sinOtoaMQjAUDpyED8OygcD/xDcV8/GqaKR70cAMmAT/8Eg6vPawBcR6KtuOSN7P04/o8oFgAUCQDuCQDywz%2bC6dHj9wgAFwsAvqGcC%2bqTN8B0%2bChMKWkwpR6D6ehxNH31DUxffY2G9BOoT0tHrdDXpKTCuGcfvtePQaFfCAoEAHkBobgdPhqN7w8AcQoABl2IGQQREgaRFwwu3hbxYfmfYMpT0fdEsKTczQelbt4oFr9FRPvAMOQHhSFXAHBT/z4AIHNAzPzXOYCcJxCorpFq/1GoEkmyMkCPR4HhKBPyvTjxf4mEx84LuSXaNwJHISdiNBp6fQ6wZPjahMXmWyD4Q5uOk7wQzv83IMzK%2bVLhbHGQHg8EAHdD9LgdEoGboz5EdmAosj%2bKRPPLl70XAPUV15KVA%2bMH/ngx/ANryruapVpQvEow5D/uvqhw1%2bGhhw4lQgrFfX9PSJ6Qm0JyhHzrpcM/nN3xw9/%2brjjfe98BqjxA937DlztQ/5fPUbf8M9T9OQm1cYmomRcPowiRanFVVkXNQWVUDB5Hz0PFpwtQFhuPHxISUbokCaUrPkNp8l/x8IsvUXU%2bE51v%2bJx%2bZ98CvwRFf/VvAatXmfjtoMeJino9%2bVhRvuJYOszUtQjIntC3iUcR/ar7SNpaW9EuxOqL8tf6GlQv1CZeZurSoTrZHoFgQ7R2HJ1sd%2b23DoCtDTY1NeHZs2eor6/v4piWFVrm2GpLUAsLC7Fq1SpUVFRwu92SQKl/8%2bbNOHXqlKK3xUhb63RoEqS9sQ4ZIJ1vFRTctGkTvL29MWjQIAwZMgRr165V%2bmShDco52sWkXu241B0/fhxOTk64evWqFQAEOOlnz57dZW67JhRkW85V21ePlSFsDwQnLWJUEhMTeSNRUVFIS0vj9oEDB6wcl6yw9XVnq07O1dXVcZ1OmOzfvXuX2w0NDfxrMpkwcOBALFmyxEqvtlNTU9PFPs0j0TK4tra2Czh2AZBI5uXl8eZiYmJsxgwB4evrCxcXF8yZMwcGg4E3OmnSJGzYsIHH7NmzB2PHjsXz58954RUrVsDLy4ud27VrF86fP89rLFq0CEFBQWzv2rVrPHfo0KHw9/dHREQEPDw8sHv3btafOHGC9c7OztDr9cjKymL99u3bmanEUrn%2blStXeAzZmjFjBoexrfxjBYCk9v79%2b3lz6enpysm1iIwtDVPfsmXLcObMGYWuhDTVo6OjedzKlSu5XV1djeTkZK5v2bIFqampyM3NRWZmJusmTJjADlB91qxZPHfYsGHw8fHBsWPHEBkZyX0lJSXcpjC8ePEi%2bvXrhylTpuDJkyfcv2bNGraZk5PDoJNu7ty5KCgoYNDnz5/fJTTsAkAnTAaOHDmiANDc3Mz1xYsXcx8tTGXBggXo06cP8vPz4enpqSxEG5Ubp9MlR9Tl5MmT3H/jxg1u09xp06bxCfXt2xdxcXGsv3z5Mo87ePCgkjuITcS%2bMWPGMPuGDx%2bOESNGYNu2bTzm0KFDPGfy5MlISkpie2Tf3m1jNwQo/rWFKEt9jx%2bbv8wWLlzIANy5cwfu7u5ISEhg/bp163hccXExdDodxo0bZ2VH5oDs7GxuE9WJqrS5AQMGID4%2bnvUXLlzgccScpUuXct/evXsRHByMsLAwHlNZWansa%2bbMmdi3bx/XaXxKSgoDcu7cOSWZOkyCslMapE0dPnwYsbGxWL16NS5dusT65cuX4/r161yfPn065wCKQYpnSpqurq7cV1VVxSdG9Z07dyIjIwO3bt3iX9KRDSo0d%2bLEiXwIpCfAiM4Ux9S%2bf/%2b%2bEiZFRUV86gSC0Whkh4lpdOIUPpRYaezUqVNRXl6Os2fP8pxuc4B6AMX8xo0bOblQvLm5uWH9%2bvXct2PHDm4PHjyYnZfhQPd3//79ERoayjmCwCgrK%2bPwIUrT5mQuoARGNog5VMh5OjEZVsQmil2yRSygsnXrVr6Sx48fz87R4ZDjBAQBSHuVoXL69Gn4%2bflxEiQhkLrNAbYeQnS1UFKRV4wsdJ2RXjuXdJJqNEb9ZqDTIpEPnlevXilh19jYaLXGS/HpS7bUd7y0L23KK5XWpiwv23L/tAbpaR1HL8keP4XtPTzkA0gNnLaunuPoiau1o17X1lNca0uuowWuRw8hRx9Ctl55jp6etp6h6jna/p9jv7vx3X3I/eb/HP0/5/d1pwiKk7UAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}}},"context":{}}