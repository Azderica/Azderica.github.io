{"hash":"efa0708c55f8d5cbd854f8d9d80ca9ef32b474be","data":{"post":{"title":"[WEB] CORS","path":"/00-web-cors/","date":"26. December 2020","timeToRead":6,"tags":[{"id":"Web","title":"Web","path":"/tag/Web/"},{"id":"Cors","title":"Cors","path":"/tag/Cors/"},{"id":"HTTP","title":"HTTP","path":"/tag/HTTP/"}],"description":" CORS에 대한 개념을 잡습니다. ","content":"<h1 id=\"corscross-origin-resource-sharing\"><a href=\"#corscross-origin-resource-sharing\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CORS(Cross-Origin Resource Sharing)</h1>\n<p>웹 개발을 하게 되면, 반드시 보게되는 이슈입니다. 그러나 이에 대한 개념에 대해 정확하게 모른다는 생각이 들어 정리합니다.</p>\n<br/>\n<h2 id=\"cors의-정의\"><a href=\"#cors%EC%9D%98-%EC%A0%95%EC%9D%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CORS의 정의</h2>\n<p>CORS(Cross-Origin Resource Sharing)은 <strong>추가 HTTP 헤더를 사용</strong>하여, <strong>하나의 출처(origin)에서 실행 중인 웹 애플리케이션이 다른 출처의 선택한 자원에 권한을 부여하도록 브라우저에 알려주는 체제</strong>입니다.</p>\n<p><strong>하나의 출처</strong>란? URL의 프로토콜, 호스트, 포트가 동일한 경우를 의미합니다.</p>\n<p>일반적으로는 다른 출처(origin)에서 내 자원(resource)에 함부로 접근하지 못하게 하기 위해 사용됩니다.</p>\n<p>일반적으로 <strong>요청 헤더 목록</strong>은 다음과 같습니다.</p>\n<ul>\n<li>\n<p>Origin</p>\n<ul>\n<li>fetch가 시작되는 위치.</li>\n<li>경로 정보는 포함이 되지않고 서버 이름만 포함됨.</li>\n</ul>\n</li>\n<li>\n<p>Access-Control-Request-Method</p>\n<ul>\n<li><code class=\"language-text\">preflight request</code> 을 할 때, 실제 요청에서 어떤 메소드를 사용할지 서버에 알려줍니다.</li>\n</ul>\n</li>\n<li>\n<p>Access-Control-Request-Headers</p>\n<ul>\n<li><code class=\"language-text\">preflight request</code> 을 할 때, 실제 요청에서 어떤 header를 사용할 것인지 서버에서 알리기 위해 사용됩니다.</li>\n</ul>\n</li>\n</ul>\n<p><strong>응답 헤더 목록</strong>은 다음과 같습니다.</p>\n<ul>\n<li>\n<p>Access-Control-Allow-Origin</p>\n<ul>\n<li>브라우저가 해당 origin이 자원에 접근할 수 있도록 허용합니다.</li>\n<li><code class=\"language-text\">*</code> 은 credentials이 없는 요청에 한해서 모든 origin에서 접근이 가능하도록 허용합니다.</li>\n</ul>\n</li>\n<li>\n<p>Access-Control-Expose-Headers</p>\n<ul>\n<li>브라우저가 액세스할 수 있는 서버의 화이트리스트 헤더를 허용합니다.</li>\n</ul>\n</li>\n<li>\n<p>Access-Control-Max-Age</p>\n<ul>\n<li>얼마나 오랫동안 <code class=\"language-text\">preflight request</code>가 캐싱될 수 있는지를 나타냅니다.</li>\n</ul>\n</li>\n<li>\n<p>Access-Control-Allow-Credential</p>\n<ul>\n<li><code class=\"language-text\">Credentials</code>가 true일 때 요청에 대한 응답이 노출될 수 있는지를 나타냅니다.</li>\n<li><code class=\"language-text\">preflight request</code> 에 대한 응답의 일부로 사용되는 경우, 실제 자격 증명을 사용하여 실제 요청을 수행 할 수 있는지를 나타냅니다.</li>\n<li>간단한 GET 요청의 경우에는 <code class=\"language-text\">preflight</code> 되지 않으므로 자격 증명이 필요한 리소스를 요청하면 헤더가 리소스와 함께 반환되지 않으며 브라우저에서 응답을 무시하고 웹 콘텐츠로 반환하지 않습니다.</li>\n</ul>\n</li>\n<li>\n<p>Access-Control-Allow-Methods</p>\n<ul>\n<li><code class=\"language-text\">preflight request</code> 에 대한 응답으로 허용되는 메서드들을 나타냅니다.</li>\n<li>일반적으로 회사에서 보안 상의 이유로 http 메소드를 제한하는 경우, 이 헤더를 많이 사용합니다.</li>\n</ul>\n</li>\n<li>\n<p>Access-Control-Allow-Headers</p>\n<ul>\n<li><code class=\"language-text\">preflight</code> 요청에 대한 응답으로 실제 요청 시 사용할 수 있는 HTTP 헤더를 나타냅니다.</li>\n</ul>\n</li>\n</ul>\n<p><strong>preflight request</strong>란? <strong>미리 전송(사전요청)</strong>을 의미합니다. 이는 본격적인 교차 HTTP 요청 전에 서버 측에서 그 요청의 메서드와 헤더에 대한 인식을 진행하는 지 확인합니다.</p>\n<p>이는 위에 있는 HTTPHeader의 \"Origin\", \"Access-Control-Request-Method\", \"Access-Control-Request-Headers\" 의 3가지 HTTP request headers를 사용하는 HTTPMethod(\"OPTIONS\") 요청입니다.</p>\n<br/>\n<h2 id=\"cors가-없으면\"><a href=\"#cors%EA%B0%80-%EC%97%86%EC%9C%BC%EB%A9%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CORS가 없으면?</h2>\n<p>만약 어떤 사이트에서 CORS 제한이 없으면 어떻게 될까요. 다른 출처의 어플리케이션이 서로 통신하는 것에 아무런 제한이 없게된다면 악의를 가진 사용자가 소스 코드를 볼 수도 있고, 세션정보를 가져갈 수도 있습니다.</p>\n<p>또한 <a href=\"https://ko.wikipedia.org/wiki/%EC%82%AC%EC%9D%B4%ED%8A%B8_%EA%B0%84_%EC%9A%94%EC%B2%AD_%EC%9C%84%EC%A1%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSRF(Cross-Site Request Forgery)</a>나 <a href=\"https://ko.wikipedia.org/wiki/%EC%82%AC%EC%9D%B4%ED%8A%B8_%EA%B0%84_%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8C%85\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XSS(Cross-Site Scripting)</a>와 같은 방법을 사용해서 어플리케이션에서 코드가 실행된 것처럼 꾸며서 사용자의 정보를 탈취하기 너무 쉬워집니다.</p>\n<p>이러한 경우에 개발자들이 투자해야하는 리소스들은 더 많아지기 때문에 이에 대한 제한은 꼭 필요합니다.</p>\n<br/>\n<h2 id=\"cors는-어떻게-동작하나요\"><a href=\"#cors%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CORS는 어떻게 동작하나요?</h2>\n<p>이러한 CORS의 정의와 왜 필요한지에 대해서 알게 되었기 때문에 좀 더 자세하게 이야기를 해볼려고 합니다.</p>\n<p>GET 요청은 다음과 같이 간단하게 작동합니다. 특히 GET은 서버의 자원을 바꾸지 않기 때문에 로직은 아래처럼 간단합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/103171139-141d8680-488d-11eb-87bc-38088c87fbbf.png\" alt=\"CORS-GET\"></p>\n<p>그러나 POST와 같은 비멱등인 경우, 허용하지 않은 도메인이 서버 자원을 변경시킬 수 있기 때문에 이를 신경써줘야합니다. 따라서 POST와 같은 경우는 아래처럼 동작합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/103171048-67430980-488c-11eb-98a1-4e77c348d22d.png\" alt=\"CORS-POST\"></p>\n<p>먼저 OPTIONS을 요청해서 해당 도메인간의 요청이 정상적인지 확인합니다.</p>\n<p>이와 같이 CORS는 동작합니다.</p>\n<br/>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리.</h2>\n<p>CORS에 대한 이슈에 대해 정리했습니다. 이에 대한 개념을 잡았으며, 다음 글에서는 spring boot에서 CORS 이슈를 해결하는 방법에 대해 이야기해보겠습니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Glossary/Preflight_request\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Glossary/Preflight_request</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/Origin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/Origin</a></li>\n<li><a href=\"https://hannut91.github.io/blogs/infra/cors\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hannut91.github.io/blogs/infra/cors</a></li>\n<li><a href=\"https://zzossig.io/posts/web/what_is_cors/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://zzossig.io/posts/web/what_is_cors/</a></li>\n</ul>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/CorsText.214a68b.c32b84a9e67b4bb273d225e0fca50227.png","size":{"width":820,"height":312},"sizes":"(max-width: 820px) 100vw, 820px","srcset":["/assets/static/CorsText.a67b0b2.c32b84a9e67b4bb273d225e0fca50227.png 480w","/assets/static/CorsText.214a68b.c32b84a9e67b4bb273d225e0fca50227.png 820w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 820 312' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ecf683e9dde3382860fab74350a7047b'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ecf683e9dde3382860fab74350a7047b)' width='820' height='312' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAAsSAAALEgHS3X78AAAEM0lEQVRYw%2b1Wa1CUZRT2ZzNNRVNayCZUyAgql2URSEkrbUXcBeQm6OKmhuSlYRCQq81YaVLmJQUEJW2cLM2y6zQ1TUw100w/mkbzilyEZQGjmqmZ/j69z1nf5dt1jca/fD/OvO85e855zvu87znfTum5XovJLFNMAkwCTAJMAkwCTAImOQHX%2breJcH%2b1twbdSoyrlu6%2bbSJ6r%2bOChXm6%2b3wx1I2%2bxr3Gnijf7TB0vaHida3BevB5A14Ajd7fmjCsxHujCUM3Gv17rp6RRgwON2D09%2b3wjDZKTO%2bAL46r1gk0NOqLpW3AW4%2b%2bwTr5bcDbIHuNRxvzMa8uSufS%2b96BuptrYK1cdW2DIw0BscTs99T7de6NGAEEaEauD9Xj8JE8tHWswNFjBTh%2boghv7nfg2DuFONiag/dOr8K775eg%2bY0snP7QJckvdVdLogtXtuLytWpcvFqFkbHtOHGyWPLQ5%2byna/DjT5vx6%2bWtOHVmNc5drJRb6/fU4fylSux41Y6PP3OLTvKYQ262p0b2F1TclZ5qhVXlv0192HZV76G2XHzwka8e%2bvO3Tz53o%2bv7cnmJtH/73Qapnxen4wMIIPgv5yvw5MJHsXZ9CuITwpGa9ggslvuQlj4DzyyORmVVBlxrrFi46DGse34e8gvnIjdvDrJzZmPLi/NR6k7GKzvt%2bPlcBWwpFhFXqRULMqLEz740RvIw387XluLPv3eg64dyhIXdhSX2mSgoisfK4gRs2vIEyspTsdwRC0d2nOA41Uoba1vtsvpv91l7DNxrbUi2RaCiMgPFJYlY7oyVGpdlzUJewVw4lF6k8tbULgrdApoAFk4CyjakIiExHCnzLHg8%2bgHYM2Mk0fwFUSjfmIbFS6KRr3QeePach2BNjlAgcVIsgc6cLUWSdToSk6b7i4%2bNm4bIyDDMip2GqVPvxsbN6fjrn5fxTVcZZih7ss0iMYWKBBJG8kj%2bw%2bH3SP5VriQ4c%2bKEvEx1MNbNJ%2b1%2bziZx9OGhI6PuR3x8uJA5M%2bZB%2bS3Ccq%2bcq7b%2bKXml/9kC%2b99youVwLlrbV6D9aD5a1PPiE9t7wCnrwZYcaYG9qjW%2b%2bGodWpXvkbcLpEUYx7bhzbKFDhzKFjJOnipBQ9PTKFyZILbdry8Tu1fNGJLevCcLHZ35aFOYncd97can3aHwdzVnSsyXX6%2bXlfk7VW7OEQox96maNf6u3ZnSesTcs88hOV7YlC4vl3aPmhV6OIccghwow2Pjg1APRfY1hyB7cfSPl0TnoBm%2b%2bbuO4/AjgH84qVvinsUyPwceY2lnL9JOXfvLOjaOS3%2buxNJ%2bJE5fmq%2b28RroTx/Wqs9h/PoYbz/gBQR/VkKJHh5G/VafmpA%2bxs%2bsMZf%2bDE4kwVgT1Wv0D77kW1pgIjEGhWLxTmL/b/ydSii8274A86%2bwSYBJgEmASYBJwOSUfwEnG3PTGe7tRQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}}},"context":{}}