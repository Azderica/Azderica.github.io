{"hash":"a494b8b1778660c606708ae3dd5d59774a4a3863","data":{"tag":{"title":"Instant","belongsTo":{"edges":[{"node":{"title":"[Java Time] Java Date & Time API 정리","path":"/00-java-time/","date":"8. October 2022","timeToRead":7,"description":"Java Date & Time API에 대해 정리합니다.","content":"<h1 id=\"java의-날짜-시간에-대한-기본적인-정책\"><a href=\"#java%EC%9D%98-%EB%82%A0%EC%A7%9C-%EC%8B%9C%EA%B0%84%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EC%A0%95%EC%B1%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Java의 날짜, 시간에 대한 기본적인 정책</h1>\n<h2 id=\"기존-java의-날짜-api의-문제\"><a href=\"#%EA%B8%B0%EC%A1%B4-java%EC%9D%98-%EB%82%A0%EC%A7%9C-api%EC%9D%98-%EB%AC%B8%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>기존 Java의 날짜 API의 문제.</h2>\n<p>Java 8 이전에 사용하던 Date 관련 클래스는 Date, Calendar, SimpleDateFormat 등이 있었으나, 많은 문제가 있어 자바 8 버전 이후 부터는 새로운 날짜 관련 API를 제공합니다.</p>\n<p>기존 클래스들의 문제는 다음과 같습니다.</p>\n<ul>\n<li>\n<p>부적절한 클래스, 메소드 이름</p>\n<ul>\n<li>Date 클래스의 경우, TimeStamp 방식으로 동작하고 시간을 내재하고 있으나, ClassName은 Date입니다.</li>\n</ul>\n</li>\n<li>\n<p>Thread saftety 하지 않음</p>\n<ul>\n<li>Date 클래스의 경우 mutable 하기 때문에 다른 Thread에서 값을 참조하고 변경할 수 있습니다. -> 즉, thread safe 하지 않습니다.</li>\n</ul>\n</li>\n<li>\n<p>버그가 발생할 여지가 많음</p>\n<ul>\n<li>Calendar 클래스의 경우 입력값의 month가 0이 1월로 처리됩니다. 그래서 Calendar.SEPTEMBER 같은 상수를 사용해야하며, DB 데이터랑 연결하면서 서로 다르게 해석됩니다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"joda-time\"><a href=\"#joda-time\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Joda Time</h3>\n<p>위의 여러한 문제 들이 있어 Java8 이전에서는 Joda-Time이라는 라이브러리를 사용했습니다. 그러나, Java 8 부터는 Joda-Time이 자바 표준 라이브러리로 들어왔습니다.</p>\n<br/>\n<h2 id=\"현재의-java의-날짜시간-정책\"><a href=\"#%ED%98%84%EC%9E%AC%EC%9D%98-java%EC%9D%98-%EB%82%A0%EC%A7%9C%EC%8B%9C%EA%B0%84-%EC%A0%95%EC%B1%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>현재의 Java의 날짜/시간 정책.</h2>\n<p>Java SE8 버전부터 JEP(JDK Enhancement Proposal, JDK 개선 제안) 150, JSR-310(Java Specificiation Requests)의 310번째 Requests인 <code class=\"language-text\">Date &amp; Time API</code> 으로 들어왔습니다.</p>\n<p>Date &#x26; Time API의 목표를 읽어보면 다음과 같습니다.</p>\n<ul>\n<li>date, time, instant, time-zone을 포함하는 공식 시간 개념 지원</li>\n<li>immutable 구현</li>\n<li>개발자의 사용성에 중점을 둔 JDK에 적절하고 효과적인 API 제공</li>\n<li>기존의 JDK API와의 통합</li>\n<li>제한된 calendar 시스템 세트를 제공하고 다른 것들로 확장 가능</li>\n<li>ISO-8601, CLDR 및 BCP47을 포함한 관련 표준 사용</li>\n<li>UTC에 연결하여 명시적 시간 척도를 기반</li>\n</ul>\n<p>현재 이 API는 표준이 되었으며, 위의 나온 Joda-Time의 창시자 분 또한 API를 만드는 데 동참했습니다.</p>\n<p>위의 문제점인 부적절한 클래스나 메서드 명들도 정리가 되었고, Thread safe하며, 여러 편의기능이 많고, Zoned 관련된 기능도 있어 여러 글로벌 서비스에서 적합합니다.</p>\n<h3 id=\"instant\"><a href=\"#instant\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Instant</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/194757246-bf361279-1d9f-49e6-b9a4-8dcc23983f2e.png\" alt=\"Instant Image\"></p>\n<p>1970년 1월 1일 UTC의 첫 번째 순간 이후의 현재 시간까지의 나노초를 나타낸 값입니다. 라이브러리를 더 상세하게 보면, epochSecond와 nanos 로 나눠집니다.</p>\n<p>일반적으로 순간을 표현할 때 사용하며, Unix Timestamp를 구할 때 사용할 수 있습니다. Unix Timestamp를 사용하는 이유는 숫자 자료형을 가지고 연산을 하기 때문에 <code class=\"language-text\">Local/Offset/ZonedDateTime</code>과 비교했을 때 연산 속도가 훨씬 빠릅니다. </p>\n<p>대부분의 비즈니스 로직, 데이터 저장 및 데이터 저장 및 데이터 변경은 UTC로 이루어져야하므로 자주 사용하기에 편리한 클래스입니다.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Instant</span> cur <span class=\"token operator\">=</span> <span class=\"token class-name\">Instant</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 2022-10-09T12:45:11.825755Z</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">.</span><span class=\"token function\">getEpochSecond</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 1665319511</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">.</span><span class=\"token function\">getNano</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 825755000</span></code></pre>\n<p>Instant의 now에서는 UTC 표준 시간대를 사용합니다.  (<code class=\"language-text\">Clock.systemUTC().instant()</code>)</p>\n<h3 id=\"localdate-localtime-localdatetime\"><a href=\"#localdate-localtime-localdatetime\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LocalDate, LocalTime, LocalDateTime</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/194757952-64597f21-4343-44ef-91d2-5d3d1c1eb728.png\" alt=\"LocalDate\">\n<img src=\"https://user-images.githubusercontent.com/42582516/194757965-437143c5-3218-4907-8525-2885741f2382.png\" alt=\"LocalTime\">\n<img src=\"https://user-images.githubusercontent.com/42582516/194757977-2a98fa74-3ab6-4d7b-ae35-bce256acc625.png\" alt=\"LocalDateTime\"></p>\n<p>Java Time에서 <code class=\"language-text\">Local</code> 이 들어가는 것은 시간대(Zone Offset/Zone Region)에 대한 정보가 없다는 것을 의미합니다. </p>\n<p>일반적으로 Local 클래스는 생일이나 기념일 등에 주로 사용됩니다.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">LocalDate</span> localDate <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>localDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 2022-10-09</span>\n\n<span class=\"token class-name\">LocalTime</span> localTime <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>localTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 21:49:19.858512</span>\n\n<span class=\"token class-name\">LocalDateTime</span> localDateTime <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>localDateTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 2022-10-09T21:49:19.858589</span></code></pre>\n<p>위의 라이브러리를 간략하게 이야기하면 <code class=\"language-text\">LocalDateTime</code>은 <code class=\"language-text\">LocalDate</code>와 <code class=\"language-text\">LocalTime</code>으로 구성되어 있고, <code class=\"language-text\">LocalDate</code>는 <code class=\"language-text\">year, month, day</code>로 구성되어 있고 이를 맞춰주기 위한 보정값을 사용하고 있고 <code class=\"language-text\">LocalTime</code>은 <code class=\"language-text\">hour, minute, second, nano</code> 의 값으로 이루어져 있습니다.</p>\n<p>LocalDateTime의 now는 default time-zone 의 정보를 사용합니다. 내부적으로는 Instant형으로 바꾼 후, ZoneOffset으로 한번 바꾼뒤 EpochSecond로 바꾼 이후에야 LocalDateTime으로 출력합니다.</p>\n<h3 id=\"offsetdatetime\"><a href=\"#offsetdatetime\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>OffsetDateTime</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/194758471-9ed85cc8-6687-4b15-bf1b-422355f8a0f4.png\" alt=\"OffsetDateTime\"></p>\n<p><code class=\"language-text\">LocalDateTime + ZoneOffset</code> 의 개념입니다. <code class=\"language-text\">OffsetDateTime</code>는 UTC보다 몇 시간/분/초 앞 또는 뒤의 컨텍스트를 사용하여 순간을 날짜 및 시간으로 나타냅니다.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OffsetDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ZoneOffset</span><span class=\"token punctuation\">.</span>UTC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     \n<span class=\"token comment\">// 2000-01-01T11:11:11Z</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OffsetDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ZoneOffset</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"+9\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">// 2000-01-01T11:11:11+09:00</span>\n<span class=\"token comment\">// 위 두 값은 다릅니다.</span></code></pre>\n<h3 id=\"zoneddatetime\"><a href=\"#zoneddatetime\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ZonedDateTime</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/194759752-1ecd1bc2-ba39-43c2-801c-174f1723a988.png\" alt=\"ZonedDateTime\"></p>\n<p><code class=\"language-text\">OffsetDateTime + ZoneRegion</code> 의 개념입니다. OffsetDateTime 과의 차이점은 DST(Daylight Saving Time)와 같은 Time Transition Rule을 포함하는 ZoneRegion의 유무차이 입니다.</p>\n<p>몇개의 나라의 경우, 서머타임을 적용하기 때문에 때로는 겨울, 여름을 다르게 써야하는데, 이를 자바에서는 하나의 Time Zone으로 통일하고, Time Transition Rule을 가지는 ZoneRules을 통해 알아서 내부적으로 계산해줍니다.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">ZoneId</span> seoulZoneId <span class=\"token operator\">=</span> <span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Asia/Seoul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>seoulZoneId<span class=\"token punctuation\">.</span><span class=\"token function\">getRules</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// ZoneRules[currentStandardOffset=+09:00]</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>seoulZoneId<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// Asia/Seoul</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZonedDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Asia/Seoul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 2020-01-01T11:11:11+09:00[Asia/Seoul]</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZonedDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Asia/Tokyo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 2020-01-01T11:11:11+09:00[Asia/Tokyo]</span>\n<span class=\"token comment\">// 위 두값은 다른 region이라 다릅니다.</span>\n\n<span class=\"token comment\">// cet 는 유럽 시간</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZonedDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CET\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 2020-01-01T11:11:11+01:00[CET]</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZonedDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CET\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 2020-06-01T11:11:11+02:00[CET]</span></code></pre>\n<br/>\n<h2 id=\"jdbc에서-변경되는-형태\"><a href=\"#jdbc%EC%97%90%EC%84%9C-%EB%B3%80%EA%B2%BD%EB%90%98%EB%8A%94-%ED%98%95%ED%83%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JDBC에서 변경되는 형태</h2>\n<p>JDBC는 Java와 Database Scheme 사이의 컨버팅을 다음과 같이 자동으로 변경이 됩니다.</p>\n<table>\n<thead>\n<tr>\n<th>Date-time types in Java &#x26; SQL</th>\n<th>Legacy class</th>\n<th>Modern class</th>\n<th>SQL standard data type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Moment</td>\n<td>Java.util.Date<br/>Java.sql.Timestamp</td>\n<td>Java.time.Instant</td>\n<td>TIMESTAMP WITH TIME ZONE</td>\n</tr>\n<tr>\n<td>Moment with offset-from-UTC</td>\n<td>(lacking)</td>\n<td>java.time.OffsetDateTime</td>\n<td>TIMESTAMP WITH TIME ZONE</td>\n</tr>\n<tr>\n<td>Moment with time zone</td>\n<td>java.util.GregorianCalendar<br/>javax.xml.datatype.XMLGregorianCalendar</td>\n<td>java.time.ZonedDateTime</td>\n<td>TIMESTAMP WITH TIME ZONE</td>\n</tr>\n<tr>\n<td>Date &#x26; Time-of-day</td>\n<td>(lacking)</td>\n<td>java.time.LocalDateTime</td>\n<td>TIMESTAMP WITHOUT TIME ZONE</td>\n</tr>\n<tr>\n<td>Date only</td>\n<td>java.sql.Date</td>\n<td>java.time.LocalDate</td>\n<td>DATE</td>\n</tr>\n<tr>\n<td>Time-of-day only</td>\n<td>java.sql.Time</td>\n<td>java.time.LocalTime</td>\n<td>TIMESTAMP WITHOUT TIME ZONE</td>\n</tr>\n<tr>\n<td>Time-of-day with offset</td>\n<td>(lacking)</td>\n<td>java.time.OffsetTime</td>\n<td>TIME WITH TIME ZONE</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Year_2038_problem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">2038년 문제</a></li>\n<li><a href=\"https://openjdk.org/jeps/150\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenJDK</a></li>\n<li><a href=\"https://stackoverflow.com/questions/32437550/whats-the-difference-between-instant-and-localdatetime\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">different between Instant and LocalDateTime</a></li>\n<li><a href=\"https://perfectacle.github.io/2018/09/26/java8-date-time/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">날짜와 시간 API</a></li>\n<li><a href=\"https://jaehoney.tistory.com/136\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Java 8 - 새로운 Date &#x26; Time 정리</a></li>\n</ul>\n"}}]}}},"context":{}}