{"hash":"0701dade6d489be1beb11ef41af9376f9a0f1a6d","data":{"tag":{"title":"Web","belongsTo":{"edges":[{"node":{"title":"[GraphQL] GraphQL 개념잡기","path":"/00-graphql/","date":"1. December 2020","timeToRead":3,"description":" GraphQL에 대한 기본적인 내용을 정리합니다. ","content":"<h1 id=\"graphql이란\"><a href=\"#graphql%EC%9D%B4%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GraphQL이란</h1>\n<p>gatsby로 블로그를 이전하게 되면서 GraphQL에 대해서 반드시 알아야하는 상황이 왔다. 기존에도 공부를 했어야한다고 꾸준하게 생각을 했는데, 드디어 한번 공부하게 되었다.</p>\n<br/>\n<h2 id=\"graphql-정의\"><a href=\"#graphql-%EC%A0%95%EC%9D%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GraphQL 정의</h2>\n<p>페이스북에서 만든 퀴리 언어입니다. 다만 SQL은 <strong>데이터베이스에 저장된 데이터를 효율적으로 가져오는 것을 목적</strong>으로 하지만, GraphQL은 <strong>웹 클라이언트가 데이터를 서버로부터 효율적으로 가져오는 것을 목적</strong>으로 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/100871453-a9726880-34e3-11eb-9211-ef08e50163bf.png\" alt=\"image\"></p>\n<blockquote>\n<p>발전하고 있는 GraphQL의 관심도.</p>\n</blockquote>\n<p>GraphQL은 위에 이야기했듯이 기존의 쿼리언어인 sql과 많은 구조적 차이가 있습니다.</p>\n<br/>\n<h2 id=\"graphql-vs-http-api\"><a href=\"#graphql-vs-http-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GraphQL vs HTTP API</h2>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/100874660-40d9ba80-34e8-11eb-8670-75e1c8ff0309.png\" alt=\"image\"></p>\n<blockquote>\n<p>HTTP API와 GQL의 기술 스택 비교</p>\n</blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/100874777-6bc40e80-34e8-11eb-8bde-b938ffea55f9.png\" alt=\"image\"></p>\n<blockquote>\n<p>REST API와 GraphQL API의 차이</p>\n</blockquote>\n<p>GraphQL API를 사용하면 여러번 네트워크 호출을 할 필요 없이, 한번의 네트워크 호출로 처리 할 수 있습니다.</p>\n<br/>\n<h2 id=\"graphql-구조\"><a href=\"#graphql-%EA%B5%AC%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GraphQL 구조</h2>\n<h3 id=\"sql문-예시\"><a href=\"#sql%EB%AC%B8-%EC%98%88%EC%8B%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SQL문 예시.</h3>\n<p>ex) 유저가 좋아하는 게시글을 가져오는 글이 필요하다.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> board<span class=\"token punctuation\">.</span>likes\n<span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span>\n    <span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> board <span class=\"token keyword\">on</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> board<span class=\"token punctuation\">.</span>user_id</code></pre>\n<p>다음과 같은 쿼리를 구성할 수 있습니다. 그러나, 만약에 웹에서 이를 호출할려고 하는데, 여러 테이블을 join을 해야하는 경우가 발생할 수 있습니다. 이러한 경우에는 endpoint가 많아지는 문제가 발생할 수 있습니다.</p>\n<h3 id=\"graphql문-예시\"><a href=\"#graphql%EB%AC%B8-%EC%98%88%EC%8B%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GraphQL문 예시.</h3>\n<p>다음과 같은 경우 graphql은 아래와 같이 표현할 수 있습니다.</p>\n<ul>\n<li>쿼리문</li>\n</ul>\n<pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span><span class=\"token punctuation\">{</span>\n    user<span class=\"token punctuation\">{</span>\n        id<span class=\"token punctuation\">,</span>\n        name<span class=\"token punctuation\">,</span>\n        likes <span class=\"token punctuation\">{</span>\n            title\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>응답 데이터 형식</li>\n</ul>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"user\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"likes\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"title\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"content13\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"title\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"content56\"</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>서버사이드 GraphQL 어플리케이션은 gql로 작성된 쿼리를 입력으로 받아 쿼리를 처리한 결과를 다시 클라이언트로 돌려줍니다. HTTP API가 특정 DB나 플랫폼에 종속적이지 않은 것처럼 마찬가지로 gql도 역시 어떠한 특정 DB나 플랫폼에 종속적이지 않습니다.</p>\n<p>좀 더 자세하게 구조를 보면 다음과 같습니다. gql은 <strong>쿼리</strong>와 <strong>뮤테이션</strong>으로 구분됩니다. 쿼리는 데이터를 읽는데 사용되고, 뮤테이션은 데이터를 변조(CUD) 하는데 사용됩니다.</p>\n<p>(추가 작성 에정)</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://tech.kakao.com/2019/08/01/graphql-basic/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://tech.kakao.com/2019/08/01/graphql-basic/</a></li>\n<li><a href=\"https://www.redhat.com/ko/topics/api/what-is-graphql\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.redhat.com/ko/topics/api/what-is-graphql</a></li>\n<li><a href=\"https://medium.com/@yeon22/graphql-graphql%EC%9D%B4%EB%9E%80-8468571ea96a\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/@yeon22/graphql-graphql%EC%9D%B4%EB%9E%80-8468571ea96a</a></li>\n</ul>\n"}}]}}},"context":{}}