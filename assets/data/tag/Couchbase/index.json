{"hash":"a494b8b1778660c606708ae3dd5d59774a4a3863","data":{"tag":{"title":"Couchbase","belongsTo":{"edges":[{"node":{"title":"달리는 인증 서비스의 NoSQL을 바꾸자. - 후기","path":"/nosql-couchbase-to-mongodb/","date":"3. May 2023","timeToRead":1,"description":"달리는 인증 서비스의 NoSQL을 바꾸자. - 후기","content":"<h1 id=\"달리는-인증-서비스의-nosql을-바꾸자---후기\"><a href=\"#%EB%8B%AC%EB%A6%AC%EB%8A%94-%EC%9D%B8%EC%A6%9D-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9D%98-nosql%EC%9D%84-%EB%B0%94%EA%BE%B8%EC%9E%90---%ED%9B%84%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>달리는 인증 서비스의 NoSQL을 바꾸자. - 후기</h1>\n<p>회사에서 진행한 글에 대한 내용을 조금 더 다듬을려고합니다.</p>\n<ul>\n<li><a href=\"https://dev.gmarket.com/77\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">원본, 달리는 인증 서비스의 NoSQL을 바꾸자 - 전략편</a></li>\n<li><a href=\"https://dev.gmarket.com/78\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">원본, 달리는 인증 서비스의 NoSQL을 바꾸자 - 실전편</a></li>\n</ul>\n"}},{"node":{"title":"[SpringBoot] 스프링부트 Couchbase Repository 이슈","path":"/00-springboot-couchbase-issue/","date":"22. September 2021","timeToRead":2,"description":"Couchbase Repository 이슈와 해결, 파생 쿼리 이슈","content":"<h1 id=\"springboot-couchbase-repository-이슈\"><a href=\"#springboot-couchbase-repository-%EC%9D%B4%EC%8A%88\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Springboot Couchbase Repository 이슈</h1>\n<p>회사에서 Spring 코드에서 Couchbase 관련 서비스를 개발하는 도중에 발생한 문제에 대해 정리합니다.</p>\n<h2 id=\"최초-개발-코드\"><a href=\"#%EC%B5%9C%EC%B4%88-%EA%B0%9C%EB%B0%9C-%EC%BD%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>최초 개발 코드</h2>\n<p>다음은 예시 코드입니다.</p>\n<ul>\n<li>Java SDK version : 14</li>\n<li><code class=\"language-text\">AccountDoc</code> 클래스</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Document</span>\n<span class=\"token annotation punctuation\">@ToString</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountDoc</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@Id</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Field</span>\n  <span class=\"token annotation punctuation\">@NotNull</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Field</span>\n  <span class=\"token annotation punctuation\">@NotNull</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userType<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Field</span>\n  <span class=\"token annotation punctuation\">@NotNull</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userName<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li><code class=\"language-text\">AccountRepository</code> 클래스</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Repository</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CouchbaseRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AccountDoc</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">AccountDoc</span> <span class=\"token function\">findByUserId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li><code class=\"language-text\">CouchbaseRepository</code> 코드</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">CouchbaseRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> ID <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CrudRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> ID<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">CouchbaseOperation</span> <span class=\"token function\">getCouchbaseOperations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>최초 코드 구성시는 해당 document를 참고했습니다.</p>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#reference\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Data Couchbase Reference Documentation</a></li>\n<li><a href=\"https://docs.couchbase.com/tutorials/quick-start/quickstart-java27-springdata32-intellij-firstquery-cb65.html#prerequisite-run-couchbase-server\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Couchbase Server Quickstart - Java with Spring Data Couchbase</a></li>\n</ul>\n<br/>\n<h2 id=\"문제점\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>문제점.</h2>\n<p>다음 코드에서 문제가 발생한 부분은 <code class=\"language-text\">AccountRepository</code>의 <code class=\"language-text\">findByUserId(String userId)</code> 코드였습니다.</p>\n<ul>\n<li>원인은 직접 선언한 <strong>메서드(파생 쿼리, Derived Query)</strong> 을 인식하지 못하고 문제가 발생하는 문제였습니다.</li>\n</ul>\n<br/>\n<h2 id=\"해결책\"><a href=\"#%ED%95%B4%EA%B2%B0%EC%B1%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>해결책.</h2>\n<p>해당 경우에서는 큰 요구사항이 필요하지 않았기 때문에 해당 파생 쿼리를 사용하지 않고 코드를 구성했습니다.</p>\n<ul>\n<li><code class=\"language-text\">AccountRepository</code> 클래스</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Repository</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CouchbaseRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AccountDoc</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li><code class=\"language-text\">AccountService</code> 서비스 클래스</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountService</span> accountService<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token class-name\">AccountDoc</span> doc <span class=\"token operator\">=</span> accountService<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Service Logic ...</span></code></pre>\n<p>즉, 해당 경우에는 <code class=\"language-text\">CrudRepository</code> 인터페이스에서 제공되는 메소드만 지원이 가능했습니다.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">CrudRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> ID<span class=\"token punctuation\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> ID<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">S</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">S</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span> entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ID</span> primaryKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Iterable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">long</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">boolean</span> <span class=\"token function\">existsById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ID</span> primaryKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>다음의 이슈에서 파생 쿼리 등을 사용하기 위해서는 아래 내용을 참고하면 좋을 것 같습니다.</p>\n<h3 id=\"좀-더-자세하게-보기\"><a href=\"#%EC%A2%80-%EB%8D%94-%EC%9E%90%EC%84%B8%ED%95%98%EA%B2%8C-%EB%B3%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>좀 더 자세하게 보기</h3>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#repositories.query-methods.details\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">쿼리 방법 정의</a></li>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#repositories.definition\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Repository 인터페이스 정의</a></li>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#repositories.create-instances\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Repository 인스턴스 생성</a></li>\n</ul>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#reference\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Data Couchbase Reference Documentation</a></li>\n<li><a href=\"https://docs.couchbase.com/tutorials/quick-start/quickstart-java27-springdata32-intellij-firstquery-cb65.html#prerequisite-run-couchbase-server\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Couchbase Server Quickstart - Java with Spring Data Couchbase</a></li>\n<li><a href=\"https://spring.io/projects/spring-data-couchbase#overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Data Couchbase</a></li>\n<li><a href=\"https://forums.couchbase.com/t/error-during-reconnect-com-couchbase-client-deps-io-netty-channel-connecttimeoutexception-connect-callback-did-not-return-hit-safeguarding-timeout/23911\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Error during reconnect couchbase</a></li>\n</ul>\n"}},{"node":{"title":"[Database] Couchbase XDCR","path":"/00-db-couchbase-xdcr/","date":"2. April 2021","timeToRead":4,"description":"Couchbase XDCR에 대해 정리합니다.","content":"<h1 id=\"couchbase-xdcr\"><a href=\"#couchbase-xdcr\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Couchbase XDCR</h1>\n<ul>\n<li>최근 진행해야하는 작업 중 하나가, 기존 Couchbase 서버가 있는 데이터 센터에서 서버 부하 해결 및 안정성을 위해 다른 데이터 센터에 데이터를 복제를 해야할 필요성이 존재합니다.</li>\n<li>회사에서 작업하는 주 목적은 데이터 서버에 있는 Couchbase 서버가 모두 죽었을 때, 정상적으로 작동하도록 구성하는 것이 목표입니다.</li>\n<li>이를 위해서 Cross Data Center Replication (약어, XDCR)에 대해 정리합니다.</li>\n</ul>\n<h2 id=\"xdcr이란\"><a href=\"#xdcr%EC%9D%B4%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>XDCR이란.</h2>\n<ul>\n<li>XDCR(Cross Data Center Replication)은 클러스터 간의 데이터를 복제하며, 데이터 센터 장애에 대한 보호 기능과 고성능 데이터 액세스 기능을 제공합니다.</li>\n<li>XDCR은 source 클러스터의 특정 버킷에서 대상 클러스터의 특정 버킷으로 데이터를 복제합니다. XDCR agent를 통해 Database Change Protocol을 사용하여 버킷에서 다른 타켓 버킷으로 데이터를 넘길 수 있습니다.</li>\n</ul>\n<br/>\n<h2 id=\"xdcr과-클러스터-내부-복제와의-차이\"><a href=\"#xdcr%EA%B3%BC-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EB%82%B4%EB%B6%80-%EB%B3%B5%EC%A0%9C%EC%99%80%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>XDCR과 클러스터 내부 복제와의 차이</h2>\n<ul>\n<li>클러스터 내부 복제의 경우, 클로스터 노드 전체에 데이터를 복제하나 XDCR의 경우 다른 데이터센터에 있는 여러 클러스터에 데이터를 복제합니다.</li>\n<li>클러스터 내부 복제의 경우, 단일 버킷에 대해 수행되지만 XDCR은 복제를 위해 두 개의 버킷이 필요합니다. (하나는 복제 데이터 제공 소스 클러스터 버킷, 다른 하나는 수신 받을 대상의 클러스터)</li>\n<li>클러스터 내 복제는 버킷 생성에서 구성되지만, XDCR은 소스 버킷과 대상 버킷을 모두 생성 후에 구성됩니다.</li>\n</ul>\n<blockquote>\n<p>클러스터(cluster)</p>\n</blockquote>\n<ul>\n<li>여러 대의 컴퓨터들이 연결되어 하나의 시스템처럼 동작하는 컴퓨터들의 집합, 해당 위에서는 서버들의 집합</li>\n</ul>\n<blockquote>\n<p>버킷(bucket)</p>\n</blockquote>\n<ul>\n<li>일반적으로 데이터가 영역으로 분할되는 document 유형입니다.</li>\n</ul>\n<br/>\n<h2 id=\"xdcr-절차\"><a href=\"#xdcr-%EC%A0%88%EC%B0%A8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>XDCR 절차</h2>\n<p>사전 작업</p>\n<ul>\n<li>\n<p>XDCR의 대상이 될 원격 클러스터에 대한 References를 정의합니다.</p>\n<ul>\n<li><a href=\"https://docs.couchbase.com/server/current/manage/manage-xdcr/create-xdcr-reference.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Document</a></li>\n</ul>\n</li>\n<li>\n<p>소스 버킷에서 지장된 대상 버킷으로 변경내용을 전송하는 복제를 정의하고 시작합니다.</p>\n<ul>\n<li><a href=\"https://docs.couchbase.com/server/current/learn/clusters-and-availability/xdcr-overview.html#manage:manage-xdcr/create-xdcr-replication\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Document</a></li>\n</ul>\n</li>\n<li>복제를 모니터링합니다.</li>\n</ul>\n<p>다음의 옵션을 사용할 수 있습니다.</p>\n<ul>\n<li>Couchbase Web Console</li>\n<li>CLI</li>\n<li>REST API(Web Console, CLI)</li>\n</ul>\n<br/>\n<h2 id=\"xdcr-direction-topology\"><a href=\"#xdcr-direction-topology\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>XDCR Direction, Topology</h2>\n<ul>\n<li>크게 전략은 단방향(Unidirectionally)와 양방향(Bidirectionally)로 구성됩니다.</li>\n<li>향후 진행할 작업은 양방향 XDCR을 구성할 방향이다.</li>\n</ul>\n<h3 id=\"unidirectionally\"><a href=\"#unidirectionally\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Unidirectionally</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/113409137-a2089080-93eb-11eb-9fdc-15f325939633.png\" alt=\"Unidirectionally\"></p>\n<ul>\n<li>지정된 소스 버킷에 포함된 데이터가 지정된 대상 버킷에 복제되며, 일반적으로 <strong>백업 용도로 사용</strong>됩니다.</li>\n</ul>\n<h3 id=\"bidirectionally\"><a href=\"#bidirectionally\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bidirectionally</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/113409142-a5038100-93eb-11eb-8e01-c23ce981dfd5.png\" alt=\"Bidirectionally\"></p>\n<ul>\n<li>지정된 소스 버킷에 포함된 데이터는 대상 버킷에 복제되고, 반대의 방향의 경우에도 적용됩니다. 해당 두 버킷을 모두 데이터 서비스용으로 사용할 수 있으며, <strong>사용자에 좀 더 빠른 데이터 액세스를 제공</strong>할 수 있습니다.</li>\n<li>이러한 양방향 XDCR은 두 데이터 센터 이상으로도 작업할 수 있습니다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/113409371-1d6a4200-93ec-11eb-8ff6-0a2205b62be6.png\" alt=\"image\"></p>\n<br/>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리.</h2>\n<p>간략하게, XDCR에 대해 작성했습니다. 향후, 해당 작업 완료 후 추가적인 게시글을 작성할 예정입니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://docs.couchbase.com/server/current/learn/clusters-and-availability/xdcr-overview.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Couchbase XDCR Doc</a></li>\n</ul>\n"}}]}}},"context":{}}