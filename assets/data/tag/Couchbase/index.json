{"hash":"a494b8b1778660c606708ae3dd5d59774a4a3863","data":{"tag":{"title":"Couchbase","belongsTo":{"edges":[{"node":{"title":"달리는 인증 서비스의 NoSQL을 바꾸자. - 후기","path":"/nosql-couchbase-to-mongodb/","date":"15. May 2023","timeToRead":10,"description":"달리는 인증 서비스의 NoSQL을 바꾸자. - 후기","content":"<h1 id=\"달리는-인증-서비스의-nosql을-바꾸자---후기\"><a href=\"#%EB%8B%AC%EB%A6%AC%EB%8A%94-%EC%9D%B8%EC%A6%9D-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9D%98-nosql%EC%9D%84-%EB%B0%94%EA%BE%B8%EC%9E%90---%ED%9B%84%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>달리는 인증 서비스의 NoSQL을 바꾸자. - 후기</h1>\n<p>회사에서 진행한 글에 대한 뒷이야기와 생각을 작성합니다.</p>\n<ul>\n<li><a href=\"https://dev.gmarket.com/77\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">원본, 달리는 인증 서비스의 NoSQL을 바꾸자 - 전략편</a></li>\n<li><a href=\"https://dev.gmarket.com/78\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">원본, 달리는 인증 서비스의 NoSQL을 바꾸자 - 실전편</a></li>\n</ul>\n<br/>\n<h2 id=\"비즈니스에-전략에-대한-생각\"><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4%EC%97%90-%EC%A0%84%EB%9E%B5%EC%97%90-%EB%8C%80%ED%95%9C-%EC%83%9D%EA%B0%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>비즈니스에 전략에 대한 생각</h2>\n<p>아는 사람한테 이 작업을 했다라고 했을 때, 정말 겁이 없다라는 이야기를 들었다. 나도 그렇게 생각한다. 회사에서 어찌저찌 돌아가고 있는 서비스를 갈아엎는다는 것은 리스크를 짊어지는 것이라고 생각한다.</p>\n<p>해서 어떤 비즈니스 측면에서 이점이 없는데 이거를 미래를 위한 투자라고 설명하기에는 납득이 어렵다고 생각한다. 개발자 입장에서는 이 작업을 통해서, 이후 퍼포먼스를 높일 수 있고 나중에 이 서비스에 신규 비즈니스를 적용할 수 있는 토대를 마련하는 것이지만, 다른 사람들이 보기에는 잘 돌아가는 서비스에 리스크를 주면서 변경하는 것이기에 이해하기 어려울 수 있을 것이라고 생각한다.</p>\n<p>그래서 언제나 작업을 진행할 때는, 어떻게든 비즈니스와 엮어서 진행할려고 한다. 작은 비즈니스 적 개선이 있더라도 이거를 같이 꺼내먹으면서 레거시를 정리하고 싶다.</p>\n<p>물론 커뮤니케이션 실력이 압도적으로 좋고, 그 개발의 의미를 알고 있는 사람이 있다면 설득은 괜찮을 수 있다.</p>\n<br/>\n<h2 id=\"레거시에-대한-전략\"><a href=\"#%EB%A0%88%EA%B1%B0%EC%8B%9C%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A0%84%EB%9E%B5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>레거시에 대한 전략</h2>\n<p>레거시에 대한 생각은 꾸준히 바뀌는 것 같다. 입사하기전이나 초창기에는 레거시는 무조건 나쁘다라는 생각이 있었다. 레거시의 의미 개념을 생각하면 얼추 맞는말이긴한데, 관리를 안한 코드의 문제이고, 이는 개발자, 자원을 주지 않은 회사의 문제라고 생각한다.</p>\n<p>관련해서는 그래서 욕심이 좀 있다. 내가 이 도메인을 책임진다면, 내가 역사를 하나 쓰고 싶다는 것. 과거 10년~20년 된 코드를 내 선에서 끊고, 신규 서비스를 진행할 준비를 하고 싶다는 것이 가장 큰 욕심이다.</p>\n<p>이번에 서비스 개선 등을 진행하며, 동시에 작업하는 것이 많다. 내 업무시간에 하는 회사일도 있고, 퇴근해서 또 하는 다른 회사일, 주말에도 회사일을 좀 본다. 개인적인 욕심이 좀 많다.</p>\n<p>회사가 나를 어떻게 볼지는 모르지만, 나는 회사에 대한 애사심이 좀 많은 것 같다. 회사의 서비스에서 셀러 서비스가 난 약점이라고 생각하고, 물론 그 약점이 우리팀에 있는 것은 아니고 모든 팀이 다 걸쳐있겠지만, 그 중에서 난 우리팀이 가장 변화에 적응할 수 있는 팀이 되고 싶다. 솔직히 더 본심을 이야기하면 내가 있는 조직이 언제나 변화에 가장 크게 적응하는 팀이 되고 싶다.</p>\n<p>내가 개발자라는 직업을 좋아하는 이유는 정말 노력하고 투자하면, 2명 혹은 3명, 혹은 그 이상 10명 치의 일을 할 수 있다는 점이다. 그렇기 때문에 더 노력하고, 갈고 닦고 싶다. 다들 알다시피, 개발자들이 개발하는 모습을 보면 코드를 고민하는 시간이 대부분이고, 검색하는 부분이 대부분의 시간을 차지하고 코드를 짜는 시간은 어찌보면 그렇게 많지 않다.</p>\n<p>고민과 검색하는 시간을 코드로 짜는 시간으로 바꾸고, 코드를 짜면서 그 고민과 검색하는 시간을 압도적으로 줄일 수 있으면 어떨까? 그 사람은 엄청난 시간과 에너지를 아껴서 퍼포먼스를 만들 수 있다고 생각한다.</p>\n<p>과거 읽은 책 중 하나가, 업무를 하다가 다른 창, 화면을 보는 것이 엄청난 집중력 저하를 일으킨다는 연구결과를 본적이 있다. 개발을 할 때도 마찬가지라고 생각한다. 그래서 좀 더 효율의 극대화, 비즈니스의 방향 추구 등이 내 요즘 최고의 관심사다.</p>\n<br/>\n<h2 id=\"발생하는-이슈\"><a href=\"#%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-%EC%9D%B4%EC%8A%88\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>발생하는 이슈</h2>\n<p>언제나 그렇듯 큰 배포가 나가고 나면 여러가지 이슈가 발생한다. 큰 이슈는 발생하지 않도록 하나 여러 작은 이슈들이 발생한다. 그 이슈의 작고 큰 유무는 개인의 판단에 다르고, 회사 측면에서도 다르나 일종의 버그이니 얼른 해결을 해야한다고 생각한다.</p>\n<p>버그를 해결하는 방법 중에서 나에게 가장 효율적인 전략은 꾸준하게 접근하는 것이다. 나의 경우에는 하루종일 그 문제를 보더라도 해결이 안될때가 많다. 차라리 하루에 한시간 씩 이틀, 삼일 정도 보면 해결이 되는 경우가 많았다.</p>\n<p>그렇기 때문에 어떤 문제를 접근할 때 나의 방식은, 미리미리 작업을 하는 것이다. 꾸준하게 여러 작업을 진행하는 방식과, 집중하는 문제를 정의하는 방식을 처리한다. 여러 작업을 건드리는 것이 여러 일을 벌리는 작업은 다른 의미다. 그리고 일을 접근할 때, 하나의 피처단위로 작업을 마무리하는 것을 목표로 잡는다. 그러나 쉽지는 않다.</p>\n<p>서비스 개발자로서 효율이 나는 가장 중요한 능력이라고 생각한다. 코드의 몇줄 더 효율적인 코드보다, 비즈니스를 더 빠르게 만들고, 변화에 능동적인 구조를 만드는 부분이 중요하다라고 생각한다.</p>\n<br/>\n<h3 id=\"couchbase---mongodb\"><a href=\"#couchbase---mongodb\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Couchbase -> MongoDB</h3>\n<p>놀랍게도 이커머스의 초창기 회사에 있기에 여러가지 아이디 계정을 보게된다. 아이디는 대부분의 서비스에서 유효한 키를 차지하기에 한번 생기면 바꾸기가 거의 어렵다. 특히 몇년동안 쌓인 비즈니스가 있기에, 리스크 관리가 어렵다.</p>\n<p>근데, 초창기의 서비스에서는 아이디에 대한 규칙이 없고 그 규칙을 깨진 계정들로 인해 여러 서비스가 방어로직이 많이 생깁니다.</p>\n<p>근데 이번에 작업을 하면서 Couchbase에서는 map 데이터에 \".\" 가 들어가는게 허용이 되는데, MongoDB에서는 이 값을 사용할 수가 없습니다. 그래서 싱크 때 여러 버그가 터지는 케이스가 있었고, 치환해서 저장을 해야하는데, 대부분의 특수문자들이 노후화된 아이디에 있어서 전환을 할 특수문자가 거의 없습니다.</p>\n<p>이러한 부분들도 문제가 됩니다.</p>\n<br/>\n<h3 id=\"성능-이슈의-고민\"><a href=\"#%EC%84%B1%EB%8A%A5-%EC%9D%B4%EC%8A%88%EC%9D%98-%EA%B3%A0%EB%AF%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>성능 이슈의 고민</h3>\n<p>couchbase에서 mongodb로 전환했을 때 바로 성능이 따라오냐는 다른 문제입니다. 그리고 그 문제는 직접적으로 발생했습니다. 따라서 어떤식으로든 최적화가 필요한 상태입니다.</p>\n<br/>\n<h3 id=\"일부-데이터-검증-방법\"><a href=\"#%EC%9D%BC%EB%B6%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B2%80%EC%A6%9D-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>일부 데이터 검증 방법</h3>\n<p>데이터 양을 비교하는 것도 고민을 해야합니다. couchbase와 mongodb의 document 수가 같은지, 다르다면 어디서 차이가 나는지 걱정을 해야합니다.</p>\n<p>mongodb의 퍼포먼스를 올릴 수 있는 코드를 찾고 있고, 그 코드를 체크할 부분을 찾아야합니다.</p>\n<p>대표적인 예시로 find 가 아닌 findTop 으로 바꿨고, 더 빠른 처리를 고민하고 있습니다.</p>\n<p>primary index와 secondary index의 차이가 있는지도 체크가 필요합니다.</p>\n<p>어떤식으로 할 수 있을까... 생각보다 코드가 안나온다... 검색 체크가 필요한데...</p>\n<br/>\n<h2 id=\"어떻게-더-나아갈-수-있을까\"><a href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8D%94-%EB%82%98%EC%95%84%EA%B0%88-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>어떻게 더 나아갈 수 있을까?</h2>\n<p>가장 어려운 부분이라고 생각한다. 특히, 나는 야근과 주말일이 가득한 사람이고 내 개인적인 욕심이 많기 때문에 남한테 이를 강요할 수는 없다. 최근 토스에서 이야기가 많은 것처럼, 나또한 내 욕심이 남의 철학을 건드려서는 안된다고 생각한다. 각자 자신의 스타일이 있고 그 스타일을 조율하는 것이 중요하다고 생각한다.</p>\n<p>함께 가며, 전략적으로 가는 방법. 그리고 그들의 본심을 꺼낼 수 있는 방식을 가고 싶다. 그리고 나는 남들을 평가할 수 없으나, 남들에게 무언가를 부탁하려면 그 이상의 작업을 해야한다고 생각한다. 그래서 나는 남들이 하는 작업의 두배이상을 하려고한다. 그래야지, 다른 사람에게 뭔가를 이야기할 명분이 생긴다고 생각한다.</p>\n"}},{"node":{"title":"[SpringBoot] 스프링부트 Couchbase Repository 이슈","path":"/00-springboot-couchbase-issue/","date":"22. September 2021","timeToRead":2,"description":"Couchbase Repository 이슈와 해결, 파생 쿼리 이슈","content":"<h1 id=\"springboot-couchbase-repository-이슈\"><a href=\"#springboot-couchbase-repository-%EC%9D%B4%EC%8A%88\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Springboot Couchbase Repository 이슈</h1>\n<p>회사에서 Spring 코드에서 Couchbase 관련 서비스를 개발하는 도중에 발생한 문제에 대해 정리합니다.</p>\n<h2 id=\"최초-개발-코드\"><a href=\"#%EC%B5%9C%EC%B4%88-%EA%B0%9C%EB%B0%9C-%EC%BD%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>최초 개발 코드</h2>\n<p>다음은 예시 코드입니다.</p>\n<ul>\n<li>Java SDK version : 14</li>\n<li><code class=\"language-text\">AccountDoc</code> 클래스</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Document</span>\n<span class=\"token annotation punctuation\">@ToString</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountDoc</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@Id</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Field</span>\n  <span class=\"token annotation punctuation\">@NotNull</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Field</span>\n  <span class=\"token annotation punctuation\">@NotNull</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userType<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Field</span>\n  <span class=\"token annotation punctuation\">@NotNull</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userName<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li><code class=\"language-text\">AccountRepository</code> 클래스</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Repository</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CouchbaseRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AccountDoc</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">AccountDoc</span> <span class=\"token function\">findByUserId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li><code class=\"language-text\">CouchbaseRepository</code> 코드</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">CouchbaseRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> ID <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CrudRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> ID<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">CouchbaseOperation</span> <span class=\"token function\">getCouchbaseOperations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>최초 코드 구성시는 해당 document를 참고했습니다.</p>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#reference\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Data Couchbase Reference Documentation</a></li>\n<li><a href=\"https://docs.couchbase.com/tutorials/quick-start/quickstart-java27-springdata32-intellij-firstquery-cb65.html#prerequisite-run-couchbase-server\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Couchbase Server Quickstart - Java with Spring Data Couchbase</a></li>\n</ul>\n<br/>\n<h2 id=\"문제점\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>문제점.</h2>\n<p>다음 코드에서 문제가 발생한 부분은 <code class=\"language-text\">AccountRepository</code>의 <code class=\"language-text\">findByUserId(String userId)</code> 코드였습니다.</p>\n<ul>\n<li>원인은 직접 선언한 <strong>메서드(파생 쿼리, Derived Query)</strong> 을 인식하지 못하고 문제가 발생하는 문제였습니다.</li>\n</ul>\n<br/>\n<h2 id=\"해결책\"><a href=\"#%ED%95%B4%EA%B2%B0%EC%B1%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>해결책.</h2>\n<p>해당 경우에서는 큰 요구사항이 필요하지 않았기 때문에 해당 파생 쿼리를 사용하지 않고 코드를 구성했습니다.</p>\n<ul>\n<li><code class=\"language-text\">AccountRepository</code> 클래스</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Repository</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CouchbaseRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AccountDoc</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li><code class=\"language-text\">AccountService</code> 서비스 클래스</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountService</span> accountService<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token class-name\">AccountDoc</span> doc <span class=\"token operator\">=</span> accountService<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Service Logic ...</span></code></pre>\n<p>즉, 해당 경우에는 <code class=\"language-text\">CrudRepository</code> 인터페이스에서 제공되는 메소드만 지원이 가능했습니다.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">CrudRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> ID<span class=\"token punctuation\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> ID<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">S</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">S</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span> entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ID</span> primaryKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Iterable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">long</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">boolean</span> <span class=\"token function\">existsById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ID</span> primaryKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>다음의 이슈에서 파생 쿼리 등을 사용하기 위해서는 아래 내용을 참고하면 좋을 것 같습니다.</p>\n<h3 id=\"좀-더-자세하게-보기\"><a href=\"#%EC%A2%80-%EB%8D%94-%EC%9E%90%EC%84%B8%ED%95%98%EA%B2%8C-%EB%B3%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>좀 더 자세하게 보기</h3>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#repositories.query-methods.details\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">쿼리 방법 정의</a></li>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#repositories.definition\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Repository 인터페이스 정의</a></li>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#repositories.create-instances\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Repository 인스턴스 생성</a></li>\n</ul>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-data/couchbase/docs/current/reference/html/#reference\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Data Couchbase Reference Documentation</a></li>\n<li><a href=\"https://docs.couchbase.com/tutorials/quick-start/quickstart-java27-springdata32-intellij-firstquery-cb65.html#prerequisite-run-couchbase-server\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Couchbase Server Quickstart - Java with Spring Data Couchbase</a></li>\n<li><a href=\"https://spring.io/projects/spring-data-couchbase#overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Data Couchbase</a></li>\n<li><a href=\"https://forums.couchbase.com/t/error-during-reconnect-com-couchbase-client-deps-io-netty-channel-connecttimeoutexception-connect-callback-did-not-return-hit-safeguarding-timeout/23911\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Error during reconnect couchbase</a></li>\n</ul>\n"}},{"node":{"title":"[Database] Couchbase XDCR","path":"/00-db-couchbase-xdcr/","date":"2. April 2021","timeToRead":4,"description":"Couchbase XDCR에 대해 정리합니다.","content":"<h1 id=\"couchbase-xdcr\"><a href=\"#couchbase-xdcr\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Couchbase XDCR</h1>\n<ul>\n<li>최근 진행해야하는 작업 중 하나가, 기존 Couchbase 서버가 있는 데이터 센터에서 서버 부하 해결 및 안정성을 위해 다른 데이터 센터에 데이터를 복제를 해야할 필요성이 존재합니다.</li>\n<li>회사에서 작업하는 주 목적은 데이터 서버에 있는 Couchbase 서버가 모두 죽었을 때, 정상적으로 작동하도록 구성하는 것이 목표입니다.</li>\n<li>이를 위해서 Cross Data Center Replication (약어, XDCR)에 대해 정리합니다.</li>\n</ul>\n<h2 id=\"xdcr이란\"><a href=\"#xdcr%EC%9D%B4%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>XDCR이란.</h2>\n<ul>\n<li>XDCR(Cross Data Center Replication)은 클러스터 간의 데이터를 복제하며, 데이터 센터 장애에 대한 보호 기능과 고성능 데이터 액세스 기능을 제공합니다.</li>\n<li>XDCR은 source 클러스터의 특정 버킷에서 대상 클러스터의 특정 버킷으로 데이터를 복제합니다. XDCR agent를 통해 Database Change Protocol을 사용하여 버킷에서 다른 타켓 버킷으로 데이터를 넘길 수 있습니다.</li>\n</ul>\n<br/>\n<h2 id=\"xdcr과-클러스터-내부-복제와의-차이\"><a href=\"#xdcr%EA%B3%BC-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EB%82%B4%EB%B6%80-%EB%B3%B5%EC%A0%9C%EC%99%80%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>XDCR과 클러스터 내부 복제와의 차이</h2>\n<ul>\n<li>클러스터 내부 복제의 경우, 클로스터 노드 전체에 데이터를 복제하나 XDCR의 경우 다른 데이터센터에 있는 여러 클러스터에 데이터를 복제합니다.</li>\n<li>클러스터 내부 복제의 경우, 단일 버킷에 대해 수행되지만 XDCR은 복제를 위해 두 개의 버킷이 필요합니다. (하나는 복제 데이터 제공 소스 클러스터 버킷, 다른 하나는 수신 받을 대상의 클러스터)</li>\n<li>클러스터 내 복제는 버킷 생성에서 구성되지만, XDCR은 소스 버킷과 대상 버킷을 모두 생성 후에 구성됩니다.</li>\n</ul>\n<blockquote>\n<p>클러스터(cluster)</p>\n</blockquote>\n<ul>\n<li>여러 대의 컴퓨터들이 연결되어 하나의 시스템처럼 동작하는 컴퓨터들의 집합, 해당 위에서는 서버들의 집합</li>\n</ul>\n<blockquote>\n<p>버킷(bucket)</p>\n</blockquote>\n<ul>\n<li>일반적으로 데이터가 영역으로 분할되는 document 유형입니다.</li>\n</ul>\n<br/>\n<h2 id=\"xdcr-절차\"><a href=\"#xdcr-%EC%A0%88%EC%B0%A8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>XDCR 절차</h2>\n<p>사전 작업</p>\n<ul>\n<li>\n<p>XDCR의 대상이 될 원격 클러스터에 대한 References를 정의합니다.</p>\n<ul>\n<li><a href=\"https://docs.couchbase.com/server/current/manage/manage-xdcr/create-xdcr-reference.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Document</a></li>\n</ul>\n</li>\n<li>\n<p>소스 버킷에서 지장된 대상 버킷으로 변경내용을 전송하는 복제를 정의하고 시작합니다.</p>\n<ul>\n<li><a href=\"https://docs.couchbase.com/server/current/learn/clusters-and-availability/xdcr-overview.html#manage:manage-xdcr/create-xdcr-replication\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Document</a></li>\n</ul>\n</li>\n<li>복제를 모니터링합니다.</li>\n</ul>\n<p>다음의 옵션을 사용할 수 있습니다.</p>\n<ul>\n<li>Couchbase Web Console</li>\n<li>CLI</li>\n<li>REST API(Web Console, CLI)</li>\n</ul>\n<br/>\n<h2 id=\"xdcr-direction-topology\"><a href=\"#xdcr-direction-topology\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>XDCR Direction, Topology</h2>\n<ul>\n<li>크게 전략은 단방향(Unidirectionally)와 양방향(Bidirectionally)로 구성됩니다.</li>\n<li>향후 진행할 작업은 양방향 XDCR을 구성할 방향이다.</li>\n</ul>\n<h3 id=\"unidirectionally\"><a href=\"#unidirectionally\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Unidirectionally</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/113409137-a2089080-93eb-11eb-9fdc-15f325939633.png\" alt=\"Unidirectionally\"></p>\n<ul>\n<li>지정된 소스 버킷에 포함된 데이터가 지정된 대상 버킷에 복제되며, 일반적으로 <strong>백업 용도로 사용</strong>됩니다.</li>\n</ul>\n<h3 id=\"bidirectionally\"><a href=\"#bidirectionally\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bidirectionally</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/113409142-a5038100-93eb-11eb-8e01-c23ce981dfd5.png\" alt=\"Bidirectionally\"></p>\n<ul>\n<li>지정된 소스 버킷에 포함된 데이터는 대상 버킷에 복제되고, 반대의 방향의 경우에도 적용됩니다. 해당 두 버킷을 모두 데이터 서비스용으로 사용할 수 있으며, <strong>사용자에 좀 더 빠른 데이터 액세스를 제공</strong>할 수 있습니다.</li>\n<li>이러한 양방향 XDCR은 두 데이터 센터 이상으로도 작업할 수 있습니다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/113409371-1d6a4200-93ec-11eb-8ff6-0a2205b62be6.png\" alt=\"image\"></p>\n<br/>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리.</h2>\n<p>간략하게, XDCR에 대해 작성했습니다. 향후, 해당 작업 완료 후 추가적인 게시글을 작성할 예정입니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://docs.couchbase.com/server/current/learn/clusters-and-availability/xdcr-overview.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Couchbase XDCR Doc</a></li>\n</ul>\n"}}]}}},"context":{}}