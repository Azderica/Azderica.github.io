{"hash":"7b056bf5bb97ab72db0df8d9d80ca9ef32b474be","data":{"tag":{"title":"Monitoring","belongsTo":{"edges":[{"node":{"title":"[Network] Cacti란?","path":"/00-network-cacti/","date":"31. January 2021","timeToRead":2,"description":"Cacti에 대해 작성합니다.","content":"<h1 id=\"cacti\"><a href=\"#cacti\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cacti</h1>\n<p>엄청 오래된 모니터링 툴이지만, 직접 설치를 하지 않더라도 어떤 개념인지는 알아야겠다는 생각이 있어 정리합니다.</p>\n<h2 id=\"cacti란\"><a href=\"#cacti%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cacti란</h2>\n<ul>\n<li>SNMP 프로토콜을 사용하는 네트워크 <strong>모니터링 툴</strong>입니다.</li>\n<li>관리 및 사용은 브라우저를 통해 이뤄지고, 모든 관리 데이터들은 MySQL을 이용하여 저장됩니다.</li>\n<li>Poller는 주어진 대상 시스템을 조회하여 가져온 결과를 RRD 파일에 저장하고 이 정보를 통해 그래프를 만드는데도 사용됩니다.</li>\n</ul>\n<p><a href=\"https://docs.cacti.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">공식 Document</a></p>\n<br/>\n<h2 id=\"cacti의-작업\"><a href=\"#cacti%EC%9D%98-%EC%9E%91%EC%97%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cacti의 작업</h2>\n<h3 id=\"data-retrieval\"><a href=\"#data-retrieval\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Data Retrieval</h3>\n<ul>\n<li>poller를 사용해서 데이터를 검색합니다.</li>\n<li>Poller는 Unix의 Crontab과 같은 스케쥴러를 수행합니다.</li>\n<li>\n<p>Cacti는 원격 대상의 데이터 검색에 네트워크 관리 프로토콜인 SNMP를 사용합니다.</p>\n<ul>\n<li>Cacti는 SNMP를 사용할 수 있는 모든 디바이스를 모니터링 할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"data-storage\"><a href=\"#data-storage\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Data Storage</h3>\n<ul>\n<li>Cacti를 데이터를 저장하기 위해 RRDTool을 사용합니다.</li>\n<li>히스토리 데이터는 공간 절약을 위해 압축합니다.</li>\n</ul>\n<h3 id=\"data-presentation\"><a href=\"#data-presentation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Data Presentation</h3>\n<ul>\n<li>그래프 함수로 보여줄 수 있습니다.</li>\n<li>그래프에 다양한 항목을 표현할 수 있고 어떤 플랫폼에서든 거의 모든 브라우저에서 액세스할 수 있습니다.</li>\n<li>Cacti는 PHP로 주로 작성되어 있습니다.</li>\n</ul>\n<br/>\n<h2 id=\"cacti-설치\"><a href=\"#cacti-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cacti 설치</h2>\n<h3 id=\"일반적인-사용-명령어\"><a href=\"#%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9D%B8-%EC%82%AC%EC%9A%A9-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>일반적인 사용 명령어</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> cacti</code></pre>\n<p><a href=\"https://yongho1037.tistory.com/553\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">좀 더 자세하게 보기위해서는...</a></p>\n<p>위 글을 참고하면서 사용하면 좋을 듯합니다.</p>\n<h3 id=\"redis-사용\"><a href=\"#redis-%EC%82%AC%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Redis 사용</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> -u cacti php /usr/share/cacti/scripts/ss_get_by_ssh.php --type redis --host <span class=\"token number\">127.0</span>.0.1 --items ln,lo</code></pre>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://yongho1037.tistory.com/553\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://yongho1037.tistory.com/553</a></li>\n<li><a href=\"https://docs.cacti.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.cacti.net/</a></li>\n<li><a href=\"https://www.percona.com/doc/percona-monitoring-plugins/1.1/cacti/redis-templates.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.percona.com/doc/percona-monitoring-plugins/1.1/cacti/redis-templates.html</a></li>\n<li><a href=\"https://server-talk.tistory.com/148\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://server-talk.tistory.com/148</a></li>\n</ul>\n"}},{"node":{"title":"[Grafana] Grafana란?","path":"/00-grafana/","date":"18. November 2020","timeToRead":4,"description":" 그라파나에 대한 기본 내용을 정리한 글입니다. ","content":"<h1 id=\"grafana란\"><a href=\"#grafana%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Grafana란.</h1>\n<p>지난 Prometheus에 이어, 모니터링에 필요한 Grafana에 대해서 한 번 공부해보겠다.</p>\n<br/>\n<h2 id=\"grafana-이해하기\"><a href=\"#grafana-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Grafana 이해하기.</h2>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/99534507-da827180-29ea-11eb-9c4b-8ebb2c3f440d.png\" alt=\"image\"></p>\n<blockquote>\n<p>마치 하스스톤의 로고가 생각난다.</p>\n</blockquote>\n<p>Grafana란 메트릭/로그를 시각화하는 대시보드입니다.</p>\n<blockquote>\n<p>매트릭 : 로그와 달리 주기적으로 발생하는 타임스탬프와 보통 한두가지 숫자 값을 포함하는 이벤트.</p>\n</blockquote>\n<p>이를 좀더 자세하게 설명하면 다음과 같이 내용을 이야기할 수 있습니다. <strong>매트릭 데이터</strong>를 <strong>시각화</strong>하는데 가장 최적화된 대시보드를 제공해주는 오픈소스 툴킷입니다.</p>\n<p>특히 다양한 DB를 연결하여 DB의 데이터를 가져와 손쉽게 시각화할 수 있습니다.</p>\n<p>아래는 Grafana의 예시 화면입니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/99536438-b4aa9c00-29ed-11eb-84cc-68b2380c5c9c.png\" alt=\"image\"></p>\n<p><a href=\"https://play.grafana.org/d/000000012/grafana-play-home?orgId=1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Grafana 링크</a></p>\n<p>해당 링크에 들어가보면, Grafana가 제공하는 시각화를 간단하게 확인할 수 있습니다.</p>\n<p>Grafana는 시계열 매트릭 데이터 수집에 강점을 보이며, 이 강점덕분에 서버 리소스의 매트릭 정보나 로그 같은 데이터를 시각화하는데 많이 사용됩니다.</p>\n<p>추가적으로 시각화한 그래프에서 특정 수치 이상으로 값이 올라갈때, 알림을 받는 기능을 제공합니다. 이러한 강점은 인프라 운영 관점에서 굉장히 중요한 기능을 차지합니다.</p>\n<p>오픈소스 툴킷이므로 커뮤니티도 활성화 되어있으며, 일반 사용자들이 만들어놓은 대시보드를 import하고 더 나아가 커스터 마이징을 할 수 있습니다.</p>\n<p><a href=\"https://community.grafana.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Grafana Comunity</a></p>\n<p>또한 다양한 플러그인을 제공하기 때문에 Grafana 내부적으로 기능 확장에 도움이 됩니다.</p>\n<p>추가적으로 GrafanaCon 등 다양한 행사를 열면서, 해당 컨퍼런스에는 프로메테우스나 로키 등의 주제에 대해 이야기 합니다.</p>\n<p><a href=\"https://grafana.com/about/events/grafanacon/2020/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GrafanaCon</a></p>\n<h2 id=\"grafana-vs-datadog\"><a href=\"#grafana-vs-datadog\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Grafana vs Datadog</h2>\n<p>Grafana와 마찬가지로 Datadog도 클라우드 모니터링 서비스를 제공합니다. </p>\n<p>공통점</p>\n<ul>\n<li>메트릭 데이터를 시각화</li>\n<li>대시보드 구성 가능</li>\n<li>외부 통합 기능을 통해 모니터링의 영역을 확장할 수 있음.</li>\n</ul>\n<p>차이점</p>\n<ul>\n<li><strong>Datadog</strong>의 경우, 데이터를 직접 저장하고 있으나. <strong>Grafana</strong>의 경우에는 외부 데이터 소스를 정의하고 해당 데이터 소스에 쿼리를 통해서 데이터를 동적으로 가져와 시각화합니다.</li>\n<li><strong>Datadog</strong>은 모니터링 서비스를 제공하는 상용 서비스이며, <strong>Grafana</strong>는 오픈소스 프로젝트입니다.</li>\n</ul>\n<br/>\n<h2 id=\"grafana-설치-다음에\"><a href=\"#grafana-%EC%84%A4%EC%B9%98-%EB%8B%A4%EC%9D%8C%EC%97%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Grafana 설치 (다음에)</h2>\n<p>다음에 직접 구현해보면서 글을 한번 더 다루겠습니다.</p>\n<br/>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리.</h2>\n<p>간단하게 모니터링 시 사용되는 Prometheus, Grafana에 대해 정의나 특징으로 정리하였습니다. 이후에는 다른 방향의 글을 작성할 예정입니다.</p>\n<p>추가적으로 직접 구현해보면서, 이후의 글을 추가하겠습니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://medium.com/finda-tech/grafana%EB%9E%80-f3c7c1551c38\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/finda-tech/grafana%EB%9E%80-f3c7c1551c38</a></li>\n<li><a href=\"https://www.44bits.io/ko/keyword/grafana\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.44bits.io/ko/keyword/grafana</a></li>\n<li><a href=\"https://blog.dalso.org/home-server/monitoring-server/3744\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://blog.dalso.org/home-server/monitoring-server/3744</a></li>\n</ul>\n"}},{"node":{"title":"[Prometheus] Prometheus란?","path":"/00-prometheus/","date":"16. November 2020","timeToRead":4,"description":" 프로메테우스에 대한 기본 내용을 정리한 글입니다. ","content":"<h1 id=\"prometheus란\"><a href=\"#prometheus%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Prometheus란.</h1>\n<p>업무를 진행하다가 모니터링 시스템에 대해서 듣기 시작했다, 그 모니터링 시스템에 대해 듣다보니 공부를 해야겠다는 생각이 들어서 글을 정리한다. 모니터링 툴로 유명한 프로메테우스, Grafana 등이 있는데 오늘은 Prometheus에 대한 글을 작성해볼려고 한다.</p>\n<br/>\n<h2 id=\"prometheus란-1\"><a href=\"#prometheus%EB%9E%80-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Prometheus란</h2>\n<p>오픈소스 시스템 모니터링 및 경고 툴킷이다. 많은 회사들이 사용하고 있으며 Kubernetes에서도 Prometheus를 사용하여 매트릭 수집 및 대시보드 구축하는 방식을 사용하고 있습니다.</p>\n<p>기능을 간략하게 보자면 다음과 같습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/99261592-4389ae00-2860-11eb-8d93-ce2817cdc70e.png\" alt=\"Prometheus 기능\"></p>\n<p>다음은 Promethheus의 아키텍처 구조입니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/99261600-46849e80-2860-11eb-87ba-7d573b45dba8.png\" alt=\"Prometheus 구성\"></p>\n<p>간단하게 설명하면 다음과 같습니다</p>\n<ul>\n<li><code class=\"language-text\">Jobs/exporters</code> : 실제 매트릭을 수집하는 프로세스</li>\n<li><code class=\"language-text\">exporter`` : 매트릭을 수집하고 HTTP 통신을 통해 매트릭 데이터를 가져갈 수 있게</code>/metrics`라는 HTTP 엔드포인틀 제공</li>\n<li><code class=\"language-text\">Prometheus server</code> : 이 <code class=\"language-text\">exporter</code>의 엔드포인트로 HTTP GET 요청을 날려 내트릭 정보를 수집(Pull)한다.</li>\n<li>매트릭이란?</li>\n</ul>\n<blockquote>\n<p>매트릭이란 타임스탬프와 보통 한두가지 숫자 값을 포함하는 이벤트. </p>\n<p>로그와 달리 메트릭은 주기적으로 보냅니다. 로그는 보통 무언가가 발생했을 때, 로그 파일에 추가되며 메트릭은 종종 리소스 사용 모니터링, 데이터베이스 실행 메트릭 모니터링 등에서 사용됩니다.</p>\n</blockquote>\n<br/>\n<h2 id=\"prometheus의-특징\"><a href=\"#prometheus%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Prometheus의 특징</h2>\n<h3 id=\"장점\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>장점</h3>\n<ul>\n<li>pull 방식의 구조를 채택함으로써 모든 메트릭에 대한 데이터를 중앙 서버로 보내지않아도 됩니다.</li>\n<li>Prometheus의 특성 상, 모든 데이터를 수집하지 않고 일정 주기(default 15s)로 발생하는 메트릭을 수집하여 추이나 모니터링을 어플리케이션에 무리 없이 하기 때문에 이러한 부분에서 매력적인 솔루션입니다.</li>\n<li>Prometheus를 사용하고 있는 Vendor와 open-source들이 상당히 많다. 구조가 복잡하지 않고 간단하기 때문에 특정 솔루션에 대한 export를 하는 것이 어렵지 않습니다. 특히 Kubernetes와 Docker환경에서의 서비스의 메트릭을 수집하고 분석하는 대에 집중적으로 많이 사용됩니다.</li>\n</ul>\n<h3 id=\"단점\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>단점</h3>\n<ul>\n<li>Scale-out이 안됩니다.(억지로는 할 수 있으나 이는 clusting보다는 Prometheus에 Prometheus를 연결에 Hieracrchy 구조를 만들어서 사용해야 한다.)</li>\n<li>모든 메트릭을 전송하지 않기 때문에 \"추이\"를 보는데는 좋지 않아서, 모든 로그를 추적하고 문제를 발생했을 때 이를 검색하여 어떤 일이 있었는지 원인을 밝히고자 할때는 사용하기 힘든 솔루션입니다.</li>\n</ul>\n<br/>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리</h2>\n<p>간단하게 내용에 대해서 조사했습니다. 좀 더 구현하는 방식에 대해서는 직접 Prometheus를 만들어보면서 추가하겠습니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://medium.com/finda-tech/prometheus%EB%9E%80-cf52c9a8785f\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/finda-tech/prometheus%EB%9E%80-cf52c9a8785f</a></li>\n<li><a href=\"https://gompangs.tistory.com/entry/Prometheus-%EB%A5%BC-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://gompangs.tistory.com/entry/Prometheus-%EB%A5%BC-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90</a></li>\n</ul>\n"}}]}}},"context":{}}