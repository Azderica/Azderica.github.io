{"hash":"441d039ecb7f9b8f8ede21c119627ec9bc8d91ab","data":{"tag":{"title":"TroubleShooting","belongsTo":{"edges":[{"node":{"title":"[SpringBoot Redis] Redis에 커스텀 객체 저장 시 오류","path":"/00-redis-troubleshooting/","date":"4. June 2021","timeToRead":3,"description":"Redis에 커스텀 데이터 객체 저장시 발생하는 오류와 그에 따른 해결책","content":"<h1 id=\"redis-hashvalue-에-커스텀-객체-저장-시-오류-발생점\"><a href=\"#redis-hashvalue-%EC%97%90-%EC%BB%A4%EC%8A%A4%ED%85%80-%EA%B0%9D%EC%B2%B4-%EC%A0%80%EC%9E%A5-%EC%8B%9C-%EC%98%A4%EB%A5%98-%EB%B0%9C%EC%83%9D%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Redis HashValue 에 커스텀 객체 저장 시 오류 발생점.</h1>\n<p>스프링으로 개발을 진행하던 중, Redis HashValue에 커스텀 데이터 객체를 저장할 때 발생하는 문제가 발생했다. 이에 대한 해결과정을 정리했습니다.</p>\n<h2 id=\"원인\"><a href=\"#%EC%9B%90%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>원인.</h2>\n<p>에러 메세지는 다음과 같다.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to <span class=\"token punctuation\">..</span>.</code></pre>\n<p>일반적으로 spring 프로젝트에서 redis에 데이터를 저장하는 방법으로는 redisTemplate를 상속받아서 쓰는데, 코드는 다음과 같습니다. (생략해서 변경했습니다.)</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token annotation punctuation\">@ToString</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> data1<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Long</span> data2<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> data3<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> redisKey <span class=\"token operator\">=</span> <span class=\"token string\">\"key:study\"</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> redisHashKey <span class=\"token operator\">=</span> <span class=\"token string\">\"unique:key\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> redisHashValue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Data</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1L</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Autowired</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> redisTemplate\n\n  redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>redisKey<span class=\"token punctuation\">,</span> redisHashKey<span class=\"token punctuation\">,</span> redisHashValue<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 에러 발생 코드, 캐스팅 에러 발생</span>\n  <span class=\"token class-name\">Data</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">)</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>redisKey<span class=\"token punctuation\">,</span> redisHashKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>에러 발생으로 인해 생각하는 원인은 다음과 같습니다.</p>\n<p>Value로 저장되는 값이 이후에 데이터를 받아와서 캐스팅을 할때, 이를 객체로 보는 것이 아니라 <code class=\"language-text\">LinkedHashMap</code>으로 인식하는 것으로 보입니다.</p>\n<br/>\n<h2 id=\"생각한-해결책\"><a href=\"#%EC%83%9D%EA%B0%81%ED%95%9C-%ED%95%B4%EA%B2%B0%EC%B1%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>생각한 해결책.</h2>\n<ol>\n<li><code class=\"language-text\">JSONObject</code>을 통해서 데이터를 파싱해서 <code class=\"language-text\">Data</code> 객체에 넣어주는 방법</li>\n<li>RedisTemplate을 상속받아서 저장을 하는 방법</li>\n<li><code class=\"language-text\">ToString</code>을 오버라이딩해서, 특정 형태로 저장 이후 파싱해서 객체에 이후 넣어 주는 방법</li>\n<li><code class=\"language-text\">LinkedHashMap</code> 형태로 만들어줘서 넣고 사용하기</li>\n</ol>\n<p>이외에도 여러 방법이 있겠지만 저는 이중에서 1번과 4번을 선택했습니다. (1번 방법으로 해봤는데 똑같은 에러가 발생했습니다.)</p>\n<p>4번의 경우로 한 이유는 다음과 같습니다.</p>\n<ul>\n<li>이후에 데이터를 다시 돌리기 편하기 때문에</li>\n<li>기본적으로 공식적인 객체이기 때문에 없을 것으로 판단했기 때문에</li>\n<li>코드를 최대한 SRP(단일 책임) 형태로 구성했기 때문에 클래스 하나로만 변경하면 되기 때문에.</li>\n</ul>\n<br/>\n<h2 id=\"마무리-및-도움이-되는-정보\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC-%EB%B0%8F-%EB%8F%84%EC%9B%80%EC%9D%B4-%EB%90%98%EB%8A%94-%EC%A0%95%EB%B3%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리 및 도움이 되는 정보.</h2>\n<p>이외에도 다른 방법이 있겠지만 해당 방법에 대해 좋은 방법을 찾으면 좋을 것 같습니다. 아래는 관련해서 참고하면 좋은 글입니다.</p>\n<ul>\n<li><a href=\"https://deepweller.tistory.com/38\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RedisTemplate, serialization</a></li>\n<li><a href=\"https://stackoverflow.com/questions/38532754/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">stackoverflow, redis serializer</a></li>\n<li><a href=\"https://www.javatpoint.com/how-to-convert-string-to-json-object-in-java\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Convert String to JSON Object</a></li>\n<li><a href=\"https://stackoverflow.com/questions/22358872/how-to-convert-linkedhashmap-to-custom-java-object/22359030\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">stackoverflow, convert linkedHashMap to Custom java object</a></li>\n<li><a href=\"https://www.baeldung.com/jackson-linkedhashmap-cannot-be-cast\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jackson, java.util.LinkedHashMap cannot be cast to X</a></li>\n</ul>\n"}}]}}},"context":{}}