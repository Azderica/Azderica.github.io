{"hash":"6eab5397a2d6c11ddf021b778b38f6e8e79b2231","data":{"tag":{"title":"Istio","belongsTo":{"edges":[{"node":{"title":"[Architecture] MSA : Istio 개념 잡기","path":"/00-architecture-istio/","date":"2. February 2021","timeToRead":10,"description":"Istio 패턴에 대해 정리합니다.","content":"<h1 id=\"istio\"><a href=\"#istio\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Istio</h1>\n<h2 id=\"istio의-정의\"><a href=\"#istio%EC%9D%98-%EC%A0%95%EC%9D%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Istio의 정의</h2>\n<p>Istio는 <strong>애플리케이션 네트워크 기능을 유연하고 쉽게 자동화할 수 있는 투명한 언어 독립적인 방법을 제공하는 현대화된 서비스 네트워킹 레이어인 서비스 메시</strong>입니다. 클라우드 기반 애플리케이션을 구성하는 다양한 마이크로 서비스르르 관리하는데 널리 사용되는 솔루션이며 마이크로 서비스가 서로 통신하고 데이터를 공유하는 방법을 지원합니다.</p>\n<p>Istio를 통해서 느슨하게 결합된 마이크로 서비스를 통해 앱을 어셈블하고, 새로운 클라우드 기반 앱을 관리할 수 있습니다. 또한 <strong>서비스 코드 변경 없이 로드배런싱, 서비스 간 인증, 모니터링 등을 적용해서 마이크로 서비스를 쉽게 관리</strong>할 수 있습니다.</p>\n<p>Istio는 애플리케이션 코드를 변경할 필요 없이 서비스 간 트래픽 흐름을 관리하고 액세스 정책을 적용하여 원격 분석 데이터를 집계합니다. 또한 기존의 분산형 애플리케이션에 투명하게 레이어하여 배포 복잡성을 완화시킵니다.</p>\n<h3 id=\"service-mesh-란\"><a href=\"#service-mesh-%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">Service Mesh</code> 란?</h3>\n<ul>\n<li>애플리케이션의 다양한 부분들이 서로의 데이터를 공유하는 방식을 제어하는 방법입니다.</li>\n<li>좀 더 자세하게 이야기 한다면, API 등을 사용해서 마이크로 서비스간 통신을 안전하고, 빠르고, 신뢰할 수 있게 만들기 위해 설계된 전용 인프라 계층입니다.</li>\n<li>Service Discovery, Load Balancing, Dynamic Request Routing, Circuit Breacking, Retry and Timeout, TLS, Distributed Tracing, Metric 수집, Access Control, A/B Testing 기능 등을 지원합니다.</li>\n</ul>\n<br/>\n<h2 id=\"istio-service-mesh의-장점\"><a href=\"#istio-service-mesh%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Istio Service Mesh의 장점</h2>\n<h3 id=\"일관된-서비스-네트워킹-달성\"><a href=\"#%EC%9D%BC%EA%B4%80%EB%90%9C-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9-%EB%8B%AC%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>일관된 서비스 네트워킹 달성</h3>\n<p>네트워킹 운영자는 개발자 오버헤드를 추가하지 않고도 모든 서비스의 네트워킹을 일관성 있게 관리할 수 있습니다.</p>\n<h3 id=\"istio-이점을-통해-서비스-보호\"><a href=\"#istio-%EC%9D%B4%EC%A0%90%EC%9D%84-%ED%86%B5%ED%95%B4-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%B3%B4%ED%98%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Istio 이점을 통해 서비스 보호</h3>\n<p>보안 운영자는 인증, 승인, 암호화를 비롯한 서비스 간 보안을 쉽게 구현할 수 있습니다.</p>\n<h3 id=\"애플리케이션-성능-향상\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%B1%EB%8A%A5-%ED%96%A5%EC%83%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>애플리케이션 성능 향상</h3>\n<p>Canary Rollout(새로운 버전 모델 배포시, 소규모 사용자에게 먼저 제공함으로서 위험을 빠르게 감지하는 배포 전략)과 같은 권장사항을 구현하고 애플리케이션을 심도 있게 파악하여 성능을 개선하기 위해 집중해야하는 부분을 파악할 수 있습니다.</p>\n<br/>\n<h2 id=\"istio의-구조\"><a href=\"#istio%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Istio의 구조</h2>\n<p>마이크로 서비스 간의 모든 네트워크 통신을 담당할 수 잇는 프록시인 Envoy를 사이드카 패턴으로 마이크로 서비스들에 배포한 다음, 프록시들의 설정 값 저장 및 관리/감독을 수행하고, 프록시들에 설정값을 전달하는 컨트롤러를 수행합니다.</p>\n<p>그후 각각의 마이크로 서비스에 사이드카 패턴으로 배포된 Envoy 프록시를 <code class=\"language-text\">데이터 플레인(Data Plane)</code> 이라고 하며, 이를 컨트롤 하는 부분이 <code class=\"language-text\">컨트롤 플레인(Control Plane)</code>이라고 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/106528740-981dfa80-652c-11eb-95e7-fd408293b65e.png\" alt=\"Istio-Architecture\"></p>\n<p>구성요소를 좀 더 자세하게 설명하면 다음과 같습니다.</p>\n<h3 id=\"data-plane-데이터-플레인\"><a href=\"#data-plane-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%8C%EB%A0%88%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Data Plane (데이터 플레인)</h3>\n<p>실제 데이터 트래픽이 돌아다니는 영역입니다. Envoy Proxy 세트로 구성되어 있습니다.</p>\n<h4 id=\"envoy\"><a href=\"#envoy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Envoy</h4>\n<p>Envoy는 사이드카 방식으로 각각의 마이크로서비스에 배포되어 서비스로 들어오고 나가는 모든 트래픽을 통제합니다. Envoy를 통해서 서비스를 호출할 때 호출하는 서비스의 IP주소는 파일럿에 저당된 엔드포인트 정보를 활용합니다.</p>\n<p>Istio는 Envoy의 <strong>동적 서비스 디스커버리, 로드밸런싱, TLS 인증서 처리, HTTP/2, gRPC 프록시, 서킷브레이커, 헬스체크, 실패 삽입, 많은 메트릭 등의 기능을 사용</strong>할 수 있습니다.</p>\n<p>사이드카 방식을 사용하기 때문에 기존 컨테이너나 코드를 재사용할 필요없이 그대로 사용가능합니다.</p>\n<h3 id=\"control-plane-컨트롤-플레인\"><a href=\"#control-plane-%EC%BB%A8%ED%8A%B8%EB%A1%A4-%ED%94%8C%EB%A0%88%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Control Plane (컨트롤 플레인)</h3>\n<p>트래픽 경로를 설정하고 관리하는 용도로 사용합니다.</p>\n<p>Istio1.4 버전까지는 <strong>파일럿(Pilot), 믹서(Mixer), 시타델(Citadel), 갤리(Galley)</strong> 로 구성되어 있었으나 Istio1.5버전부터 4개의 모듈이 <strong>Istiod</strong> 라는 하나의 모듈로 통합되었습니다.</p>\n<h4 id=\"mixer\"><a href=\"#mixer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Mixer</h4>\n<ul>\n<li>서비스 매쉬 엑세스 컨트롤 및 정책 관리 수행합니다.</li>\n<li>Envoy와 다른 서비스에서 모니터링 지표 수집합니다.</li>\n</ul>\n<h4 id=\"pilot\"><a href=\"#pilot\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pilot</h4>\n<ul>\n<li>Envoy 설정 관리를 수행하는 모듈입니다.</li>\n<li>Envoy가 호출하는 서비스의 주소를 얻을 수 잇는 Service Discovery 기능을 제공합니다.</li>\n<li>서비스 트래픽 라우팅 기능 제공합니다.</li>\n<li>서비스 안정성을 위해 서비스 간 호출시 Time out, Retry, Circuit Breaker(서킷 브레이커)같은 기능들을 제공합니다.</li>\n</ul>\n<h4 id=\"citadel\"><a href=\"#citadel\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Citadel</h4>\n<ul>\n<li>보안 관련 기능을 수행하는 모듈입니다.</li>\n<li>사용자 인증을 통해서 서비스/앤드 유저 간의 인증을 강화합니다.</li>\n<li>TLS(SSL)을 이용하여 통신 암호화와 인증서 관리를 할 수 있습니다.</li>\n</ul>\n<h4 id=\"galley\"><a href=\"#galley\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Galley</h4>\n<ul>\n<li>Istio 설정을 Validation, Ingestion, Processing, Distribution 하는 역할을 합니다.</li>\n<li>즉, Istio의 구성 및 설정을 검증하고 배포 관리를 진행합니다.</li>\n</ul>\n<h4 id=\"istiod\"><a href=\"#istiod\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Istiod</h4>\n<p>Istio 1.5 이상 버전에서 제공되며 서비스 디스커버리, 설정관리, 인증관리 등을 수행합니다.</p>\n<ul>\n<li>트래픽 동작을 제어하는 라우팅 규칙을 Envoy 전용 설정으로 변환하고 마이크로 서비스에 사이드카 방식으로 Envoy를 배포합니다.</li>\n<li>Envoy 설정 변경을 통해 서비스 메시 트래픽을 제어합니다.</li>\n<li>내장된 Identity나 Credential Management(증명 관리)을 통해서 강력한 서비스 간 인증 및 사용자 인증 기능을 지원합니다.</li>\n<li>인증 기관의 역할을 수행하, 데이터 플레인에서 안전한 mTLS 통신을 허용하는 인증서를 생성합니다.</li>\n</ul>\n<br/>\n<h2 id=\"istio의-장점\"><a href=\"#istio%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Istio의 장점</h2>\n<p>Istio를 통해서 분산형 애플리케이션을 대규모로 제공할 수 있습니다. 아래와 같은 장점이 있습니다.</p>\n<h3 id=\"안전한-클라우드-기반-앱\"><a href=\"#%EC%95%88%EC%A0%84%ED%95%9C-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EA%B8%B0%EB%B0%98-%EC%95%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>안전한 클라우드 기반 앱</h3>\n<p>Istio는 기본적인 보안 통신 채널을 제공하며 대규모 서비스 통신의 인증(Authentication), 권한부여(Authorization), 암호화(Encryption) 등을 통해서 애플리케이션 수준에서 보안을 강화할 수 있습니다.</p>\n<h3 id=\"효율적인-트래픽-관리\"><a href=\"#%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%ED%8A%B8%EB%9E%98%ED%94%BD-%EA%B4%80%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>효율적인 트래픽 관리</h3>\n<p>Istio는 간편한 규칙(Rule) 설정과 트래픽 라우팅(Traffic Routing) 기능을 통해서 서비스 간의 트래픽 흐름과 API 호출을 제어할 수 있습니다. 또한 서킷 브레이커(Circuit Breaker), 타임아웃(Timeout), Retry 등의 기능과 같은 서비스 레벨의 속성 구성을 단순화 할 수 있습니다.</p>\n<p>이를 바탕으로 트래픽을 분할하여 A/B Test, Canary Rollout, Staged Rollout과 같은 작업을 쉽게 설정할 수 있습니다.</p>\n<p>트래픽에 대한 더 나은 가시성과 독창적인 장애 복구 기능을 통해서 문제가 발생하기 전에 문제를 발견하고 서비스 호출을 안정화 시킬 수 있습니다.</p>\n<h3 id=\"서비스-메시-모니터링\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%A9%94%EC%8B%9C-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>서비스 메시 모니터링</h3>\n<p>Istio의 Tracing(트레이싱), Monitoring(모니터링), Logging(로깅) 기능으로 서비스 성능이 업스트림에 미치는 영향을 자세히 파악할 수 있습니다. 또한 서비스 성능이 업스트림이나 다운 스트림에 어떤 영향을 끼치는 지 파악할 수 있습니다. 또한 맞춤형 대시보드를 통해서 모든 서비스 성능을 보기 좋고, 다른 프로세스에 미치는 영향을 확인할 수 있습니다.</p>\n<h3 id=\"kubenetes-및-가상-머신을-통한-간편한-배포\"><a href=\"#kubenetes-%EB%B0%8F-%EA%B0%80%EC%83%81-%EB%A8%B8%EC%8B%A0%EC%9D%84-%ED%86%B5%ED%95%9C-%EA%B0%84%ED%8E%B8%ED%95%9C-%EB%B0%B0%ED%8F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kubenetes 및 가상 머신을 통한 간편한 배포</h3>\n<p>Istio는 컨테이너 및 가상 머신을 포함하여 기존과 최신 워크로드 모두에 대해 가시성과 네트워크 제어를 제공합니다.</p>\n<p>즉, Istio는 플랫폼에 독립적입니다.</p>\n<h3 id=\"고급-기능을-통해-부하-분산-최소화\"><a href=\"#%EA%B3%A0%EA%B8%89-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%86%B5%ED%95%B4-%EB%B6%80%ED%95%98-%EB%B6%84%EC%82%B0-%EC%B5%9C%EC%86%8C%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>고급 기능을 통해 부하 분산 최소화</h3>\n<p>클라이언트 기반 라우팅, Canary Rollout과 같은 고급 기능과 함께 모든 트래픽에 자동화된 부하 분산을 사용할 수 있습니다.</p>\n<h3 id=\"정책-시행\"><a href=\"#%EC%A0%95%EC%B1%85-%EC%8B%9C%ED%96%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>정책 시행</h3>\n<p>액세스 제어, 비율 제한, 할당량을 지원하는 플러그인 가능한 정책 레이어 및 구성 API를 사용하여 정책을 시행할 수 있습니다.</p>\n<br/>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리.</h2>\n<p>Istio에 대해 내용을 정리했습니다. 감사합니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://twofootdog.tistory.com/78\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://twofootdog.tistory.com/78</a></li>\n<li><a href=\"https://www.redhat.com/ko/topics/microservices/what-is-istio\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.redhat.com/ko/topics/microservices/what-is-istio</a></li>\n<li><a href=\"https://cloud.google.com/learn/what-is-istio?hl=ko\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://cloud.google.com/learn/what-is-istio?hl=ko</a></li>\n<li><a href=\"https://arisu1000.tistory.com/27865\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://arisu1000.tistory.com/27865</a></li>\n</ul>\n"}}]}}},"context":{}}