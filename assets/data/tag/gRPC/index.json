{"hash":"314c4422387ef2cae421ff768d6b6746d38a40d1","data":{"tag":{"title":"gRPC","belongsTo":{"edges":[{"node":{"title":"[Network] gRPC란?","path":"/00-network-g-rpc/","date":"15. September 2021","timeToRead":6,"description":"gRPC의 개념과 HTTP API의 차이점에 대해 작성합니다.","content":"<h1 id=\"grpc\"><a href=\"#grpc\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>gRPC</h1>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/133439409-25e1eb69-4d77-4428-abeb-bb20ad3ef5df.png\" alt=\"image\"></p>\n<h2 id=\"grpc란\"><a href=\"#grpc%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>gRPC란</h2>\n<ul>\n<li>gRPC는 높은 성능의 오픈소스 범용 RPC 프레임워크입니다.</li>\n<li>기본적인 개념은 RPC와 동일하지만 특징으로 HTTP/2 기반으로 양방향 스트리밍을 지원하며 메시지의 압축률과 성능이 좋습니다.</li>\n</ul>\n<h3 id=\"rpc란\"><a href=\"#rpc%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>RPC란</h3>\n<ul>\n<li>Remote Procedure Call의 약자로 프로세스간의 통신 기법 중 하나입니다.</li>\n<li>다른 프로세스에 있는 함수를 호출할 때, 마치 같은 프로세스내에 있는 것 처럼 호출가능합니다. (클라이언트는 일반 로컬 메소드처럼 사용)</li>\n<li>다양한 환경, 플랫폼에 제약없이 사용할 수 있기 때문에 분산 시스템 기법에 효과적입니다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/133439697-c1e7a3b7-733e-46ba-aa9b-098d580e286e.png\" alt=\"RPC\"></p>\n<blockquote>\n<p>RPC 진행 과정</p>\n</blockquote>\n<ol>\n<li>Client가 자신의 Stub을 호출합니다.</li>\n<li>Stub은 Client가 넘겨준 Parameter들을 Server와 통신할 수 있는 표준 메세지 형태로 변환한 후 Server에 메시지 전송합니다.</li>\n<li>Server측에서는 Client가 Stub을 통해 전송한 메세지를 Server의 Stub에 넘겨줍니다.</li>\n<li>Server측의 Stub은 Client가 전송한 메세지를 자신이 이해할 수 있는 형태로 변환을 해서 Client가 호출한 Method를 실행합니다.</li>\n<li>Method 실행 결과를 Stub을 통해 Client에게 전달합니다.</li>\n<li>Client는 Server와 같은 방식으로 Server가 전송한 메세지를 받고 이해햡니다.</li>\n</ol>\n<blockquote>\n<p>stub?</p>\n</blockquote>\n<p>Client와 Server가 통신할 수 있도록 메시지의 형태를 변환하는 프로그램</p>\n<br/>\n<h2 id=\"grpc의-장점\"><a href=\"#grpc%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>gRPC의 장점</h2>\n<h3 id=\"성능\"><a href=\"#%EC%84%B1%EB%8A%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>성능</h3>\n<ul>\n<li>효율적인 이진 메시지 형식인 Protobuf를 사용해 직렬화합니다.</li>\n<li>작은 메시지 페이로드를 발생시켜 모바일 앱과 같은 제한된 대역폭 시나리오에서 중요합니다.</li>\n<li>이진 프레이밍 및 압축, HTTP/2 프로토콜은 간단하며, 보내고 받을 때 모두 효율적입니다.</li>\n</ul>\n<h3 id=\"코드-생성\"><a href=\"#%EC%BD%94%EB%93%9C-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>코드 생성</h3>\n<ul>\n<li>gRPC 프레임워크는 코드 생성에 대한 최고 수준의 지원을 제공합니다.</li>\n<li>gRPC 프레임워크는 .proto 파일에서 서비스 기본 클래스, 메시지, 전체 클라이언트를 생성합니다.</li>\n</ul>\n<h3 id=\"엄격한-사양\"><a href=\"#%EC%97%84%EA%B2%A9%ED%95%9C-%EC%82%AC%EC%96%91\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>엄격한 사양</h3>\n<ul>\n<li>gRPC는 플랫폼 및 구현에 상관없이 일치하므로 이를 준수하기만 하면 됩니다.</li>\n<li><a href=\"https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gRPC 서비스가 따라야 하는 형식에 대한 지침</a></li>\n</ul>\n<h3 id=\"스트리밍\"><a href=\"#%EC%8A%A4%ED%8A%B8%EB%A6%AC%EB%B0%8D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스트리밍</h3>\n<ul>\n<li>HTTP/2는 수명이 긴 실시간 통신 스트림에 대한 기초를 제공합니다.</li>\n<li>\n<p>gRPC 서비스는 모든 스트리밍 조합을 지원합니다.</p>\n<ul>\n<li>단항(스트리밍 없음), 서버-클라이언트 스트리밍, 클라이언트-서버 스트리밍, 양방향 스트리밍</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"최종-기한시간-초과-및-취소\"><a href=\"#%EC%B5%9C%EC%A2%85-%EA%B8%B0%ED%95%9C%EC%8B%9C%EA%B0%84-%EC%B4%88%EA%B3%BC-%EB%B0%8F-%EC%B7%A8%EC%86%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>최종 기한/시간 초과 및 취소</h3>\n<ul>\n<li>gRPC는 클라이언트가 RPC가 완료될 때까지대기하는 기간을 지정하도록 할 수 있습니다.</li>\n<li>최종기한이 서버에 전송되고 서버에서 최종 기한을 초과하는 경우 수행할 결정을 결정할 수 있습니다. (ex. 요청 취소 등)</li>\n<li>자식 gRPC 호출을 통해 최종 기한 및 취소를 전파하면 리소스 사용 제한이 가능합니다.</li>\n</ul>\n<br/>\n<h2 id=\"grpc가-적합한-상황인-경우\"><a href=\"#grpc%EA%B0%80-%EC%A0%81%ED%95%A9%ED%95%9C-%EC%83%81%ED%99%A9%EC%9D%B8-%EA%B2%BD%EC%9A%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>gRPC가 적합한 상황인 경우</h2>\n<h3 id=\"마이크로-서비스\"><a href=\"#%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마이크로 서비스</h3>\n<ul>\n<li>gRPC는 대기 시간이 짧고 처리량이 높은 통신을 위해 설계되었습니다.</li>\n<li>gRPC는 효율성이 중요한 경량 마이크로 서비스에 적합합니다.</li>\n</ul>\n<h3 id=\"지점간-실시간-통신\"><a href=\"#%EC%A7%80%EC%A0%90%EA%B0%84-%EC%8B%A4%EC%8B%9C%EA%B0%84-%ED%86%B5%EC%8B%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>지점간 실시간 통신</h3>\n<ul>\n<li>양방향 스트리밍을 위한 뛰어난 지원 기능을 제공합니다.</li>\n<li>gRPC 서비스는 풀링을 사용하지 않고 실시간으로 메시지 푸쉬가 가능합니다.</li>\n</ul>\n<h3 id=\"polyglot-환경\"><a href=\"#polyglot-%ED%99%98%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Polyglot 환경</h3>\n<ul>\n<li>gRPC 도구는 널리 사용되는 모든 개발 언어를 지원하여, 다중 언어 환경에서 적합합니다.</li>\n</ul>\n<h3 id=\"네트워크-제한-환경\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A0%9C%ED%95%9C-%ED%99%98%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>네트워크 제한 환경</h3>\n<ul>\n<li>gRPC 메시지는 경량 메시지 형식인 Protobuf를 사용해 직렬화됩니다.</li>\n</ul>\n<h3 id=\"ipc프로세스-간-통신\"><a href=\"#ipc%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EA%B0%84-%ED%86%B5%EC%8B%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>IPC(프로세스 간 통신)</h3>\n<ul>\n<li><a href=\"https://docs.microsoft.com/ko-kr/aspnet/core/grpc/interprocess?view=aspnetcore-5.0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gRPC와 프로세스 간 통신</a></li>\n</ul>\n<br/>\n<h2 id=\"grpc의-약점\"><a href=\"#grpc%EC%9D%98-%EC%95%BD%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>gRPC의 약점</h2>\n<h3 id=\"제한된-브라우저-지원\"><a href=\"#%EC%A0%9C%ED%95%9C%EB%90%9C-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%A7%80%EC%9B%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>제한된 브라우저 지원</h3>\n<ul>\n<li>현재 브라우저에서 gRPC 서비스를 직접 호출하는 것은 불가능합니다.</li>\n<li>gRPC는 HTTP/2 기능을 많이 사용하며 브라우저에는 웹 요청에 필요한 제어 수준을 제공하지 않습니다.</li>\n</ul>\n<h4 id=\"grpc를-브라우저-앱으로-가져오는-방법\"><a href=\"#grpc%EB%A5%BC-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%95%B1%EC%9C%BC%EB%A1%9C-%EA%B0%80%EC%A0%B8%EC%98%A4%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>gRPC를 브라우저 앱으로 가져오는 방법</h4>\n<ul>\n<li><a href=\"https://grpc.io/docs/platforms/web/basics/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gRPC-Web</a></li>\n<li><a href=\"https://docs.microsoft.com/ko-kr/aspnet/core/grpc/httpapi?view=aspnetcore-5.0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gRPC에서 JSON 웹 API</a></li>\n</ul>\n<h3 id=\"사람이-읽을-수-없습니다\"><a href=\"#%EC%82%AC%EB%9E%8C%EC%9D%B4-%EC%9D%BD%EC%9D%84-%EC%88%98-%EC%97%86%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>사람이 읽을 수 없습니다.</h3>\n<ul>\n<li>gRPC 메시지는 기본적으로 Protobuf로 인코딩됩니다.</li>\n<li>이를 읽을려면 추가적인 도구가 필요합니다. (서버 리플렉션이나 gRPC 명령줄 도구)</li>\n</ul>\n<br/>\n<h2 id=\"grpc와-http-api와의-차이\"><a href=\"#grpc%EC%99%80-http-api%EC%99%80%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>gRPC와 HTTP API와의 차이</h2>\n<table>\n<thead>\n<tr>\n<th>기능</th>\n<th>gRPC</th>\n<th>HTTP API with JSON</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>계약</td>\n<td>필수(.proto)</td>\n<td>선택 사항(Open API)</td>\n</tr>\n<tr>\n<td>프로토콜</td>\n<td>HTTP/2</td>\n<td>HTTP</td>\n</tr>\n<tr>\n<td>Payload</td>\n<td>Protobuf(소형, 이진)</td>\n<td>JSON(대형, 가독성)</td>\n</tr>\n<tr>\n<td>규범</td>\n<td>엄격한 사양</td>\n<td>느슨함, 모든 HTTP가 유효</td>\n</tr>\n<tr>\n<td>스트리밍</td>\n<td>클라이언트, 서버, 양방향</td>\n<td>클라이언트, 서버</td>\n</tr>\n<tr>\n<td>브라우저 지원</td>\n<td>아니요(gRPC-웹 필요)</td>\n<td>웹</td>\n</tr>\n<tr>\n<td>보안</td>\n<td>전송(TLS)</td>\n<td>전송(TLS)</td>\n</tr>\n<tr>\n<td>클라이언트 코드 생성</td>\n<td>예</td>\n<td>OpenAPI + 타사 도구</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"http://what-and-why-and-how.blogspot.com/2019/11/rpc-what-is-rpc-remote-procedure-call.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What is RPC</a></li>\n<li><a href=\"https://docs.microsoft.com/ko-kr/aspnet/core/grpc/comparison?view=aspnetcore-5.0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ms docs, gRPC Service and HTTP API</a></li>\n<li><a href=\"https://medium.com/@goinhacker/microservices-with-grpc-d504133d191d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Microservices with gRPC</a></li>\n</ul>\n"}}]}}},"context":{}}