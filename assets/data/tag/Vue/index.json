{"hash":"a494b8b1778660c606708ae3dd5d59774a4a3863","data":{"tag":{"title":"Vue","belongsTo":{"edges":[{"node":{"title":"[VueJS] @vue/cli-plugin-e2e-nightwatch 에러 해결 ","path":"/00-vue-cli-plugin-e2e-nightwatch/","date":"18. January 2022","timeToRead":3,"description":" @vue/cli-plugin-e2e-nightwatch 에러 해결","content":"<h1 id=\"vuecli-plugin-e2e-nightwatch-에러-해결\"><a href=\"#vuecli-plugin-e2e-nightwatch-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@vue/cli-plugin-e2e-nightwatch 에러 해결</h1>\n<h2 id=\"모던-웹-애플리케이션-개발\"><a href=\"#%EB%AA%A8%EB%8D%98-%EC%9B%B9-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B0%9C%EB%B0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>모던 웹 애플리케이션 개발.</h2>\n<p>을 보면서, 해당 책에서 나오는 일부 테스트 코드를 다시 구현해봤는데 옛날과 다른 부분이 많았다</p>\n<ul>\n<li>책에서 요구하는 npm은 다음과 같습니다.</li>\n</ul>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"front-end\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service serve\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service lint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test:unit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service test:unit\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test:e2e\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service test:e2e\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run test:unit &amp;&amp; npm run test:e2e\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"vue\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.5.17\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vue-router\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vuex\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@vue/cli-plugin-babel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/cli-plugin-e2e-nightwatch\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/cli-plugin-eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/cli-plugin-unit-jest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/cli-service\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/eslint-config-standard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/test-utils\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.0.0-beta.20\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"babel-core\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"7.0.0-bridge.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"babel-jest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^23.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"node-sass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.9.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sass-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^7.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vue-template-compiler\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.5.17\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>그러나 해당 코드로 돌릴 때, 다음의 문제가 겹쳐서 버전을 올려야했습니다.</li>\n<li>vscode에서 <code class=\"language-text\">prettier</code>를 default로 설정을 했던 부분과 <code class=\"language-text\">eslint</code>를 같이 쓰기 위해 <code class=\"language-text\">eslint-plugin-prettier</code> 설치해야하는데 <code class=\"language-text\">eslint</code>의 버전을 강제로 올려야 했습니다.</li>\n<li>해당 로직을 돌리니 기존의 테스트 코드를 구성했던 <code class=\"language-text\">test:e2e</code> 에서 에러가 발생하였습니다.</li>\n</ul>\n<br/>\n<h2 id=\"따라서\"><a href=\"#%EB%94%B0%EB%9D%BC%EC%84%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>따라서.</h2>\n<ul>\n<li><code class=\"language-text\">test:e2e</code> 에 대한 코드를 수정해야 했습니다.</li>\n<li>그에 따라 알게된 점은 <code class=\"language-text\">@vue/cli-plugin-e2e-nightwatch</code> 는 <code class=\"language-text\">npm</code> 으로 설치하는 것이 아닌 <code class=\"language-text\">vue add e2e-nightwatch</code> 를 사용해야 했습니다.</li>\n</ul>\n<p>이에 따른 결과 코드는 다음과 같습니다.</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"front-end\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service serve\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test:unit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service test:unit\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test:e2e\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service test:e2e\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service lint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run test:unit &amp;&amp; npm run test:e2e\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"core-js\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.6.5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vue\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.6.11\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vue-router\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.5.3\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vuex\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.6.2\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@vue/cli-plugin-babel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~4.5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/cli-plugin-e2e-nightwatch\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~4.5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/cli-plugin-eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~4.5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/cli-plugin-unit-jest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.5.15\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@vue/cli-service\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~4.5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"babel-core\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^7.0.0-bridge.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"babel-eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^10.1.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"babel-jest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^24.9.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"chromedriver\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"97\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.7.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint-plugin-prettier\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint-plugin-vue\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.2.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"prettier\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.5.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vue-template-compiler\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.6.11\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"browserslist\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"> 1%\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"last 2 versions\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"not dead\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<br/>\n<h2 id=\"참고-자료\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>참고 자료</h2>\n<p>해당 자료에 대해 코드를 보고 싶으면 아래 링크 참조하면 됩니다.</p>\n<p><a href=\"https://github.com/Azderica/Toyproject-TaskAgile/commit/743f42d82dc86d362df344adbe9cf1085996931b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github</a></p>\n"}},{"node":{"title":"[VueJS] Vuejs CLI & 간단한 Form 만들기","path":"/05-vuejs-starter/","date":"19. December 2020","timeToRead":4,"description":" 'Vuejs 시작하기'의 다섯번째 게시글입니다. ","content":"<h1 id=\"vue-cli--간단한-form-만들기\"><a href=\"#vue-cli--%EA%B0%84%EB%8B%A8%ED%95%9C-form-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue CLI &#x26; 간단한 Form 만들기</h1>\n<ul>\n<li><a href=\"https://cli.vuejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue Cli 공식 사이트 링크</a></li>\n</ul>\n<h2 id=\"vue-cli-시작하기\"><a href=\"#vue-cli-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue CLI 시작하기</h2>\n<h3 id=\"설치\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>설치</h3>\n<pre class=\"language-sh\"><code class=\"language-sh\">(sudo) npm install -g @vue/cli\n// or\nyarn global add @vue/cli</code></pre>\n<ul>\n<li><a href=\"https://joshua1988.github.io/web-development/linux-commands-for-beginners/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">웹 개발 Tip</a></li>\n</ul>\n<h3 id=\"vue-init\"><a href=\"#vue-init\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue Init</h3>\n<p>[Vue CLI 2.x, Vue CLI 4.x]</p>\n<ul>\n<li><code class=\"language-text\">vue init &#39;프로젝트 템플릿 유형&#39; &#39;프로젝트 폴더 위치&#39;</code></li>\n<li><code class=\"language-text\">vue init webpack-simple &#39;프로젝트 폴더 위치&#39;</code></li>\n</ul>\n<p>[Vue CLI 3.x]</p>\n<ul>\n<li><code class=\"language-text\">vue create &#39;프로젝트 폴더 위치&#39;</code></li>\n</ul>\n<h3 id=\"vue-npm-install\"><a href=\"#vue-npm-install\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue NPM install</h3>\n<p>아래 순서대로 프로젝트 수행하고 이후 개발을 진행하면 됩니다.</p>\n<ul>\n<li><code class=\"language-text\">cd 프로젝트 폴더</code></li>\n<li><code class=\"language-text\">npm install</code></li>\n<li><code class=\"language-text\">npm run dev</code></li>\n</ul>\n<p>해당 <code class=\"language-text\">npm run dev</code>와 같은 명령어는 vue-cli 버전에 따라서 다를 수도 있습니다. 이를 제대로 확인하는 방법은 해당 프로젝트 파일에서는 <code class=\"language-text\">package.json</code>을 확인해보면 <code class=\"language-text\">script</code> 아래에 명령어들이 작성되어 있습니다. 이를 사용하거나 추가할 수 있습니다.</p>\n<ul>\n<li>추가적으로 해당 프로젝트에 대한 개념을 제대로 잡기 위해서는 webpack에 대해 알고 있는 것이 좋습니다.</li>\n</ul>\n<h3 id=\"좋은-개발-tip\"><a href=\"#%EC%A2%8B%EC%9D%80-%EA%B0%9C%EB%B0%9C-tip\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>좋은 개발 Tip</h3>\n<ul>\n<li>vue 파일에서 <code class=\"language-text\">vu 입력 후 tab 엔터</code>시, 형태를 잡아줍니다.</li>\n<li>하나의 component에는 하나의 element만 있어야한다.</li>\n<li>components의 이름은 최소 2개 이상의 단어 조합으로 만들어야한다.</li>\n</ul>\n<h3 id=\"예제-코드\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%BD%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>예제 코드</h3>\n<ul>\n<li><a href=\"https://github.com/Azderica/Study-lean-vue-js/tree/master/vue-cli-complete\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">예제 코드, vue cli 3.x </a></li>\n<li><a href=\"https://github.com/Azderica/Study-lean-vue-js/tree/master/vue-cli-study\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">예제 코드, vue cli 4.x</a></li>\n</ul>\n<br/>\n<h2 id=\"간단한-입력자-form-구현\"><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%9E%85%EB%A0%A5%EC%9E%90-form-%EA%B5%AC%ED%98%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>간단한 입력자 form 구현</h2>\n<p>로그인 폼을 나타내는 긴딘힌 코드는 다음과 같습니다. 해당 부분은 vue에 대한 개념을 잡기위한 예제이며, 많은 문제가 존재합니다.</p>\n<h3 id=\"예제-코드-1\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%BD%94%EB%93%9C-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>예제 코드</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>vue 파일은 다음과 같은 형태로 구성됩니다. 해당 형태에서 template는 html, script는 javascript, style은 css로 이해해도 쉽습니다.</p>\n<p>해당 간단한 로직에서는 따로 스타일 적용을 하지는 않았습니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>submit.prevent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submitForm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>usernamne<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>id: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>pw: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">axios</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'axios'</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">submitForm</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">username</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://jsonplaceholder.typicode.com/users'</span>\n      <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">username</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n      axios\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">post</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li><a href=\"https://jsonplaceholder.typicode.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">json post example</a></li>\n</ul>\n<p>다음과 같이 코드를 확인할 수 있습니다. 이를 실행하게 되면 다음과 같은 형태를 구성하게 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/102705536-73e3c280-42cc-11eb-89b3-4d6398db3579.png\" alt=\"Login Form\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/102705561-91189100-42cc-11eb-9568-37230c1643e0.png\" alt=\"Login Network\"></p>\n<p>정상적으로 통신이 되는 것을 확인할 수 있습니다.</p>\n<h3 id=\"원본-코드\"><a href=\"#%EC%9B%90%EB%B3%B8-%EC%BD%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>원본 코드</h3>\n<ul>\n<li><a href=\"https://github.com/Azderica/Study-lean-vue-js/tree/master/vue-form-complete\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">예제 코드, vue cli 3.x </a></li>\n<li><a href=\"https://github.com/Azderica/Study-lean-vue-js/tree/master/vue-form-study\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">예제 코드, vue cli 4.x</a></li>\n</ul>\n<h3 id=\"vuejs를-제대로-공부하는-방법\"><a href=\"#vuejs%EB%A5%BC-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EA%B3%B5%EB%B6%80%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>vuejs를 제대로 공부하는 방법</h3>\n<p>원문으로 공부하는 것이 좋습니다.</p>\n<ol>\n<li>공식문서에서 업데이트가 많고, 그에 따라 최신 정보를 바로바로 볼 수 있습니다.</li>\n<li>번역의 한계로 인해서, 일부 잘못된 개념으로 잘못된 이해를 할 수 있습니다.</li>\n</ol>\n<p>도움이 되는 링크</p>\n<ul>\n<li><a href=\"https://vuejs.org/v2/guide/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue.js 공식 문서</a></li>\n<li><a href=\"https://vuejs.org/v2/style-guide/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue.js 스타일 가이드</a></li>\n<li><a href=\"https://vuejs.org/v2/cookbook/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue.js Cookbook</a></li>\n<li><a href=\"https://vuex.vuejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vuex 공식 문서</a></li>\n<li><a href=\"https://router.vuejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VueRouter 공식 문서</a></li>\n<li><a href=\"https://cli.vuejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue CLI 공식 문서</a></li>\n</ul>\n"}},{"node":{"title":"[VueJS] Vuejs 템플릿 문법","path":"/04-vuejs-starter/","date":"18. December 2020","timeToRead":10,"description":" 'Vuejs 시작하기'의 네번째 게시글입니다. ","content":"<h1 id=\"vuejs-템플릿-문법\"><a href=\"#vuejs-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%AC%B8%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue.js 템플릿 문법</h1>\n<p><strong>뷰의 템플릿 문법</strong>이란 뷰로 화면을 조작하는 방법을 의미합니다. 템플릿 문법은 크게 <strong>데이터 바인딩</strong>과 <strong>디렉티브</strong>로 나뉩니다.</p>\n<h2 id=\"데이터-바인딩\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>데이터 바인딩</h2>\n<p>데이터 바인딩이란 <strong>뷰 인스턴스에서 정의한 속성들을 화면에 표시하는 방법</strong>입니다. 가장 기본적인 데이터 바인딩 형식은 Mustache Tag입니다.</p>\n<p>아래는 그 예제입니다,</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>{{ message }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello Vue.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>해당 코드는 div 태그에 <code class=\"language-text\">{{}}</code>(Mustache Tag)를 통해 뷰 인스턴스의 <code class=\"language-text\">message</code>속성을 연결해서 화면에 Hello Vue.js가 출력되게 됩니다.</p>\n<p>데이터를 바꾸는 경우에는 computed를 사용하는 것이 좋습니다.</p>\n<br/>\n<h2 id=\"디렉티브\"><a href=\"#%EB%94%94%EB%A0%89%ED%8B%B0%EB%B8%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>디렉티브</h2>\n<p>디렉티브는 <strong>뷰로 화면의 요소를 더 쉽게 조작하기 위한 문법</strong>입니다. 화면 조작에서 주로 사용하는 방식들을 모아서 디렉티브 형태로 제공합니다. 예를 들어 아래와 같이 특정 속성 값에 따라 화면의 영역을 표시하거나 표시하지 않을 수 있습니다.</p>\n<h3 id=\"v-if-예제\"><a href=\"#v-if-%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>v-if 예제</h3>\n<p>아래의 예시는 <code class=\"language-text\">show</code>의 속성값에 따라 Vue.js 텍스트가 출력되거나 되지 않습니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Hello <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Vue.js<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">show</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"v-for-예제\"><a href=\"#v-for-%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>v-for 예제</h3>\n<p>또 다른 예시는 v-for 디렉토리를 통해서 데이터 속성의 개수만큼 화면의 요소를 반복하여 출력할 수 있습니다. 목록을 표현하는 경우 유용하게 사용가능합니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-for:</span>\"item</span> <span class=\"token attr-name\">in</span> <span class=\"token attr-name\">items\"</span><span class=\"token punctuation\">></span></span>{{item}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">items</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'shirts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jeans'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hats'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>이와 같이 사용할 수 있습니다.</p>\n<h3 id=\"v-on-예제-및-methods-속성\"><a href=\"#v-on-%EC%98%88%EC%A0%9C-%EB%B0%8F-methods-%EC%86%8D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>v-on 예제 및 methods 속성</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logText<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>click me<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>keyup</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logText<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token comment\">&lt;!-- &lt;input type=\"text\" v-on:keyup.enter=\"logText\">--></span>\n  <span class=\"token comment\">&lt;!-- .enter를 붙이면 modified(엔터 친 경우) 된 경우만 적용 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">logText</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clicked'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>해당 예제는 \"click me\"를 클릭시 console 창에 clicked 메세지가 발생합니다. input에 <code class=\"language-text\">v-on:keyup</code>을 줌으로써, 입력하고 키보드를 떼는 순간 이벤트가 발생합니다.\n<code class=\"language-text\">keyup.enter</code>를 붙이게 되면 modified된 경우에만 적용하게 됩니다.</p>\n<p>이예 대한 실제 코드는 아래에 적어놓았습니다.</p>\n<ul>\n<li><a href=\"https://github.com/Azderica/Study-lean-vue-js/blob/master/playground-complete/data-binding.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">data-binding.html</a></li>\n<li><a href=\"https://github.com/Azderica/Study-lean-vue-js/blob/master/playground-complete/data-binding.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">methods.html</a></li>\n</ul>\n<h3 id=\"그-외의-디렉티브\"><a href=\"#%EA%B7%B8-%EC%99%B8%EC%9D%98-%EB%94%94%EB%A0%89%ED%8B%B0%EB%B8%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>그 외의 디렉티브</h3>\n<p>주로 사용되는 디렉티브는 다음과 같습니다.</p>\n<ul>\n<li>v-if / v-else</li>\n<li>v-for</li>\n<li>v-on</li>\n<li>v-model</li>\n<li>v-show (v-if 와 다르게 html element에 남아있습니다.)</li>\n</ul>\n<p>이 외에도 다양한 문법을 알아야하는 경우에는 일일히 그에 따른 개념을 외울수는 없기 때문에 공식 문서에서 보면서 찾아야합니다.</p>\n<p>공식 문서에 대한 링크는 다음과 같습니다.</p>\n<ul>\n<li><a href=\"https://v3.vuejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vuejs v3 공식문서</a></li>\n<li><a href=\"https://kr.vuejs.org/v2/guide/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vuejs v2 한글 공식문서</a></li>\n<li><a href=\"https://vuejs.org/v2/guide/forms.html#ad\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Form Input Binding</a></li>\n</ul>\n<br/>\n<h2 id=\"method\"><a href=\"#method\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Method</h2>\n<p>뷰 메서드는 <strong>특정 기능 별로 묶을 수 있는 자바스크립트 함수</strong>를 의미합니다. 메서드는 뷰 템플릿의 버튼 이벤트 처리부터 HTTP 통신까지 다양한 성격의 코드로 구성됩니다.</p>\n<h3 id=\"method-코드-형식\"><a href=\"#method-%EC%BD%94%EB%93%9C-%ED%98%95%EC%8B%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Method 코드 형식</h3>\n<p>일반적인 메서드 코드의 형식은 아래와 같습니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"method-예시---1\"><a href=\"#method-%EC%98%88%EC%8B%9C---1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Method 예시 - 1</h3>\n<p>기본적인 버튼 클릭 메서드입니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>clickButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>click me<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clickButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clicked'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>해당 예시 코드는 click me를 클릭하면 경고창이 뜨고 알람이 발생합니다.</p>\n<h3 id=\"method-예시---2\"><a href=\"#method-%EC%98%88%EC%8B%9C---2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Method 예시 - 2</h3>\n<p>화면 조작 외에도 특정 로직을 담을 수도 있습니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>displayProducts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Refresh<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">products</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">displayProducts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// ..</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      axios\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/products'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">products</span> <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>해당 코드에서 <code class=\"language-text\">Refresh</code> 버튼 클릭 시, <code class=\"language-text\">displayProducts()</code> 메서드가 실행되고, 이 메서드가 <code class=\"language-text\">fetchData()</code>를 호출합니다. 이런식으로 연결하게 되면, 특정 기능 별로 메서드를 분리할 수 있고 코드를 중복없이 사용할 수 있게 됩니다.</p>\n<br/>\n<h2 id=\"computed\"><a href=\"#computed\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Computed</h2>\n<p>Computed 속성은 <strong>템플릿의 데이터 표현을 더 직관적이고 간결하게 도와주는 속성</strong>입니다.</p>\n<p>코드의 예시는 다음과 같습니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>{{ reverseMessage }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">reverseMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">messgae</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"computed-장점\"><a href=\"#computed-%EC%9E%A5%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>computed 장점</h3>\n<p>Computed 속성은 두가지의 장점이 있습니다,.</p>\n<ul>\n<li>코드의 가독성을 높여줍니다.</li>\n<li>Computed 속성의 대상으로 정한 data 속성이 변했을 때 이를 감지하고 자동으로 다시 연산해줍니다.</li>\n</ul>\n<h3 id=\"computed-주의사항-1---computed-속성은-인자를-받지않습니다\"><a href=\"#computed-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD-1---computed-%EC%86%8D%EC%84%B1%EC%9D%80-%EC%9D%B8%EC%9E%90%EB%A5%BC-%EB%B0%9B%EC%A7%80%EC%95%8A%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>computed 주의사항 1 - computed 속성은 인자를 받지않습니다.</h3>\n<p>아래는 잘못된 코드이며 정상적으로 동작하지 않습니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>{{ reverseMessage(false) }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">reverseMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">isReversed</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> isReversed <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">message</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">message</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"computed-주의사항-2---http-통신과-같이-컴퓨팅-리소스가-많이-필요한-로직은-정의하지-않습니다\"><a href=\"#computed-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD-2---http-%ED%86%B5%EC%8B%A0%EA%B3%BC-%EA%B0%99%EC%9D%B4-%EC%BB%B4%ED%93%A8%ED%8C%85-%EB%A6%AC%EC%86%8C%EC%8A%A4%EA%B0%80-%EB%A7%8E%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C-%EB%A1%9C%EC%A7%81%EC%9D%80-%EC%A0%95%EC%9D%98%ED%95%98%EC%A7%80-%EC%95%8A%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>computed 주의사항 2 - HTTP 통신과 같이 컴퓨팅 리소스가 많이 필요한 로직은 정의하지 않습니다.</h3>\n<p>비싼 비용의 로직은 작성하지 않습니다. 이는 watch나 method에 넣는 것이 적합합니다. 아래는 잘못된 코드입니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">reverseMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/message'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      vm<span class=\"token punctuation\">.</span><span class=\"token property-access\">message</span> <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">message</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<br/>\n<h2 id=\"watch\"><a href=\"#watch\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Watch</h2>\n<p>watch 속성은 <strong>특정 데이터의 변화를 감지해서 자동으로 특정 로직을 수행해주는 속성</strong>입니다.</p>\n<p>코드 구현 형식은 다음과 같습니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">message</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>watch의 실용 문법은 아래와 같습니다.</p>\n<h3 id=\"watch-사용-방식-1---watch-속성에-메서드-함수-연결\"><a href=\"#watch-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EC%8B%9D-1---watch-%EC%86%8D%EC%84%B1%EC%97%90-%EB%A9%94%EC%84%9C%EB%93%9C-%ED%95%A8%EC%88%98-%EC%97%B0%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>watch 사용 방식 1 - watch 속성에 메서드 함수 연결</h3>\n<p>watch 대상 속상에 함수 대신에 메소드를 연결하는 예시입니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">message</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'logMessage'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 대상 속성과 메서드 함수를 매칭합니다.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"watch-사용-방식-2---핸들러와-초기-실행-옵션\"><a href=\"#watch-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EC%8B%9D-2---%ED%95%B8%EB%93%A4%EB%9F%AC%EC%99%80-%EC%B4%88%EA%B8%B0-%EC%8B%A4%ED%96%89-%EC%98%B5%EC%85%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>watch 사용 방식 2 - 핸들러와 초기 실행 옵션</h3>\n<p>watch 대상 속성에 아래와 같이 <code class=\"language-text\">handler()</code>와 <code class=\"language-text\">immediate</code> 속성을 정의할 수 있습니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 컴포넌트가 생성되자마자 즉시 실행됩니다.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"실제-코드\"><a href=\"#%EC%8B%A4%EC%A0%9C-%EC%BD%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>실제 코드</h3>\n<ul>\n<li><a href=\"https://github.com/Azderica/Study-lean-vue-js/blob/master/playground-complete/watch.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">watch.html</a></li>\n</ul>\n<h2 id=\"computed-vs-watch\"><a href=\"#computed-vs-watch\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Computed vs Watch</h2>\n<p>공식 document를 보면 <code class=\"language-text\">computed</code>와 <code class=\"language-text\">watch property</code>에 대한 이야기가 있습니다.</p>\n<ul>\n<li><a href=\"https://kr.vuejs.org/v2/guide/computed.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">공식 document : computed vs watch</a></li>\n</ul>\n<p>Vue는 Vue 인스턴스의 데이터 변경을 관찰하고 반응하는 <code class=\"language-text\">watch 속성</code>을 제공합니다. 다만, 다른 데이터 기반으로 변경할 필요가 있는 데이터의 경우에는 <code class=\"language-text\">watch 속성</code> 보다는 <code class=\"language-text\">computed 속성</code>이 좋습니다.</p>\n<p>아래는 두 속성의 차이를 보여주는 코드입니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ fullName }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#demo'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">firstName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Foo'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bar'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">fullName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Foo Bar'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">firstName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">fullName</span> <span class=\"token operator\">=</span> val <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">lastName</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token function\">fucntion</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">fullName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">firstName</span> <span class=\"token operator\">+</span>  <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> val<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>위는 watch 속성을 이용한 코드입니다. 명령형이며 코드를 반복합니다.</p>\n<p>아래는 computed를 이용한 코드입니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#demo'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">firstName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Foo'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bar'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    computed<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">fullName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">firstName</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">lastName</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<br>\n<h2 id=\"filter\"><a href=\"#filter\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Filter</h2>\n<p>뷰 필터는 <strong>화면에 표시되는 텍스트의 형식을 쉽게 변환해주는 기능</strong>입니다. 간단하게 단어의 대문자화부터 다국어, 국제 통화 표시 드으로 다양하게 사용할 수 있습니다.</p>\n<h3 id=\"필터-사용-방법\"><a href=\"#%ED%95%84%ED%84%B0-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>필터 사용 방법</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  {{ message | capitalize }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">filters</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">capitalize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>value<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">''</span>\n      value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword control-flow\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>위 코드를 실행시키면 hello가 아닌 Hello 텍스트가 화면에 나오게됩니다.</p>\n<h3 id=\"필터-등록-패턴\"><a href=\"#%ED%95%84%ED%84%B0-%EB%93%B1%EB%A1%9D-%ED%8C%A8%ED%84%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>필터 등록 패턴</h3>\n<p><code class=\"language-text\">filter</code> 속성을 각 컴포넌트에 등록하는 방법도 있지만, 읿반적으로는 filter.js 파일을 별도로 분리해서 사용합니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// filters.js</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">capitalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// main.js</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Vue</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token operator\">*</span> <span class=\"token keyword module\">as</span> filters</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'filters.js'</span>\n\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">keys</span><span class=\"token punctuation\">(</span>filters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">Vue</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">filter</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> filters<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>다음과 같은 구조를 가지게 됩니다.</p>\n<br>\n<h2 id=\"form-handling\"><a href=\"#form-handling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Form handling</h2>\n<p>폼(Form)은 웹 어플리케이션에서 가장 많이 사용되는 코드 형식입니다. 로그인이나 상품 결제 등 모든 곳에 사용자의 <strong>입력을 처리</strong>하는 폼이 필요합니다.</p>\n<h3 id=\"간단한-로그인-form-에시\"><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-form-%EC%97%90%EC%8B%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>간단한 로그인 Form 에시</h3>\n<p>다음의 순서를 따라 구성할 수 있습니다.</p>\n<p>예제 코드는 다음과 같습니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>submit.prevent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loginUser<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">loginUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> email <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">$refs</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span>\n      <span class=\"token keyword\">var</span> password <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">$refs</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span>\n      axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> email<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> password<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>이에 따른 설명은 아래의 원본 링크에서 더 자세히 볼 수 있습니다.</p>\n<ul>\n<li><a href=\"https://joshua1988.github.io/vue-camp/syntax/form.html#form-%EC%A0%9C%EC%9E%91%ED%95%98%EA%B8%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">원본 링크</a></li>\n</ul>\n"}},{"node":{"title":"[VueJS] Vuejs 라우터, 통신, 리소스","path":"/03-vuejs-starter/","date":"15. December 2020","timeToRead":6,"description":" 'Vuejs 시작하기'의 세번째 게시글입니다. ","content":"<h1 id=\"vuejs-라우터-http-통신-뷰-리소스\"><a href=\"#vuejs-%EB%9D%BC%EC%9A%B0%ED%84%B0-http-%ED%86%B5%EC%8B%A0-%EB%B7%B0-%EB%A6%AC%EC%86%8C%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue.js 라우터, HTTP 통신, 뷰 리소스</h1>\n<p>지난 컴포넌트 게시글에서 세번째 글입니다. 해당 컨텐츠는 \"Vue.js 시작하기 - Age of Vue.js\"의 강의 내용을 정리한 자료입니다.</p>\n<ul>\n<li><a href=\"https://Azderica.github.io/01-vuejs-starter/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VueJs 시작하기 - 1</a></li>\n<li><a href=\"https://Azderica.github.io/01-vuejs-starter/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VueJs 시작하기 - 2</a></li>\n</ul>\n<br/>\n<h2 id=\"뷰-라우터\"><a href=\"#%EB%B7%B0-%EB%9D%BC%EC%9A%B0%ED%84%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>뷰 라우터</h2>\n<h3 id=\"뷰-라우터란\"><a href=\"#%EB%B7%B0-%EB%9D%BC%EC%9A%B0%ED%84%B0%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>뷰 라우터란?</h3>\n<p>뷰 라우터는 뷰 라이브러리를 이용하여 싱글 페이지 애플리케이션을 구현할 때 사용하는 라이브러리입니다.</p>\n<p><a href=\"https://router.vuejs.org/kr/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue.js 라우터 공식 다큐먼트</a></p>\n<h3 id=\"뷰-라우터-설치-방법\"><a href=\"#%EB%B7%B0-%EB%9D%BC%EC%9A%B0%ED%84%B0-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>뷰 라우터 설치 방법</h3>\n<p>뷰 라우터를 설치하는 방법은 2가지 방식이 있습니다.</p>\n<h4 id=\"cdns-방법\"><a href=\"#cdns-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CDNS 방법</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/vue-router/dist/vue-router.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p>해당 방법은 따로 선언할 필요없이, html에 넣으면도 되기 때문에 저는 이 방법을 선호합니다.</p>\n<h4 id=\"npm-방법\"><a href=\"#npm-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>NPM 방법</h4>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> vue-router</code></pre>\n<h3 id=\"뷰-라우터-등록\"><a href=\"#%EB%B7%B0-%EB%9D%BC%EC%9A%B0%ED%84%B0-%EB%93%B1%EB%A1%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>뷰 라우터 등록</h3>\n<p>뷰 라우터를 설치하고 나면 다음과 같이 라우터 인스턴스를 생성하여 등록할 수 있습니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 라우터 인스턴스 생성</span>\n<span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 라우터 옵션</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 인스턴스에 라우터 인스턴스를 등록</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">router</span><span class=\"token operator\">:</span> router<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"뷰-라우터-옵션\"><a href=\"#%EB%B7%B0-%EB%9D%BC%EC%9A%B0%ED%84%B0-%EC%98%B5%EC%85%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>뷰 라우터 옵션</h3>\n<p>위처럼 라우터를 등록하면, 라우터에 옵션을 저장할 수 있습니다. 대부분의 SPA(single-page application) 앱에서는 아래와 같이 2개의 욥션을 필수로 지정해야합니다.</p>\n<ul>\n<li><strong>routes</strong>: 라우팅 할 URL과 컴포넌트 값 지정</li>\n<li><strong>mode</strong> : URL의 해쉬 값 제거 속성</li>\n</ul>\n<p>이 두개를 통해서 다음과 정의할 수 있습니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'history'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">routes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">LoginComponent</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/home'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">HomeComponent</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>해당 코드를 통해서 URL 값이 <code class=\"language-text\">/login</code>이거나 <code class=\"language-text\">/home</code> 일때 각각의 로그인 컴포넌트와 홈 컴포넌트의 데이터를 받아옵니다.</p>\n<h3 id=\"router-view\"><a href=\"#router-view\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>router-view</h3>\n<p>위에서 브라우저의 주소 창에서 URL이 변경되면, 앞에서 정의한 routes 속성에 따라 해당 컴포넌트가 화면에 뿌려집니다. 이 때 뿌려지는 위치가 템플릿의 <code class=\"language-text\">&lt;router-view&gt;</code>입니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- LoginComponent 또는 HomeComponent --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-view</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-view</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><code class=\"language-text\">/login</code>은 로그인 컴포넌트, <code class=\"language-text\">/home</code>은 홈 컴포넌트를 화면에 표시합니다.</p>\n<h3 id=\"router-link\"><a href=\"#router-link\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>router-link</h3>\n<p><code class=\"language-text\">&lt;router-link&gt;</code>는 화면에서 특정 링크를 클릭해서 페이지를 이동할 수 있게하는 기능입니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이동할 URL<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>이를 실제 코드로 구현하면 다음과 같습니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/login<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>해당 코드 실행시 <code class=\"language-text\">&lt;a&gt;</code> 태그로 변환됩니다.</p>\n<h3 id=\"원본-코드\"><a href=\"#%EC%9B%90%EB%B3%B8-%EC%BD%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>원본 코드</h3>\n<p>해당원본 코드는 다음의 링크를 참고하시면 좋습니다.</p>\n<ul>\n<li><a href=\"https://github.com/Azderica/Study-lean-vue-js/blob/master/playground-complete/router.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">router.html</a></li>\n</ul>\n<p>좀 더 자세하게 공부하려면.</p>\n<ul>\n<li><a href=\"https://joshua1988.github.io/web-development/vuejs/vue-router-navigation-guards/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Captain Pangyo님의 글</a></li>\n</ul>\n<br/>\n<h2 id=\"http-라이브러리와-ajax-vue-resource\"><a href=\"#http-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EC%99%80-ajax-vue-resource\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HTTP 라이브러리와 Ajax, Vue Resource</h2>\n<h3 id=\"ajax\"><a href=\"#ajax\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ajax</h3>\n<p>Ajax의 정의는 JavaScript의 라이브러리 중 하나이며 Asynchronous Javascript And Xml(비동기식 자바스크립트와 xml)의 약자입니다. 브라우저가 가지고있는 XMLHttpRequest 객체를 이용해서 전체 페이지를 새로 고치지 않고도 페이지의 일부만을 위한 데이터를 로드하는 기법입니다.</p>\n<p>이를 정리하면 <strong>JavaScript를 사용한 비동기 통신, 클라이언트와 서버간에 XML 데이터를 주고받는 기술</strong>로 정의할 수 있습니다.</p>\n<h4 id=\"비동기-처리란\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%B2%98%EB%A6%AC%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>비동기 처리란?</h4>\n<p>자바스크립트의 비동기 처리란 특정 코드의 연산이 끝날 때까지 코드의 실행을 멈추지 않고, 다음 코드를 먼저 실행하는 자바스크립트의 특성을 의미합니다.</p>\n<p>좀 더 자세하게 볼려면.</p>\n<ul>\n<li><a href=\"https://ko.wikipedia.org/wiki/Ajax\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ajax 정의</a></li>\n<li><a href=\"https://github.com/pagekit/vue-resource\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue Resource Git</a></li>\n</ul>\n<h3 id=\"axios\"><a href=\"#axios\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Axios</h3>\n<p>Axios(액시오스)는 <strong>뷰에서 권고하는 HTTP 통신 라이브러리</strong>입니다. <strong>Promise 기반의 HTTP 통신 라이브러리이며 상대적으로 다른 HTTP 통신 라이브러리들에 비해 문서화가 잘되어 있고 API가 다양</strong>합니다.</p>\n<ul>\n<li><a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Axios Git</a></li>\n</ul>\n<h3 id=\"자바스크립트-비동기-처리-패턴\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%B2%98%EB%A6%AC-%ED%8C%A8%ED%84%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>자바스크립트 비동기 처리 패턴</h3>\n<ol>\n<li>callback</li>\n<li>promise</li>\n<li>promise + generator</li>\n<li>async &#x26; await</li>\n</ol>\n<p>좀 더 자세하게 보려면.</p>\n<ul>\n<li><a href=\"https://joshua1988.github.io/web-development/javascript/javascript-asynchronous-operation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">자바스크립트 비동기 처리와 콜백 함수</a></li>\n<li><a href=\"https://joshua1988.github.io/web-development/javascript/promise-for-beginners/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">자바스크립트 Prmoise 이해하기</a></li>\n<li><a href=\"https://joshua1988.github.io/web-development/javascript/js-async-await/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">자바스크립트 async와 await</a></li>\n</ul>\n<h3 id=\"axios-설치-방법\"><a href=\"#axios-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Axios 설치 방법</h3>\n<p>프로젝트에 액시오스를 설치하는 방법은 CDN 방식과 NPM 방식 2가지가 있습니다.</p>\n<h4 id=\"cdn-방식\"><a href=\"#cdn-%EB%B0%A9%EC%8B%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CDN 방식</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/axios/dist/axios.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4 id=\"npm-방식\"><a href=\"#npm-%EB%B0%A9%EC%8B%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>NPM 방식</h4>\n<pre class=\"language-text\"><code class=\"language-text\">npm install axios</code></pre>\n<h3 id=\"axios-사용-방법\"><a href=\"#axios-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Axios 사용 방법</h3>\n<p>라이브러리를 설치하면 <code class=\"language-text\">axios</code> 변수에 접근할 수 있습니다. 이 <code class=\"language-text\">axios</code>를 통해서 아래와 같이 HTTP GET 요청을 날릴 수 있습니다.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fetchData<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>get data<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">fetchData</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      axios\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://jsonplaceholder.typicode.com/users/'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>해당 코드를 실행해보면, get data 버튼 클릭시 사용자 정보를 받아옵니다.</p>\n<ul>\n<li>Tip) function안의 this와 .then 안에 있는 this는 바라보고 있는 것이 다릅니다.</li>\n</ul>\n<p>해당 요청에 대해 좀 더 자세하게 확인할려면.</p>\n<ul>\n<li><a href=\"https://jsonplaceholder.typicode.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jsonplaceholder 사이트</a></li>\n<li><a href=\"https://joshua1988.github.io/web-development/translation/javascript/how-js-works-inside-engine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">자바스크립트 동작 원리</a></li>\n<li><img src=\"https://user-images.githubusercontent.com/42582516/102364902-52e44e80-3ffa-11eb-9f59-97c20d7b2a11.png\" alt=\"HTTP 통신 구조\"></li>\n</ul>\n<h3 id=\"원본-코드-1\"><a href=\"#%EC%9B%90%EB%B3%B8-%EC%BD%94%EB%93%9C-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>원본 코드</h3>\n<ul>\n<li><a href=\"https://github.com/Azderica/Study-lean-vue-js/blob/master/playground-complete/axios.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">axios.html</a></li>\n</ul>\n"}},{"node":{"title":"[VueJS] Vuejs 컴포넌트 통신","path":"/02-vuejs-starter/","date":"12. December 2020","timeToRead":5,"description":" 'Vuejs 시작하기'의 두번째 게시글입니다. ","content":"<h1 id=\"vuejs-컴포넌트-통신\"><a href=\"#vuejs-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%86%B5%EC%8B%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue.js 컴포넌트 통신</h1>\n<p>지난 컴포넌트 게시글에서 두번째 글입니다. 해당 컨텐츠는 \"Vue.js 시작하기 - Age of Vue.js\"의 강의 내용을 정리한 자료입니다.</p>\n<ul>\n<li>이전 글 : <a href=\"https://Azderica.github.io/01-vuejs-starter/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VueJs 시작하기</a></li>\n</ul>\n<p>컴포넌트 통신에 대해서 좀 더 자세하게 이야기합니다.</p>\n<br/>\n<h2 id=\"컴포넌트-통신-방법\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%86%B5%EC%8B%A0-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>컴포넌트 통신 방법</h2>\n<h3 id=\"컴포넌트란\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>컴포넌트란.</h3>\n<p>지난 게시글에 설명한 컴포넌트의 정의에 대해 다시 정의하면 다음과 같습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/101981496-ba279900-3cb0-11eb-847a-925ab0532d09.png\" alt=\"Vue Component\"></p>\n<p>컴포넌트는 화면의 영역을 구분하여 개발할 수 있는 뷰의 기능입니다. 컴포넌트 기반으로 화면을 개발하는 경우, 코드의 재사용성이 올라가고 빠르게 화면을 제작할 수 있습니다.</p>\n<h3 id=\"컴포넌트-통신\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%86%B5%EC%8B%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>컴포넌트 통신</h3>\n<p>뷰 컴포넌트는 각각의 고유한 데이터 유효범위를 가지고 있습니다. 따라서 컴포넌트 간에 데이터를 주고 받기 위해서는 아래의 규칙을 지켜야합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/101981570-489c1a80-3cb1-11eb-8a6a-709cf4f85144.png\" alt=\"Component Communication\"></p>\n<ul>\n<li>Props 속성 : 상위에서 하위로 데이터를 내려주는 것</li>\n<li>이벤트 발생 : 하위에서 상위로 이벤트를 올렺둠</li>\n</ul>\n<p>이 규칙을 준수하므로 이벤트를 추적할 수 있습니다.</p>\n<h3 id=\"props-속성\"><a href=\"#props-%EC%86%8D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Props 속성</h3>\n<p>Props 속성은 컴포넌트 간에 데이터를 전달할 수 있는 컴포넌트 통신 방법입니다. 이는 상위 컴포넌트에서 하위 컴포넌트로 내려가는 데이터 속성입니다.</p>\n<h4 id=\"props-속성-코드-형식\"><a href=\"#props-%EC%86%8D%EC%84%B1-%EC%BD%94%EB%93%9C-%ED%98%95%EC%8B%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>props 속성 코드 형식</h4>\n<p>Props 속성을 사용하기 위해서는 하위 컴포넌트의 컴포넌트 내용과 상위 컴포넌트의 템플릿에 각각 코드를 추가해야합니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 하위 컴포넌트의 내용</span>\n<span class=\"token keyword\">var</span> childComponent <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'프롭스 속성 명'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 상위 컴포넌트의 템플릿 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child-component</span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>프롭스</span>\n    <span class=\"token attr-name\">속성</span>\n    <span class=\"token attr-name\">명</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>상위 컴포넌트의 data 속성<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child-component</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4 id=\"props-속성-코드-예시\"><a href=\"#props-%EC%86%8D%EC%84%B1-%EC%BD%94%EB%93%9C-%EC%98%88%EC%8B%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>props 속성 코드 예시</h4>\n<p>이를 구현한 예시는 다음과 같습니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 하위 컴포넌트 : childComponent</span>\n<span class=\"token keyword\">var</span> childComponent <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'propsdata'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;p>{{ propsdata }}&lt;/p>'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 상위 컴포넌트 : root 컴포넌트</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'child-component'</span><span class=\"token operator\">:</span> childComponent<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'hello vue js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child-component</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>propsdata</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child-component</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- 위 출력 결과는 &lt;p>hello vue js&lt;/p> --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"event-emit\"><a href=\"#event-emit\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event Emit</h3>\n<p>이벤트 발생은 컴포넌트의 통신 방법 중 하위 컴포넌트에서 상위 컴포넌트로 통신하는 방식입니다.</p>\n<h4 id=\"event-발생-코드-형식\"><a href=\"#event-%EB%B0%9C%EC%83%9D-%EC%BD%94%EB%93%9C-%ED%98%95%EC%8B%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 발생 코드 형식</h4>\n<p>하위 컴포넌트의 메서드나 라이프 사이클 훅과 같은 곳에서 아래와 같은 코드를 추가합니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 하위 컴포턴트의 내용</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'이벤트 명'</span><span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 상위 컴포넌트의 템플릿 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child-component</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>이벤트</span> <span class=\"token attr-name\">명</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>상위 컴포넌트의 실행할 메스드 명 또는 연산<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4 id=\"event-코드-예시\"><a href=\"#event-%EC%BD%94%EB%93%9C-%EC%98%88%EC%8B%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 코드 예시</h4>\n<p>간한단 이벤트 발신, 수신 코드는 다음과 같습니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 하위 컴포넌트 : childComponent</span>\n<span class=\"token keyword\">var</span> childComponent <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">sendEvent</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 상위 컴포넌트 : root component</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'child-component'</span><span class=\"token operator\">:</span> childComponent<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">showAlert</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'event received'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child-component</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>update</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>위 코드를 실행시켜보면, 하위 컴포넌트인 childComponent에서 <code class=\"language-text\">sendEvent()</code> 메서드가 실행되면 <code class=\"language-text\">update</code>라는 이벤트가 발생되고, 이를 상위 컴포넌트인 Root Component의 <code class=\"language-text\">v-on</code> 디렉티브로 이벤트를 받아서 <code class=\"language-text\">showAlert()</code> 메서드를 실행하는 코드입니다.</p>\n<p>실행 결과는 event recived라는 경고창이 발생합니다.</p>\n<h3 id=\"this에-대한-좋은-글\"><a href=\"#this%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A2%8B%EC%9D%80-%EA%B8%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>this에 대한 좋은 글</h3>\n<p>JS에서 this는 크게 4가지 역할을 가지고 있습니다.</p>\n<ul>\n<li><a href=\"https://www.w3schools.com/js/js_this.asp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.w3schools.com/js/js_this.asp</a></li>\n<li><a href=\"https://medium.com/better-programming/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/better-programming/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8</a></li>\n</ul>\n<h3 id=\"같은-컴포넌트-레벨-간의-통신-방법\"><a href=\"#%EA%B0%99%EC%9D%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A0%88%EB%B2%A8-%EA%B0%84%EC%9D%98-%ED%86%B5%EC%8B%A0-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>같은 컴포넌트 레벨 간의 통신 방법</h3>\n<p>같은 컴포넌트 레벨 간의 통신은 다음과 같습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/102004260-69687c80-3d52-11eb-9402-7add8b3d2dd5.png\" alt=\"Same-level-component-communication\"></p>\n<p>Tip) 같은 텍스트 선택 단축키</p>\n<ul>\n<li>윈도우 : Ctrl + d</li>\n<li>맥 : Cmd + d</li>\n</ul>\n<p>예제 코드는 다음과 같습니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> appHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;div>header&lt;/div>'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'propsdata'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> appContent <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;div>conetent&lt;button v-on:click=\"passNum\">pass&lt;/button>&lt;/div>'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">passNum</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pass'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'app-header'</span><span class=\"token operator\">:</span> appHeader<span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'app-content'</span><span class=\"token operator\">:</span> appContent<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">deliverNum</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">num</span> <span class=\"token operator\">=</span> value\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- &lt;app-header v-bind:프롭스 속성 이름=\"상위 컴포넌트 이름\">&lt;/app-header> --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-header</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>propsdata</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-header</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-content</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>pass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deliverNum<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>이와 같이 구현할수 있으며, 해당 코드를 실행 시 <code class=\"language-text\">app-content</code>에서 event를 발생시켜서 이 데이터를 상위 컴포넌트인 root로 보내게 되고, <code class=\"language-text\">app-header</code>에서 props를 받아서 데이터를 받게 됩니다.</p>\n"}},{"node":{"title":"[VueJS] Vuejs 시작하기","path":"/01-vuejs-starter/","date":"31. July 2020","timeToRead":5,"description":" 'Vuejs 시작하기'의 첫번째 게시글입니다. ","content":"<h1 id=\"vuejs-시작하기\"><a href=\"#vuejs-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue.js 시작하기</h1>\n<br/>\n<h2 id=\"개발-환경-설정\"><a href=\"#%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>개발 환경 설정</h2>\n<p>설치할 프로그램</p>\n<ul>\n<li>Chrome</li>\n<li>Visual Studio Code</li>\n<li>Node.js</li>\n<li>Vue.js Devtools</li>\n</ul>\n<p>관련 코드</p>\n<ul>\n<li><a href=\"https://github.com/joshua1988/learn-vue-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">깃헙 리포지토리 주소</a></li>\n</ul>\n<p>설정 플러그인</p>\n<ul>\n<li>Vetur</li>\n<li>Night Owl</li>\n<li>Material Icon Theme</li>\n<li>Live Server</li>\n<li>ESLint</li>\n<li>Prettier</li>\n<li>Auto Close Tag</li>\n<li>Atom Keymap</li>\n</ul>\n<br/>\n<h2 id=\"vue-이해하기\"><a href=\"#vue-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue 이해하기</h2>\n<h3 id=\"vue-는-무엇인가\"><a href=\"#vue-%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue 는 무엇인가?</h3>\n<p>MVVM 패턴의 뷰모델(ViewModel)레이어에 해당하는 화면(View)단 라이브러리입니다.</p>\n<p>View(DOM) ---> ViewModel, DOM Listeners(Vue) ----> Model(Plain Jav Script Object)</p>\n<p>View(DOM) &#x3C;--- ViewModel, DOM Bindings(Vue) &#x3C;---- Model(Plain Jav Script Object)</p>\n<h3 id=\"단축키\"><a href=\"#%EB%8B%A8%EC%B6%95%ED%82%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>단축키</h3>\n<ol>\n<li><code class=\"language-text\">! + tab</code> 을 누르게 되면, head, body 등을 다 만들어준다.</li>\n<li><code class=\"language-text\">div#{id이름}</code> 을 작성하게 되면 자동완성해준다.</li>\n<li><code class=\"language-text\">script + tab</code> 을 누르게 되면 script을 자동완성해준다.</li>\n<li><code class=\"language-text\">log + tab</code> 을 누르게 되면, console.log 를 완성해준다.</li>\n<li><code class=\"language-text\">tab</code> 은 자동완성이 된다.</li>\n</ol>\n<p>등등 편한 테크가 많다.</p>\n<h3 id=\"reactivity\"><a href=\"#reactivity\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>reactivity</h3>\n<p>데이터의 변화를 인지하여 화면에 그려주는 것.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Object.defineProperty() API 문서 링크</a></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Object.defineProperty('대상 객체', '객체_속성', {</span>\n<span class=\"token comment\">//    // 정의할 내용</span>\n<span class=\"token comment\">// })</span>\n\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">,</span> <span class=\"token string\">'str'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 속성에 접근했을 때의 동작을 정의</span>\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'접근'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 속성에 값을 할당했을 때의 동작을 정의</span>\n  <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'할당'</span><span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>reacitivity의 핵심은 데이터의 변화를 라이브러리에서 감지해서, 알아서 화면을 자동으로 그려줍니다.</p>\n<h3 id=\"라이브러리화\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>라이브러리화?</h3>\n<blockquote>\n<p>아래처럼 할 수 있음</p>\n</blockquote>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">,</span> <span class=\"token string\">'str'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 속성에 접근했을 때의 동작을 정의</span>\n      <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'접근'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 속성에 값을 할당했을 때의 동작을 정의</span>\n      <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'할당'</span><span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    div<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> value\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<br/>\n<h2 id=\"인스턴스\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>인스턴스</h2>\n<p>인스턴스는 뷰로 개발할 때 필수로 생성해야 하는 코드입니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 이런식으로 하면 인스턴스를 생성한것.</span></code></pre>\n<h3 id=\"생성자-함수\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>생성자 함수</h3>\n<p>약속 중 하나는 생성자 함수의 맨앞은 대문자로 시작합니다.</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Obsolete_Pages/Core_JavaScript_1.5_Guide/Creating_New_Objects/Using_a_Constructor_Function\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN 생성자 함수 설명 문서</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN Prototype 설명 문서</a></li>\n</ul>\n<h3 id=\"인스턴스-옵션-속성\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%98%B5%EC%85%98-%EC%86%8D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>인스턴스 옵션 속성</h3>\n<p>일반적으로 객체를 선언할 때, 리터럴 방법이 더 좋을 때가 많다.(변수 선언하지말고.)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">created</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>인스턴스에서 사용할 수 있는 속성과 API는 다음과 같다.</p>\n<ul>\n<li>el : 인스턴스가 그려지는 화면의 시작점(특정 HTML 태그)</li>\n<li>template : 화면에 표시할 요소 (HTML, CSS 등)</li>\n<li>data : 뷰의 반응성(Reactivity)가 반영된 데이터 속성</li>\n<li>methods : 화면의 동작과 이벤트 로직을 제어하는 메서드</li>\n<li>created : 뷰의 라이프 사이클과 관련된 속성</li>\n<li>watch : data에서 정의한 속서이 변화했을 때 추가 동작을 수행할 수 있게 정의하는 속성</li>\n<li>이외에도 많은 속성들이 있음...</li>\n</ul>\n<br/>\n<h2 id=\"컴포넌트\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>컴포넌트</h2>\n<p>가장 큰 장점은 재사용이 가능한 것. 화면의 영역을 분리해서 보여주는 것.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-header</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-header</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-footer</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-footer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-header</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-header</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-footer</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-footer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token comment\">// 전역 컴포넌트</span>\n    <span class=\"token comment\">// Vue.component('컴포넌트 이름', 컴포넌트 내용);</span>\n    <span class=\"token maybe-class-name\">Vue</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app-header'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;h1>Header&lt;/h1>'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 지역 컴포넌트 등록 방식</span>\n      <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// '컴포넌트 이름': 컴포넌트 내용,</span>\n        <span class=\"token string-property property\">'app-footer'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;footer>footer&lt;/footer>'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#app2'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'app-footer'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;footer>footer&lt;/footer>'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>위를 보면 전역 컴포넌트와 지역 컴포넌트가 있는 것을 확인할 수 있다.</p>\n<h3 id=\"전역-컴포넌트\"><a href=\"#%EC%A0%84%EC%97%AD-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>전역 컴포넌트</h3>\n<ul>\n<li>하나면 들어가기 때문에 <code class=\"language-text\">component</code> 라고 넣어났다.</li>\n</ul>\n<h3 id=\"지역-컴포넌트\"><a href=\"#%EC%A7%80%EC%97%AD-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>지역 컴포넌트</h3>\n<ul>\n<li>여러개가 들어가기 때문에 <code class=\"language-text\">components</code> 라고 붙여놓았다.</li>\n<li>마찬가지로 <code class=\"language-text\">methods</code> 도 비슷한 논리입니다.</li>\n</ul>\n<h3 id=\"컴포넌트와-인스턴트와의-관계\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%ED%8A%B8%EC%99%80%EC%9D%98-%EA%B4%80%EA%B3%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>컴포넌트와 인스턴트와의 관계</h3>\n<ul>\n<li>인스턴트는 여러개를 생성할 수 있습니다. (필요없을지라도)</li>\n<li>인스턴트를 생성하면 Root가 2개가 생깁니다.</li>\n</ul>\n<p>좀더 자세하게 알 수 있는 곳.</p>\n<ul>\n<li><a href=\"http://wiki.sys4u.co.kr/pages/viewpage.action?pageId=8553372\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://wiki.sys4u.co.kr/pages/viewpage.action?pageId=8553372</a></li>\n<li><a href=\"https://develop-designer.tistory.com/3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://develop-designer.tistory.com/3</a></li>\n</ul>\n"}}]}}},"context":{}}