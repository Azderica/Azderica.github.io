{"hash":"c252e7650a6691103be74bcadb51dd243a8d98c2","data":{"tag":{"title":"Protocol","belongsTo":{"edges":[{"node":{"title":"[Network] LDAP이란?","path":"/00-network-ldap/","date":"19. January 2021","timeToRead":5,"description":"LDAP에 대해 작성합니다.","content":"<h1 id=\"ldap\"><a href=\"#ldap\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LDAP</h1>\n<p>LDAP의 개념은 들어본 사람도 있을 것이고 들어보지 못한 사람도 있을 것입니다. 업무에 대해 진행을 하다가 LDAP에 대해 들어보게 되었고 처음 듣는 개념이라 한 번 정리가 필요하다는 생각이 필요했습니다.</p>\n<br/>\n<h2 id=\"ldap의-개념\"><a href=\"#ldap%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LDAP의 개념</h2>\n<p>LDAP이란 <code class=\"language-text\">Lightweight Directory Access Protocol</code>의 약자로 이를 해석하면 경량 디렉터리 액세스 프로토콜로 해석됩니다. 간단하게 이야기하면 TCP/IP 위에서 <strong>디렉터리 서비스를 조회하고 수정하는 응용 프로토콜</strong>입니다.</p>\n<ul>\n<li>디렉토리 : 논리, 계급 방식 속에서 조직화된 비슷한 특성을 가진 객체들의 모임</li>\n</ul>\n<p>일반적으로 LDAP은 인증을 위한 다른 서비스에서 자주 사용됩니다. 또한 LDAP의 배치는 최상위 수준의 계급을 구조화하기 위해 도메인 이름을 사용하는데 디렉토리가 깊어질수록 이를 대표하는 항목이 나타납니다.</p>\n<p>LDAP의 개념을 이해하기 위해서는 DAP에 대해서 알면 좋습니다. X.500의 DAP은 OSI 7 계층의 전체 프로토콜 스택을 지원하는데 너무 무거운 프로토콜입니다. 그래서 <strong>DAP의 복잡성을 줄이고 TCP/IP 레이어에서 가볍게 조작할 수 있는 프로토콜, 저장소로서 특정화된 데이터베이스이며 write 작업보다는 read 작업에 적합</strong>한 것으로 탄생한 것이 LDAP입니다.</p>\n<blockquote>\n<p>X.500</p>\n</blockquote>\n<p>X.500은 전자 디렉토리 서비스를 전달하는 컴퓨터 네트워크 표준입니다. 좀 더 자세하게 알기위해서는 <code class=\"language-text\">Directory Service</code>의 개념에 대해서 이해해야하는데, 이는 <strong>OSI 7 Layer의 응용계층에 속하는 프로토콜로서 정보통신 서비스에 필요한 정보를 데이터베이스화하여 효율적으로 관리하고 사용자가 편리하게 접근하는 기능을 제공하는 서비스</strong>입니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/104970027-836e3c80-5a2d-11eb-8a53-ebf697fe300d.png\" alt=\"Directory-service\"></p>\n<p>Dircetory Service는 다음과 같은 형태를 가지고 있습니다.</p>\n<ul>\n<li><code class=\"language-text\">DUA</code> : Directory User Agent, 사용자와 디렉토리 간의 인터페이스 역할 수행 프로세스</li>\n<li><code class=\"language-text\">DSA</code> : Directory System Agent, 디렉토리 내 사용자의 요구 프로세스</li>\n</ul>\n<br/>\n<h2 id=\"ldap의-구성\"><a href=\"#ldap%EC%9D%98-%EA%B5%AC%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LDAP의 구성</h2>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/104970321-5f5f2b00-5a2e-11eb-8e6d-b064167a8c52.png\" alt=\"ldap-component\"></p>\n<p>LDAP의 요청은 사용자나 응용프로그램에서 요청시 LDAP을 통해서 LDAP서버에 전달됩니다. 서버는 요청을 처리 후 다시 LDAP을 통해서 요청자에게 결과를 전송합니다. 기존의 DAP과 다르게 TCP/IP 상에서 운영됩니다.</p>\n<br/>\n<h2 id=\"ldap의-구조\"><a href=\"#ldap%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LDAP의 구조</h2>\n<p>LDAP의 구조는 크게 4가지로 구분됩니다.</p>\n<p>너무 깊게 들어가면 내용적으로 이해하기 힘들 것 같아 개념만 정리하겠습니다.</p>\n<h3 id=\"information-모델\"><a href=\"#information-%EB%AA%A8%EB%8D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Information 모델</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/104970313-58d0b380-5a2e-11eb-9115-a9c1a527bc38.png\" alt=\"ldap-hierarchical\"></p>\n<p><strong>정의</strong> : LDAP의 데이터에 대한 종류와 디렉토리에 저장되는 정보에 대한 기본 단위를 정의합니다. 기본적으로 Entries, Attributes, Values 3가지로 정의됩니다.</p>\n<ul>\n<li>Entry : 디렉토리 정보에 대한 기본단위</li>\n<li>Attribute : Entry를 구성하는 단위</li>\n<li>Value : Attribute의 실질적인 데이터</li>\n</ul>\n<h3 id=\"naming-모델\"><a href=\"#naming-%EB%AA%A8%EB%8D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Naming 모델</h3>\n<p><strong>정의</strong> : 데이터를 어떻게 구성하고 참조할 것인지에 대해 정의합니다.</p>\n<h3 id=\"functional-모델\"><a href=\"#functional-%EB%AA%A8%EB%8D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Functional 모델</h3>\n<p><strong>정의</strong> : 디렉토리 트리의 데이터에 접근하는 방법에 대해 정의합니다. 크게 3가지 그룹으로 구성합니다.</p>\n<ul>\n<li>Interrogation(질문) 작업 : 디렉토리 Entry를 검색 및 비교하는 기능</li>\n<li>Update(갱신) 작업 : 디렉토리 Entry의 추가, 삭제, 변경 등의 기능</li>\n<li>Authentication(인증) 및 Control(제어) 작업 : 클라이언트의 확인 및 제어 기능(Bind, Unbind, Abandon)</li>\n</ul>\n<h3 id=\"secruity-모델\"><a href=\"#secruity-%EB%AA%A8%EB%8D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Secruity 모델</h3>\n<p>인증된 접근만 디렉토리 내 정보를 제공합니다.</p>\n<br/>\n<h2 id=\"ldap-version\"><a href=\"#ldap-version\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LDAP Version</h2>\n<p>현재 version 3까지 나왔습니다.</p>\n<h3 id=\"ldapv1-vs-ldap-v2\"><a href=\"#ldapv1-vs-ldap-v2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LDAPv1 vs LDAP v2</h3>\n<ul>\n<li>LDAPv2는 인증과정없이 LDAP 서버에 Bind 되는 것이 허용됩니다.</li>\n<li>READ, List Operation이 삭제되었습니다.</li>\n<li>클라이언트는 오직 하나의 서버에만 연결가능하도록 바뀌었습니다.(DAP의 Referral 기능을 제공하지않습니다.)</li>\n</ul>\n<h3 id=\"ldapv2-vs-ldap-v3\"><a href=\"#ldapv2-vs-ldap-v3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LDAPv2 vs LDAP v3</h3>\n<ul>\n<li>Referral을 통해서 분산 기능이 생겼습니다.</li>\n<li>사용자 정의 Attribute와 Object 생성이 가능합니다.</li>\n<li>UTF-8 Encoding을 이용해서 언어를 표현하는 제약이 완화되었고 다양한 언어 사용이 가능합니다.</li>\n<li>사용자 정의 Matching Rule이 생성 가능합니다.</li>\n<li>보안성이 올라갔습니다.</li>\n</ul>\n<br/>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리.</h2>\n<p>간략하게 개념을 잡는다고 생각하고 내용을 정리했습니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://ldap.or.kr/ldap-%EC%9D%B4%EB%9E%80/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://ldap.or.kr/ldap-%EC%9D%B4%EB%9E%80/</a></li>\n<li><a href=\"https://velog.io/@kante/LDAP-%EC%9D%B4%EB%9E%80\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velog.io/@kante/LDAP-%EC%9D%B4%EB%9E%80</a></li>\n<li><a href=\"https://medium.com/@hmj2088/ldap-dc771e2704a9\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/@hmj2088/ldap-dc771e2704a9</a></li>\n</ul>\n"}}]}}},"context":{}}