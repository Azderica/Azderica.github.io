{"hash":"c7c6273426a1f1c25b484e341518249aeec696cd","data":{"tag":{"title":"ASP.NET","belongsTo":{"edges":[{"node":{"title":"[ASP.NET] ASP.NET 시작하기","path":"/00-dotnet/","date":"15. August 2020","timeToRead":3,"description":" ASP.NET 개발에 대한 시작글입니다. ","content":"<h1 id=\"aspnet-시작하기\"><a href=\"#aspnet-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ASP.NET 시작하기</h1>\n<br/>\n<h2 id=\"aspnet-mvc의-이해\"><a href=\"#aspnet-mvc%EC%9D%98-%EC%9D%B4%ED%95%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ASP.NET MVC의 이해</h2>\n<h3 id=\"과거-aspnet-web-forms\"><a href=\"#%EA%B3%BC%EA%B1%B0-aspnet-web-forms\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>과거. ASP.NET Web Forms</h3>\n<table>\n<thead>\n<tr>\n<th>계층적 구조</th>\n<th>단계</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ASP.NET Web Forms</td>\n<td>UI 구성요소들의 모음(페이지, 버튼 등) 및 상태가 존재하는 개체-지향 GUI 프로그래밍 모델</td>\n</tr>\n<tr>\n<td>ASP.NET</td>\n<td>.NET 응용 프로그램을 IIS상에서 호스트하는 방식, HTTP 요청 및 응답을 통해서 상호작용 가능</td>\n</tr>\n<tr>\n<td>.NET</td>\n<td>다중 언어를 지원하는 관리되는 코드 플랫폼</td>\n</tr>\n</tbody>\n</table>\n<p>문제점.</p>\n<ul>\n<li>ViewState로 인한 부하</li>\n<li>페이지 수명주기</li>\n<li>취약한 관심사의 분리</li>\n<li>제한적인 HTML 제어</li>\n<li>빈약한 추상화</li>\n<li>테스트의 어려움</li>\n</ul>\n<h3 id=\"오늘날의-웹-개발\"><a href=\"#%EC%98%A4%EB%8A%98%EB%82%A0%EC%9D%98-%EC%9B%B9-%EA%B0%9C%EB%B0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>오늘날의 웹 개발.</h3>\n<ol>\n<li>\n<p>웹 표준과 REST의 등장</p>\n<ul>\n<li>웹 표준 기술 : HTML, CSS, JS</li>\n<li>REST(Representational State Transfer)</li>\n</ul>\n</li>\n<li>\n<p>애자일과 테스트 주도 개발</p>\n<ul>\n<li>애자일 개발 방법론</li>\n<li>\n<p>테스트 주도 개발(Test-Driven Developmnet, TDD)</p>\n<ul>\n<li>관련있는 개발론 : 행위 주도 개발(Behavior-Driven Development, BDD)</li>\n<li>단위 테스트 도구</li>\n<li>UI 자동화 도구</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>루비 온 레일즈(레일즈)</p>\n<ul>\n<li>MVC 아키텍처를 채용</li>\n<li>HTTP 프로토콜과 어우러짐</li>\n<li>규약(Convention)을 권장</li>\n<li>개체-관계 매퍼(Object Relational Mapping, ORM) 도구를 통합</li>\n</ul>\n</li>\n<li>\n<p>Node.js</p>\n<ul>\n<li>JavaScript를 사용</li>\n<li>철저하게 비동기적</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"aspnet-mvc의-주요-장점\"><a href=\"#aspnet-mvc%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%9E%A5%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ASP.NET MVC의 주요 장점</h3>\n<ol>\n<li>\n<p>MVC 아키텍쳐</p>\n<ul>\n<li>사용자는 MVC 프로그램과 자연스러운 상호작용</li>\n<li>웹 응용프로그램은 서로 다른 기술들의 결합으로 구성</li>\n</ul>\n</li>\n<li>\n<p>확장성</p>\n<ul>\n<li>프레임워크가 제공하는 기본 구현된 구성요소 사용</li>\n<li>기본 구현을 상속받은 다음, 하위 클래스(subclass)를 구현</li>\n<li>인터페이스나 추상 기본 클래스를 새롭게 구현해서 구성요소 전체를 교체</li>\n</ul>\n</li>\n<li>\n<p>HTML과 HTTP에 대해 강력한 제어</p>\n<ul>\n<li>표준을 준수하는 깔끔한 마크업</li>\n<li>HTTP와 잘 어울러져 동작</li>\n</ul>\n</li>\n<li>\n<p>테스트 용이성</p>\n<ul>\n<li>독립적으로 나눠지도록 만들어서 텟그트 하기 용이</li>\n<li>NUnit같은 오픈 소스 단위 테스트 도구 사용 가능</li>\n<li>여러 테스트 기법과 Mocking 기법 활용</li>\n</ul>\n</li>\n<li>\n<p>강력한 라우팅 시스템</p>\n<ul>\n<li>URL 라우팅 기능을 통해 깔끔한 URL 제공</li>\n</ul>\n</li>\n<li>\n<p>ASP.NET 플랫폼의 장점들을 기반으로 만들어진 ASP.NET MVC</p>\n<ul>\n<li>구성요소들 및 장치들을 제공</li>\n<li>인증, 멤버십, 프로필, 국제화 등 기존 ASP.NET 플랫폼의 내장된 기능으로 코드를 줄여줌</li>\n</ul>\n</li>\n<li>\n<p>현대적인 API</p>\n<ul>\n<li>최신 언어 및 런타임 타임 제공</li>\n</ul>\n</li>\n<li>\n<p>오픈소스인 ASP.NET MVC</p>\n<ul>\n<li>원본 코드를 다운 받을 수 있음</li>\n<li>원본 소스에 접근하기 편함</li>\n</ul>\n</li>\n</ol>\n<p>예제 코드 : www.apress.com/9781430265290</p>\n<p>책 : 프로 ASP.NET MVC 5 프레임 워크</p>\n<p>개발 환경 : Visual Studio 2013</p>\n"}}]}}},"context":{}}