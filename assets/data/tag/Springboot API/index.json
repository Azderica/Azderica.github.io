{"hash":"a43281d937e690ee41ca21913c539571e0d27905","data":{"tag":{"title":"Springboot API","belongsTo":{"edges":[{"node":{"title":"[Springboot] Springboot 테스트 코드 작성하기","path":"/01-springboot-test/","date":"26. October 2020","timeToRead":7,"description":" Springboot Test에 대한 코드입니다. ","content":"<h1 id=\"springboot-테스트-코드\"><a href=\"#springboot-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Springboot 테스트 코드</h1>\n<p>대학교 시절, 프론트 위주 개발을 하다가 스프링 개발을 하다보니 가장 어려웠던 점은 테스트 코드를 작성하는 부분이였다.</p>\n<p>테스트 코드를 작성할 때, 여러 어노테이션이 등장하고 이 부분에 대한 개념도 없다는 것을 느끼고 있다. (다음 게시물은 아마 스프링 어노테이션에 대해서 작성할 예정이다.)</p>\n<p>간략하게라도 글을 통해 정리하고, 이후 점차 추가해가는 방향으로 진행해야겠다.</p>\n<br/>\n<h2 id=\"junit\"><a href=\"#junit\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JUnit</h2>\n<h3 id=\"junit의-특징\"><a href=\"#junit%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Junit의 특징.</h3>\n<ul>\n<li>JUnit은 자바용 단위 테스트 작성을 위한 표준 프레임워크다.</li>\n<li>xUnit이라는 단위 테스트 프레임워크의 자바 구현물이다.</li>\n<li>테스트 도구이며 외부 테스트 프로그램을 작성해 할 필요 없이 이를 관리해줄 수 있따.</li>\n<li>하나의 jar파일로 되어 있으며 사용법 또한 간단하다</li>\n<li>테스트 결과를 확인하는 것 뿐만 아니라 최적화된 코드를 유추하는 기능도 있어서 성능향상을 기대할 수 있따.</li>\n<li>Test 클래스를 통해 다른 개발자에게 테스트 방법과 클래스 히스토리를 알려줄 수 있다.</li>\n</ul>\n<h3 id=\"junit에서-테스트를-지원하는-어노테이션annotation\"><a href=\"#junit%EC%97%90%EC%84%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%A7%80%EC%9B%90%ED%95%98%EB%8A%94-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98annotation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JUnit에서 테스트를 지원하는 어노테이션(Annotation)</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">@Test</code></p>\n<ul>\n<li>@Test 가 선언된 메서드는 테스트를 수행하는 메소드가 된다.</li>\n<li>JUnit은 각각의 테스트가 서로 영향을 주지 않고, 독립적으로 실행됨을 원칙으로 하며, @Test마다 객체를 생성한다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@Ignore</code></p>\n<ul>\n<li>@Ignore가 선언된 메서드는 테스트를 실행하지 않는다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@Before</code></p>\n<ul>\n<li>@Before가 선언된 메서드는 @Test 메서드가 실행되기 전에 반드시 실행된다.</li>\n<li>@Test메서드에서 공통으로 사용하는 코드를 @Before 메서드에 선언하여 사용하면 된다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@After</code></p>\n<ul>\n<li>@After가 선언된 메서드는 @Test 메서드가 실행된 후 실행된다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@BeforeClass</code></p>\n<ul>\n<li>@BeforeClass 어노테이션은 @Test 메서드보다 먼저 한번만 수행되어야 할 경우에 사용된다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@AfterClass</code></p>\n<ul>\n<li>@AfterClass 어노테이션은 @Test 메서드보다 나중에 한번만 수행되어야 할 경우에 사용된다.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>JUnit4와 Junit5는 테스트 어노테이션이 서로 다르다.</p>\n<p>: 해당글 참고 예정 : <a href=\"https://pureainu.tistory.com/190\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://pureainu.tistory.com/190</a></p>\n</blockquote>\n<h3 id=\"자주-사용하는-junit-메서드\"><a href=\"#%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-junit-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>자주 사용하는 JUnit 메서드</h3>\n<table>\n<thead>\n<tr>\n<th>메서드</th>\n<th>기능</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>assertEquals(a,b)</strong></td>\n<td>객체 a, b의 값이 일치하는 지 확인</td>\n</tr>\n<tr>\n<td>assertArrayEquals(a,b)</td>\n<td>배열 a, b의 값이 일치하는 지 확인</td>\n</tr>\n<tr>\n<td>assertSame(a,b)</td>\n<td>객체 a, b가 같은 객체인지를 확인 <br/> 두 객체의 레퍼런스가 동일한지 확인</td>\n</tr>\n<tr>\n<td>assertTrue(a)</td>\n<td>조건 a가 참인가를 확인</td>\n</tr>\n<tr>\n<td><strong>assertNotNull(a)</strong></td>\n<td>객체 a가 null이 아님을 확인</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<h2 id=\"springt-test-어노테이션\"><a href=\"#springt-test-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Springt-Test 어노테이션</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">@RunWith(SpringJUnit4ClassRunner.class)</code></p>\n<ul>\n<li>@RunWith 어노테이션을 사용함으로써, JUnit에 내장된 러너를 사용하는 대신 어노테이션에 정의된 러너 클래스를 사용</li>\n<li>JUnit 프레임워크의 테스트 실행방법을 확장할 때 사용하는 어노테이션이다.</li>\n<li>@RunWith를 사용하기 위해선 JUnit 실행에 필요한 SpringJUnit4ClassRunner 클래스를 상속받은 @RunWith(SpringRunner.class)를 꼭 붙여서 사용해야 한다.</li>\n<li>@RunWith 어노테이션은 각각의 테스트 별로 객체가 생성되더라도 싱글톤(Singletone)의 ApplicationContext를 보장한다.</li>\n<li>@RunWith 어노테이션은 JUnit4에서 주로 사용하는 것으로 알고 있고, JUnit5의 경우에는 @ExtendWith를 사용한다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@ContextConfiguration</code></p>\n<ul>\n<li>스프링 빈(Bean) 설정 파일의 위치를 지정할 때 사용하는 어노테이션이다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@Autowired</code></p>\n<ul>\n<li>스프링 DI에서 사용하는 어노테이션이다.</li>\n<li>해당 변수에 자동으로 빈(Bean)을 매핑해준다.</li>\n<li>스프링 빈(Bean) 설정 파일을 읽기 위해 GenericXmlApplicatoinContext를 사용할 필요가 없다</li>\n<li>변수, setter 메서드, 생성자, 일반 메서드에 적용 가능하다.</li>\n<li>의존하는 객체를 주입할 때는 주로 Type을 사용한다.</li>\n<li><property>, <constructer-arg> 태그와 동일한 역할을 한다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@SpringBootTest</code></p>\n<ul>\n<li>통합 테스트를 제공하는 기본적인 스프링 부트 테스트 어노테이션이다.</li>\n<li>여러 단위의 테스트를 하나의 통합된 테스트로 수행할 때 적합한 어노테이션이다.</li>\n<li>만능 테스트 어노테이션으로 하고 싶은 모든 테스트를 수행할 수 있다.</li>\n<li>애플리케이션에 설정된 빈을 모두 로드하기 때문에 규모가 클 수록 느려지는 단점이 있다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@WebMvcTest</code></p>\n<ul>\n<li>MVC를 위한 테스트 어노테이션이다.</li>\n<li>웹에서 테스트하기 힘든 Controller를 테스트하는 데 적합하고 웹 상의 요청 또는 응답에 대해 테스트할 수 있다.</li>\n<li>@WebMvcTest를 사용하면 MVC 관련 설정인 어노테이션만 불러오기 때문에 @SpringBootTest보다 가벼운 테스트가 가능</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@DataJpaTest</code></p>\n<ul>\n<li>JPA 관련 테스트 설정만 로드하는 어노테이션이다.</li>\n<li>데이터 소스의 설정이 정상적인지 JPA를 사용하여 데이터를 제대로 CRUD 하는지 테스트가 가능하다.</li>\n<li>@Entity 어노테이션을 스캔하여 Spring Data JPA 저장소를 구성한다.</li>\n<li>실제 데이터 베이스 공간을 사용하지 않고, 내장형 데이터 베이스 공간을 사용하여 테스트하기 때문에 JPA 테스트 이후 실제 데이터 베이스가 변경 되었는지 걱정할 필요가 없다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@RestClientTest</code></p>\n<ul>\n<li>REST 관련 테스트를 도와주는 어노테이션이다.</li>\n<li>REST 통신의 데이터 형식으로 주로 사용되는 JSON 형식에 대해서 제대로 응답을 반환하는지 등을 테스트 한다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">@Json Test</code></p>\n<ul>\n<li>JSON 테스트를 지원하는 어노테이션이다.</li>\n<li>@JsonTest 어노테이션은 JSON의 직렬화와 역직렬화를 수행하는 라이브러리인 Gson과 Jackson API 테스트를 제공한다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리.</h2>\n<p>다음과 같이 스프링 테스트에서 사용하는 어노테이션에 대해서 간단하게 정리하였다.</p>\n<p>이후에는 mock과 mockito에 대해서 작성해보아야 겠다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://donghun.dev/Spring-Boot-Test-Keywrod-one\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://donghun.dev/Spring-Boot-Test-Keywrod-one</a></li>\n<li><a href=\"https://epthffh.tistory.com/entry/Junit%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%8B%A8%EC%9C%84%ED%85%8C%EC%8A%A4%ED%8A%B8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://epthffh.tistory.com/entry/Junit을-이용한-단위테스트</a></li>\n<li><a href=\"https://shlee0882.tistory.com/202\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://shlee0882.tistory.com/202</a></li>\n<li><a href=\"https://pureainu.tistory.com/190\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://pureainu.tistory.com/190</a></li>\n</ul>\n"}},{"node":{"title":"[Springboot API] Springboot with AWS : Springboot 시작하기","path":"/01-springboot-aws/","date":"28. September 2020","timeToRead":1,"description":" 'Springboot AWS'의 첫번째 게시글입니다. ","content":"<h1 id=\"springboot-시작하기\"><a href=\"#springboot-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Springboot 시작하기</h1>\n<h2 id=\"intellij\"><a href=\"#intellij\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Intellij.</h2>\n<h3 id=\"intellij가-이클립스보다-더-좋은-이유\"><a href=\"#intellij%EA%B0%80-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4%EB%B3%B4%EB%8B%A4-%EB%8D%94-%EC%A2%8B%EC%9D%80-%EC%9D%B4%EC%9C%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Intellij가 이클립스보다 더 좋은 이유</h3>\n<ul>\n<li>강력한 추천 기능 (Smart Completion)</li>\n<li>다양한 리팩토링과 디버깅 기능</li>\n<li>이클립스 Git에 비해 높은 자유도</li>\n<li>프로젝트 시작시, 인덱싱을 통해 파일을 비롯한 자원들에 대한 빠른 검색 속도</li>\n<li>HTML, CSS, JS, XML에 대한 강력한 기능 지원</li>\n<li>자바, 스프링 부트 버전업에 맞춘 빠른 업데이트 등</li>\n</ul>\n<h3 id=\"좀-더-intellij에-대해-알고-싶은-경우\"><a href=\"#%EC%A2%80-%EB%8D%94-intellij%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EA%B3%A0-%EC%8B%B6%EC%9D%80-%EA%B2%BD%EC%9A%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>좀 더 Intellij에 대해 알고 싶은 경우.</h3>\n<ul>\n<li><a href=\"http://bit.ly/2zSt3ie\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">젯브레인 한국 사용자 모임</a></li>\n<li><a href=\"https://jojoldu.tistory.com/category/IDE\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">책 저자 블로그</a></li>\n<li><a href=\"http://bit.ly/2xZLQHc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">인프런 인텔리제이 가이드</a></li>\n</ul>\n<p>설치는 생략함.</p>\n<p>(추후 작성예정)</p>\n"}},{"node":{"title":"[Springboot API] Springboot REST API : REST API 보안 적용","path":"/05-springboot-restapi/","date":"21. September 2020","timeToRead":7,"description":" 'Springboot REST API'의 다섯번째 게시글입니다. ","content":"<h1 id=\"rest-api-보안-적용\"><a href=\"#rest-api-%EB%B3%B4%EC%95%88-%EC%A0%81%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST API 보안 적용</h1>\n<br/>\n<h2 id=\"account-도메인-추가\"><a href=\"#account-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%B6%94%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Account 도메인 추가</h2>\n<h3 id=\"oauth2로-인증을-하려면-일단-account-부터\"><a href=\"#oauth2%EB%A1%9C-%EC%9D%B8%EC%A6%9D%EC%9D%84-%ED%95%98%EB%A0%A4%EB%A9%B4-%EC%9D%BC%EB%8B%A8-account-%EB%B6%80%ED%84%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>OAuth2로 인증을 하려면 일단 Account 부터</h3>\n<ul>\n<li>id</li>\n<li>email</li>\n<li>password</li>\n<li>roels</li>\n</ul>\n<h3 id=\"accountroles\"><a href=\"#accountroles\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>AccountRoles</h3>\n<ul>\n<li>ADMIN, USER</li>\n</ul>\n<h3 id=\"jpa-맵핑\"><a href=\"#jpa-%EB%A7%B5%ED%95%91\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JPA 맵핑</h3>\n<ul>\n<li>@Table(“Users”)</li>\n</ul>\n<h3 id=\"jpa-enumeration-collection-mapping\"><a href=\"#jpa-enumeration-collection-mapping\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JPA enumeration collection mapping</h3>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@ElementCollection</span><span class=\"token punctuation\">(</span>fetch <span class=\"token operator\">=</span> <span class=\"token class-name\">FetchType</span><span class=\"token punctuation\">.</span>EAGER<span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Enumerated</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnumType</span><span class=\"token punctuation\">.</span>STRING<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AccountRole</span><span class=\"token punctuation\">></span></span> roles<span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"event에-owner-추가\"><a href=\"#event%EC%97%90-owner-%EC%B6%94%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event에 owner 추가</h3>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@ManyToOne</span>\n    <span class=\"token class-name\">Account</span> manager<span class=\"token punctuation\">;</span></code></pre>\n<br/>\n<h2 id=\"스프링-시큐리티\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티</h2>\n<h3 id=\"스프링-시큐리티-1\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티</h3>\n<ul>\n<li>웹 시큐리티 (Filter 기반 시큐리티)</li>\n<li>메소드 시큐리티 </li>\n<li>\n<p>이 둘 다 Security Interceptor를 사용합니다.</p>\n<ul>\n<li>리소스에 접근을 허용할 것이냐 말것이냐를 결정하는 로직이 들어있음.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/93766241-19958000-fc51-11ea-82da-7b4f7b41a230.png\" alt=\"image\"></p>\n<h3 id=\"의존성-추가\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%B6%94%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>의존성 추가</h3>\n<pre class=\"language-xml\"><code class=\"language-xml\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.security.oauth.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-security-oauth2-autoconfigure<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.1.0.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<ul>\n<li>\n<p>테스트 다 깨짐 (401 Unauthorized)</p>\n<ul>\n<li>깨지는 이유는 스프링 부트가 제공하는 스프링 시큐리티 기본 설정 때문.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"예외-테스트\"><a href=\"#%EC%98%88%EC%99%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>예외 테스트</h2>\n<ol>\n<li>@Test(expected)</li>\n</ol>\n<p>예외 타입만 확인 가능</p>\n<ol start=\"2\">\n<li>try-catch</li>\n</ol>\n<p>예외 타입과 메시지 확인 가능.\n하지만 코드가 다소 복잡.</p>\n<ol start=\"3\">\n<li>@Rule ExpectedException</li>\n</ol>\n<p>코드는 간결하면서 예외 타입과 메시지 모두 확인 가능</p>\n<br/>\n<h2 id=\"스프링-시큐리티-기본-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 기본 설정</h2>\n<h3 id=\"시큐리티-필터를-적용하기-않음\"><a href=\"#%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%ED%95%84%ED%84%B0%EB%A5%BC-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%95%8A%EC%9D%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>시큐리티 필터를 적용하기 않음...</h3>\n<ul>\n<li>/docs/index.html</li>\n</ul>\n<h3 id=\"로그인-없이-접근-가능\"><a href=\"#%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%97%86%EC%9D%B4-%EC%A0%91%EA%B7%BC-%EA%B0%80%EB%8A%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>로그인 없이 접근 가능</h3>\n<ul>\n<li>GET /api/events</li>\n<li>GET /api/events/{id}</li>\n</ul>\n<h3 id=\"로그인-해야-접근-가능\"><a href=\"#%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%95%B4%EC%95%BC-%EC%A0%91%EA%B7%BC-%EA%B0%80%EB%8A%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>로그인 해야 접근 가능</h3>\n<ul>\n<li>나머지 다...</li>\n<li>POST /api/events</li>\n<li>PUT /api/events/{id{</li>\n<li>...</li>\n</ul>\n<h3 id=\"스프링-시큐리티-oauth-20\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-oauth-20\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 OAuth 2.0</h3>\n<ul>\n<li>\n<p>AuthorizationServer: OAuth2 토큰 발행(/oauth/token) 및 토큰 인증(/oauth/authorize)</p>\n<ul>\n<li>Oder 0 (리소스 서버 보다 우선 순위가 높다.)</li>\n</ul>\n</li>\n<li>\n<p>ResourceServer: 리소스 요청 인증 처리 (OAuth 2 토큰 검사)</p>\n<ul>\n<li>Oder 3 (이 값은 현재 고칠 수 없음)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"스프링-시큐리티-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 설정</h3>\n<ul>\n<li>@EnableWebSecurity</li>\n<li>@EnableGlobalMethodSecurity</li>\n<li>extends WebSecurityConfigurerAdapter</li>\n<li>PasswordEncoder: PasswordEncoderFactories.createDelegatingPassworkEncoder()</li>\n<li>TokenStore: InMemoryTokenStore</li>\n<li>AuthenticationManagerBean</li>\n<li>\n<p>configure(AuthenticationManagerBuidler auth)</p>\n<ul>\n<li>userDetailsService</li>\n<li>passwordEncoder</li>\n</ul>\n</li>\n<li>\n<p>configure(HttpSecurity http)</p>\n<ul>\n<li>/docs/**: permitAll</li>\n</ul>\n</li>\n<li>\n<p>configure(WebSecurty web)</p>\n<ul>\n<li>\n<p>ignore</p>\n<ul>\n<li>/docs/**</li>\n<li>/favicon.ico</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>PathRequest.toStaticResources() 사용하기</li>\n</ul>\n<br/>\n<h2 id=\"스프링-시큐리티-폼-인증-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%ED%8F%BC-%EC%9D%B8%EC%A6%9D-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 폼 인증 설정</h2>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        http\n            <span class=\"token punctuation\">.</span><span class=\"token function\">anonymous</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">mvcMatchers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/api/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>익명 사용자 사용 활성화</li>\n<li>\n<p>폼 인증 방식 활성화</p>\n<ul>\n<li>스프링 시큐리티가 기본 로그인 페이지 제공</li>\n</ul>\n</li>\n<li>\n<p>요청에 인증 적용</p>\n<ul>\n<li>/api 이하 모든 GET 요청에 인증이 필요함. (permitAll()을 사용하여 인증이 필요없이 익명으로 접근이 가능케 할 수 있음)</li>\n<li>그밖에 모은 요청도 인증이 필요함.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-시큐리티-oauth-2-설정--인증-서버-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-oauth-2-%EC%84%A4%EC%A0%95--%EC%9D%B8%EC%A6%9D-%EC%84%9C%EB%B2%84-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 OAuth 2 설정 : 인증 서버 설정</h2>\n<pre class=\"language-xml\"><code class=\"language-xml\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.security<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-security-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>${spring-security.version}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"토큰-발행-테스트\"><a href=\"#%ED%86%A0%ED%81%B0-%EB%B0%9C%ED%96%89-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토큰 발행 테스트</h3>\n<ul>\n<li>User</li>\n<li>Client</li>\n<li>\n<p>POST /oauth/token</p>\n<ul>\n<li>HTTP Basic 인증 헤더 (클라이언트 아이디 + 클라이언트 시크릿)</li>\n<li>\n<p>요청 매개변수 (MultiValuMap&#x3C;String, String>)</p>\n<ul>\n<li>grant_type: password</li>\n<li>username</li>\n<li>password</li>\n</ul>\n</li>\n<li>응답에 access_token 나오는지 확인</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"grant-type-password\"><a href=\"#grant-type-password\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Grant Type: Password</h3>\n<ul>\n<li>Granty Type: 토큰 받아오는 방법</li>\n<li>서비스 오너가 만든 클라이언트에서 사용하는 Grant Type</li>\n<li><a href=\"https://developer.okta.com/blog/2018/06/29/what-is-the-oauth2-password-grant\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.okta.com/blog/2018/06/29/what-is-the-oauth2-password-grant</a></li>\n</ul>\n<h3 id=\"authorizationserver-설정\"><a href=\"#authorizationserver-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>AuthorizationServer 설정</h3>\n<ul>\n<li>@EnableAuthorizationServer</li>\n<li>extends AuthorizationServerConfigurerAdapter</li>\n<li>\n<p>configure(AuthorizationServerSecurityConfigurer security)</p>\n<ul>\n<li>PassswordEncode 설정</li>\n</ul>\n</li>\n<li>\n<p>configure(ClientDetailsServiceConfigurer clients)</p>\n<ul>\n<li>클라이언트 설정</li>\n<li>\n<p>grantTypes</p>\n<ul>\n<li>password</li>\n<li>refresh_token</li>\n</ul>\n</li>\n<li>scopes</li>\n<li>secret / name</li>\n<li>accessTokenValiditySeconds</li>\n<li>refreshTokenValiditySeconds</li>\n</ul>\n</li>\n<li>\n<p>AuthorizationServerEndpointsConfigurer</p>\n<ul>\n<li>tokenStore</li>\n<li>authenticationMaanger</li>\n<li>userDetailsService</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-시큐리티-oauth-2-설정-리소스-서버-설정\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-oauth-2-%EC%84%A4%EC%A0%95-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%84%9C%EB%B2%84-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 OAuth 2 설정: 리소스 서버 설정</h2>\n<h3 id=\"테스트-수정\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%88%98%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 수정</h3>\n<ul>\n<li>GET을 제외하고 모두 엑세스 토큰을 가지고 요청 하도록 테스트 수정</li>\n</ul>\n<h3 id=\"resourceserver-설정\"><a href=\"#resourceserver-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ResourceServer 설정</h3>\n<ul>\n<li>@EnableResourceServer</li>\n<li>extends ResourceServerConfigurerAdapter</li>\n<li>\n<p>configure(ResourceServerSecurityConfigurer resources)</p>\n<ul>\n<li>리소스 ID</li>\n</ul>\n</li>\n<li>\n<p>configure(HttpSecurity http)</p>\n<ul>\n<li>anonymous</li>\n<li>GET /api/** : permit all</li>\n<li>POST /api/**: authenticated</li>\n<li>PUT /api/**: authenticated</li>\n<li>\n<p>에러 처리</p>\n<ul>\n<li>accessDeniedHandler(OAuth2AccessDeniedHandler())</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"문자열을-외부-설정으로-빼내기\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84-%EC%99%B8%EB%B6%80-%EC%84%A4%EC%A0%95%EC%9C%BC%EB%A1%9C-%EB%B9%BC%EB%82%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>문자열을 외부 설정으로 빼내기</h2>\n<h3 id=\"기본-유저-만들기\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%9C%A0%EC%A0%80-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>기본 유저 만들기</h3>\n<ul>\n<li>\n<p>ApplicationRunner</p>\n<ul>\n<li>Admin</li>\n<li>User</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"외부-설정으로-기본-유저와-클라이언트-정보-빼내기\"><a href=\"#%EC%99%B8%EB%B6%80-%EC%84%A4%EC%A0%95%EC%9C%BC%EB%A1%9C-%EA%B8%B0%EB%B3%B8-%EC%9C%A0%EC%A0%80%EC%99%80-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%A0%95%EB%B3%B4-%EB%B9%BC%EB%82%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>외부 설정으로 기본 유저와 클라이언트 정보 빼내기</h3>\n<ul>\n<li>@ConfigurationProperties</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-api-점검\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-api-%EC%A0%90%EA%B2%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 API 점검</h2>\n<h3 id=\"토큰-발급-받기\"><a href=\"#%ED%86%A0%ED%81%B0-%EB%B0%9C%EA%B8%89-%EB%B0%9B%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토큰 발급 받기</h3>\n<ul>\n<li>POST /oauth/token</li>\n<li>\n<p>BASIC authentication 헤더</p>\n<ul>\n<li>client Id(myApp) + client secret(pass)</li>\n</ul>\n</li>\n<li>\n<p>요청 본문 폼</p>\n<ul>\n<li>username: admin@email.com</li>\n<li>password: admin</li>\n<li>grant_type: password</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/94319205-1ab60c80-ffc5-11ea-8fa6-9bcce9e4434a.png\" alt=\"image\"></p>\n<h3 id=\"토큰-갱신하기\"><a href=\"#%ED%86%A0%ED%81%B0-%EA%B0%B1%EC%8B%A0%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토큰 갱신하기</h3>\n<ul>\n<li>POST /oauth/token</li>\n<li>\n<p>BASIC authentication 헤더</p>\n<ul>\n<li>client Id(myApp) + client secret(pass)</li>\n</ul>\n</li>\n<li>\n<p>요청 본문 폼</p>\n<ul>\n<li>token: 처음에 발급받았던 refersh 토큰</li>\n<li>grant_type: refresh_token</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/94319161-06720f80-ffc5-11ea-98cf-d9826e6c834a.png\" alt=\"image\"></p>\n<h3 id=\"이벤트-목록-조회-api\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%AA%A9%EB%A1%9D-%EC%A1%B0%ED%9A%8C-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 목록 조회 API</h3>\n<ul>\n<li>\n<p>로그인 했을 때</p>\n<ul>\n<li>이벤트 생성 링크 제공</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"이벤트-조회\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A1%B0%ED%9A%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 조회</h3>\n<ul>\n<li>\n<p>로그인 했을 때</p>\n<ul>\n<li>이벤트 Manager인 경우에는 이벤트 수정 링크 제공</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-시큐리티-현재-사용자\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%ED%98%84%EC%9E%AC-%EC%82%AC%EC%9A%A9%EC%9E%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 시큐리티 현재 사용자</h2>\n<h3 id=\"securitycontext\"><a href=\"#securitycontext\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SecurityContext</h3>\n<ul>\n<li>자바 ThreadLocal 기반 구현으로 인증 정보를 담고 있다.</li>\n<li>인증 정보 꺼내는 방법:\n<code class=\"language-text\">Authentication authentication = SecurityContextHolder.getContext().getAuthentication();</code></li>\n</ul>\n<h3 id=\"authenticationprincipal-springsecurityuser-user\"><a href=\"#authenticationprincipal-springsecurityuser-user\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@AuthenticationPrincipal spring.security.User user</h3>\n<ul>\n<li>인증 안한 경우에 null</li>\n<li>인증 한 경우에는 username과 authorities 참조 가능</li>\n</ul>\n<h3 id=\"springsecurityuser를-상속받는-클래스를-구현하면\"><a href=\"#springsecurityuser%EB%A5%BC-%EC%83%81%EC%86%8D%EB%B0%9B%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EB%A9%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>spring.security.User를 상속받는 클래스를 구현하면</h3>\n<ul>\n<li>도메인 User를 받을 수 있다.</li>\n<li>@AuthenticationPrincipa <code class=\"language-text\">me.whiteship.user.</code>UserAdapter </li>\n<li>Adatepr.getUser().getId()</li>\n</ul>\n<h3 id=\"spel을-사용하면\"><a href=\"#spel%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SpEL을 사용하면</h3>\n<ul>\n<li>@AuthenticationPrincipa(expression=”account”) <code class=\"language-text\">me.whiteship.user.Account</code></li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>PARAMETER<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@AuthenticationPrincipal</span><span class=\"token punctuation\">(</span>expression <span class=\"token operator\">=</span> <span class=\"token string\">\"account\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">CurrentUser</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"커스텀-애노테이션을-만들면\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%95%A0%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EC%9D%84-%EB%A7%8C%EB%93%A4%EB%A9%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>커스텀 애노테이션을 만들면</h3>\n<ul>\n<li>@CurrentUser Account account</li>\n<li>엇? 근데 인증 안하고 접근하면..?</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\">expression <span class=\"token operator\">=</span> <span class=\"token string\">\"#this == 'anonymousUser' ? null : account\"</span></code></pre>\n<ul>\n<li>현재 인증 정보가 anonymousUse 인 경우에는 null을 보내고 아니면 “account”를 꺼내준다.</li>\n</ul>\n<h3 id=\"조회-api-개선\"><a href=\"#%EC%A1%B0%ED%9A%8C-api-%EA%B0%9C%EC%84%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>조회 API 개선</h3>\n<ul>\n<li>현재 조회하는 사용자가 owner인 경우에 update 링크 추가 (HATEOAS)</li>\n</ul>\n<h3 id=\"수정-api-개선\"><a href=\"#%EC%88%98%EC%A0%95-api-%EA%B0%9C%EC%84%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>수정 API 개선</h3>\n<ul>\n<li>현재 사용자가 이벤트 owner가 아닌 경우에 403 에러 발생</li>\n</ul>\n<br/>\n<h2 id=\"events-api-개선-출력값-제한하기\"><a href=\"#events-api-%EA%B0%9C%EC%84%A0-%EC%B6%9C%EB%A0%A5%EA%B0%92-%EC%A0%9C%ED%95%9C%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Events API 개선: 출력값 제한하기</h2>\n<h3 id=\"생성-api-개선\"><a href=\"#%EC%83%9D%EC%84%B1-api-%EA%B0%9C%EC%84%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>생성 API 개선</h3>\n<ul>\n<li>Event owner 설정</li>\n<li>응답에서 owner의 id만 보내 줄 것.</li>\n</ul>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test 3PISM1Ju\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test event\"</span><span class=\"token punctuation\">,</span>\n...\n  <span class=\"token property\">\"free\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"eventStatus\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"DRAFT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"owner\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"email\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"keesun@email.com\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"password\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"{bcrypt}$2a$10$3z/rHmeYsKpoOQR3aUq38OmZjZNsrGfRZxSnmpLfL3lpLxjD5/JZ6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"roles\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"USER\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ADMIN\"</span> <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre>\n<ul>\n<li>JsonSerializer<User> 구현</li>\n<li>@JsonSerialize(using) 설정</li>\n</ul>\n<br/>\n<h2 id=\"깨진-테스트-살펴보기\"><a href=\"#%EA%B9%A8%EC%A7%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>깨진 테스트 살펴보기</h2>\n<h3 id=\"eventcontrollertestsupdateevent\"><a href=\"#eventcontrollertestsupdateevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EventControllerTests.updateEvent()</h3>\n<ul>\n<li>깨지는 이유</li>\n<li>해결 방법</li>\n</ul>\n<h3 id=\"eventcontrollertestsgetevent\"><a href=\"#eventcontrollertestsgetevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EventControllerTests.getEvent()</h3>\n<ul>\n<li>깨지는 이유</li>\n<li>해결 방법</li>\n</ul>\n<h3 id=\"demoapplicationtests\"><a href=\"#demoapplicationtests\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DemoApplicationTests</h3>\n<ul>\n<li>깨지는 이유</li>\n<li>해결 방법</li>\n</ul>\n<br/>\n<h2 id=\"스프링-부트-225-버전으로-업데이트\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-225-%EB%B2%84%EC%A0%84%EC%9C%BC%EB%A1%9C-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 2.2.5 버전으로 업데이트</h2>\n<h3 id=\"현재-스프링-부트-최신-권장-버전은-225\"><a href=\"#%ED%98%84%EC%9E%AC-%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%EC%B5%9C%EC%8B%A0-%EA%B6%8C%EC%9E%A5-%EB%B2%84%EC%A0%84%EC%9D%80-225\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>현재 스프링 부트 최신 권장 버전은 2.2.5</h3>\n<ul>\n<li><a href=\"https://spring.io/projects/spring-boot\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://spring.io/projects/spring-boot</a></li>\n</ul>\n<h3 id=\"스프링-부트-버전을-올리면-바뀔-수-있는-일\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%EB%B2%84%EC%A0%84%EC%9D%84-%EC%98%AC%EB%A6%AC%EB%A9%B4-%EB%B0%94%EB%80%94-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%9D%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 버전을 올리면 바뀔 수 있는 일</h3>\n<ul>\n<li>기본 (자동) 설정 값 변경</li>\n<li>의존성 변경</li>\n<li>기존 애플리케이션의 동작이 바뀌거나 컴파일 에러가 발생할 수 있다.</li>\n</ul>\n<h3 id=\"스프링-부트-22-주요-변화\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-22-%EC%A3%BC%EC%9A%94-%EB%B3%80%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 2.2.* 주요 변화</h3>\n<ul>\n<li>JUnit 4 -> JUnit 5</li>\n<li>스프링 HATEOAS 버전이 올라가면서 스프링 HATEOAS의 API가 바뀌었다.</li>\n</ul>\n<h3 id=\"스프링-hateoas\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-hateoas\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 HATEOAS</h3>\n<ul>\n<li>Resource -> EntityModel</li>\n<li>Resources -> CollectionModel</li>\n<li>PagedResrouces -> PagedModel</li>\n<li>ResourceSupport -> RepresentationModel</li>\n<li>assembler.toResource -> assembler.toModel</li>\n<li>org.springframework.hateoas.mvc.ControllerLinkBuilder -> org.springframework.hateoas.server.mvc.WebMvcLinkBuilder</li>\n<li>MediaTypes 중에 (UTF8)인코딩이 들어간 상수 제거.</li>\n</ul>\n<h3 id=\"junit-5\"><a href=\"#junit-5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JUnit 5</h3>\n<ul>\n<li>org.junit -> org.junit.jupiter</li>\n<li>@Ignore -> @Disabled</li>\n<li>@Before, @After -> @BeforeEach, @AfterEach</li>\n<li>@TestDescription (우리가 만든거) -> @DisplayName</li>\n</ul>\n<h3 id=\"스프링-mvc-변경\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-mvc-%EB%B3%80%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 MVC 변경</h3>\n<ul>\n<li>MediaType 중에 (UTF8)인코딩이 들어간 상수 deprecation.</li>\n</ul>\n"}},{"node":{"title":"[Springboot API] Springboot REST API : 이벤트 조회 및 수정 REST API 개발","path":"/04-springboot-restapi/","date":"20. September 2020","timeToRead":2,"description":" 'Springboot REST API'의 네번째 게시글입니다. ","content":"<h1 id=\"이벤트-조회-및-수정-rest-api-개발\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A1%B0%ED%9A%8C-%EB%B0%8F-%EC%88%98%EC%A0%95-rest-api-%EA%B0%9C%EB%B0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 조회 및 수정 REST API 개발</h1>\n<br/>\n<h2 id=\"이벤트-목록-조회-api-구현\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%AA%A9%EB%A1%9D-%EC%A1%B0%ED%9A%8C-api-%EA%B5%AC%ED%98%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 목록 조회 API 구현</h2>\n<h3 id=\"페이징-정렬-어떻게-하지\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%95-%EC%A0%95%EB%A0%AC-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%98%EC%A7%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>페이징, 정렬 어떻게 하지?</h3>\n<ul>\n<li>스프링 데이터 JPA가 제공하는 Pageable</li>\n</ul>\n<h3 id=\"pageevent에-안에-들어있는-event-들은-리소스로-어떻게-변경할까\"><a href=\"#pageevent%EC%97%90-%EC%95%88%EC%97%90-%EB%93%A4%EC%96%B4%EC%9E%88%EB%8A%94-event-%EB%93%A4%EC%9D%80-%EB%A6%AC%EC%86%8C%EC%8A%A4%EB%A1%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%B3%80%EA%B2%BD%ED%95%A0%EA%B9%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Page<Event>에 안에 들어있는 Event 들은 리소스로 어떻게 변경할까?</h3>\n<ul>\n<li>하나씩 순회하면서 직접 EventResource로 맵핑을 시킬까..</li>\n<li>PagedResourceAssembler<T> 사용하기</li>\n</ul>\n<h3 id=\"테스트-할-때-pageable-파라미터-제공하는-방법\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EB%95%8C-pageable-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 때 Pageable 파라미터 제공하는 방법</h3>\n<ul>\n<li>page: 0부터 시작</li>\n<li>size: 기본값 20</li>\n<li>sort: property,property(,ASC|DESC)</li>\n</ul>\n<h3 id=\"테스트-할-것\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>Event 목록 Page 정보와 함께 받기</p>\n<ul>\n<li>content[0].id 확인</li>\n<li>pageable 경로 확인</li>\n</ul>\n</li>\n<li>\n<p>Sort과 Paging 확인</p>\n<ul>\n<li>30개를 만들고, 10개 사이즈로 두번째 페이지 조회하면 이전, 다음 페이지로 가는 링크가 있어야 한다.</li>\n<li>이벤트 이름순으로 정렬하기</li>\n<li>page 관련 링크</li>\n</ul>\n</li>\n<li>\n<p>Event를 EventResource로 변환해서 받기</p>\n<ul>\n<li>각 이벤트 마다 self</li>\n</ul>\n</li>\n<li>\n<p>링크 확인</p>\n<ul>\n<li>self</li>\n<li>profile</li>\n<li>(create)</li>\n</ul>\n</li>\n<li>문서화</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-조회-api\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A1%B0%ED%9A%8C-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 조회 API</h2>\n<h3 id=\"테스트-할-것-1\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<p>조회하는 이벤트가 있는 경우 이벤트 리소스 확인</p>\n<ul>\n<li>\n<p>링크</p>\n<ul>\n<li>self</li>\n<li>profile</li>\n<li>(update)</li>\n</ul>\n</li>\n<li>이벤트 데이터</li>\n</ul>\n<p>조회하는 이벤트가 없는 경우 404 응답 확인 </p>\n<br/>\n<h2 id=\"이벤트-수정-api\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%88%98%EC%A0%95-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 수정 API</h2>\n<h3 id=\"테스트-할-것-2\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<p>수정하려는 이벤트가 없는 경우 404 NOT_FOUND</p>\n<p>입력 데이터 (데이터 바인딩)가 이상한 경우에 400 BAD_REQUEST</p>\n<p>도메인 로직으로 데이터 검증 실패하면 400 BAD_REQUEST\n(권한이 충분하지 않은 경우에 403 FORBIDDEN)</p>\n<p>정상적으로 수정한 경우에 이벤트 리소스 응답</p>\n<ul>\n<li>200 OK</li>\n<li>링크</li>\n<li>수정한 이벤트 데이터</li>\n</ul>\n<br/>\n<h2 id=\"테스트-코드-리팩토링\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 코드 리팩토링</h2>\n<h3 id=\"여러-컨트롤러-간의-중복-코드-제거하기\"><a href=\"#%EC%97%AC%EB%9F%AC-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EA%B0%84%EC%9D%98-%EC%A4%91%EB%B3%B5-%EC%BD%94%EB%93%9C-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>여러 컨트롤러 간의 중복 코드 제거하기</h3>\n<ul>\n<li>클래스 상속을 사용하는 방법</li>\n<li>@Ignore 애노테이션으로 테스트로 간주되지 않도록 설정</li>\n</ul>\n"}},{"node":{"title":"[Springboot API] Springboot REST API : HATEOAS와 Self-Describtive Message 적용","path":"/03-springboot-restapi/","date":"14. September 2020","timeToRead":5,"description":" 'Springboot REST API'의 세번째 게시글입니다. ","content":"<h1 id=\"hateoas와-self-describtive-message\"><a href=\"#hateoas%EC%99%80-self-describtive-message\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HATEOAS와 Self-Describtive Message</h1>\n<br/>\n<h2 id=\"스프링-hateoas-소개\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-hateoas-%EC%86%8C%EA%B0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 HATEOAS 소개</h2>\n<h3 id=\"스프링-hateoas\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-hateoas\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 HATEOAS</h3>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-hateoas/docs/current/reference/html/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.spring.io/spring-hateoas/docs/current/reference/html/</a></li>\n<li>\n<p>링크 만드는 기능</p>\n<ul>\n<li>문자열 가지고 만들기</li>\n<li>컨트롤러와 메소드로 만들기</li>\n</ul>\n</li>\n<li>\n<p>리소스 만드는 기능</p>\n<ul>\n<li>리소스: 데이터 + 링크</li>\n</ul>\n</li>\n<li>\n<p>링크 찾아주는 기능</p>\n<ul>\n<li>Traverson</li>\n<li>LinkDiscoverers</li>\n</ul>\n</li>\n<li>\n<p>링크</p>\n<ul>\n<li>HREF</li>\n<li>\n<p>REL</p>\n<ul>\n<li>self</li>\n<li>profile</li>\n<li>update-event</li>\n<li>query-events</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<img src=\"https://user-images.githubusercontent.com/42582516/93029741-704ef880-f658-11ea-8e27-81d626a05ed8.png\" alt=\"image\" style=\"zoom:30%;\" />\n<br/>\n<h2 id=\"스프링-hateoas-적용\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-hateoas-%EC%A0%81%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 HATEOAS 적용</h2>\n<h3 id=\"evnetresource-만들기\"><a href=\"#evnetresource-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EvnetResource 만들기</h3>\n<ul>\n<li>\n<p>extends ResourceSupport의 문제</p>\n<ul>\n<li>@JsonUnwrapped로 해결</li>\n<li>extends Resource<T>로 해결</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"테스트-할-것\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>응답에 HATEOA와 profile 관련 링크가 있는지 확인.</p>\n<ul>\n<li>self (view)</li>\n<li>update (만든 사람은 수정할 수 있으니까)</li>\n<li>events (목록으로 가는 링크)</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-rest-docs-소개\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-rest-docs-%EC%86%8C%EA%B0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 REST Docs 소개</h2>\n<p><a href=\"https://docs.spring.io/spring-restdocs/docs/2.0.2.RELEASE/reference/html5/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.spring.io/spring-restdocs/docs/2.0.2.RELEASE/reference/html5/</a></p>\n<h3 id=\"rest-docs-코딩\"><a href=\"#rest-docs-%EC%BD%94%EB%94%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST Docs 코딩</h3>\n<ul>\n<li>andDo(document(“doc-name”, snippets))</li>\n<li>\n<p>snippets</p>\n<ul>\n<li>links()</li>\n<li>requestParameters() + parameterWithName()</li>\n<li>pathParameters() + parametersWithName()</li>\n<li>requestParts() + partWithname()</li>\n<li>requestPartBody()</li>\n<li>requestPartFields()</li>\n<li>requestHeaders() + headerWithName()</li>\n<li>requestFields() + fieldWithPath()</li>\n<li>responseHeaders() + headerWithName()</li>\n<li>responseFields() + fieldWithPath()</li>\n<li>...</li>\n</ul>\n</li>\n<li>Relaxed*</li>\n<li>\n<p>Processor</p>\n<ul>\n<li>preprocessRequest(prettyPrint())</li>\n<li>preprocessResponse(prettyPrint())</li>\n<li>...</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"constraint\"><a href=\"#constraint\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Constraint</h3>\n<p><a href=\"https://github.com/spring-projects/spring-restdocs/blob/v2.0.2.RELEASE/samples/rest-notes-spring-hateoas/src/test/java/com/example/notes/ApiDocumentation.java\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/spring-projects/spring-restdocs/blob/v2.0.2.RELEASE/samples/rest-notes-spring-hateoas/src/test/java/com/example/notes/ApiDocumentation.java</a></p>\n<br/>\n<h2 id=\"스프링-rest-docs-적용\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-rest-docs-%EC%A0%81%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 REST Docs 적용</h2>\n<h3 id=\"rest-docs-자동-설정\"><a href=\"#rest-docs-%EC%9E%90%EB%8F%99-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST Docs 자동 설정</h3>\n<ul>\n<li>@AutoConfigureRestDocs</li>\n</ul>\n<h3 id=\"restdocmockmvc-커스터마이징\"><a href=\"#restdocmockmvc-%EC%BB%A4%EC%8A%A4%ED%84%B0%EB%A7%88%EC%9D%B4%EC%A7%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>RestDocMockMvc 커스터마이징</h3>\n<ul>\n<li>RestDocsMockMvcConfigurationCustomizer 구현한 빈 등록</li>\n<li>@TestConfiguration</li>\n</ul>\n<h3 id=\"테스트-할-것-1\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>API 문서 만들기</p>\n<ul>\n<li>요청 본문 문서화</li>\n<li>응답 본문 문서화</li>\n<li>\n<p>링크 문서화</p>\n<ul>\n<li>profile 링크 추가</li>\n</ul>\n</li>\n<li>응답 헤더 문서화</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-rest-docs-링크-req-res-필드와-헤더-문서화\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-rest-docs-%EB%A7%81%ED%81%AC-req-res-%ED%95%84%EB%93%9C%EC%99%80-%ED%97%A4%EB%8D%94-%EB%AC%B8%EC%84%9C%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 REST Docs: 링크, (Req, Res) 필드와 헤더 문서화</h2>\n<h3 id=\"요청-필드-문서화\"><a href=\"#%EC%9A%94%EC%B2%AD-%ED%95%84%EB%93%9C-%EB%AC%B8%EC%84%9C%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>요청 필드 문서화</h3>\n<ul>\n<li>requestFields() + fieldWithPath()</li>\n<li>responseFields() + fieldWithPath()</li>\n<li>requestHeaders() + headerWithName()</li>\n<li>responseHedaers() + headerWithName()</li>\n<li>links() + linkWithRel()</li>\n</ul>\n<h3 id=\"테스트-할-것-2\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>API 문서 만들기</p>\n<ul>\n<li>요청 본문 문서화</li>\n<li>응답 본문 문서화</li>\n<li>\n<p>링크 문서화</p>\n<ul>\n<li>self</li>\n<li>query-events</li>\n<li>update-event</li>\n<li>profile 링크 추가</li>\n</ul>\n</li>\n<li>요청 헤더 문서화</li>\n<li>요청 필드 문서화</li>\n<li>응답 헤더 문서화</li>\n<li>응답 필드 문서화</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"relaxed-접두어\"><a href=\"#relaxed-%EC%A0%91%EB%91%90%EC%96%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Relaxed 접두어</h3>\n<ul>\n<li>장점: 문서 일부분만 테스트 할 수 있다.</li>\n<li>단점: 정확한 문서를 생성하지 못한다.</li>\n</ul>\n<br/>\n<h2 id=\"스프링-rest-docs-문서-빌드\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-rest-docs-%EB%AC%B8%EC%84%9C-%EB%B9%8C%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 REST Docs 문서 빌드</h2>\n<h3 id=\"스프링-rest-docs\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-rest-docs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 REST Docs</h3>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-restdocs/docs/2.0.2.RELEASE/reference/html5/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.spring.io/spring-restdocs/docs/2.0.2.RELEASE/reference/html5/</a></li>\n<li>pom.xml에 메이븐 플러그인 설정</li>\n</ul>\n<pre class=\"language-xml\"><code class=\"language-xml\">            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.asciidoctor<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>asciidoctor-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.5.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>generate-docs<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>phase</span><span class=\"token punctuation\">></span></span>prepare-package<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>phase</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>process-asciidoc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>backend</span><span class=\"token punctuation\">></span></span>html<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>backend</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>doctype</span><span class=\"token punctuation\">></span></span>book<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>doctype</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.restdocs<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-restdocs-asciidoctor<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.0.2.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>maven-resources-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>copy-resources<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>phase</span><span class=\"token punctuation\">></span></span>prepare-package<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>phase</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>copy-resources<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>outputDirectory</span><span class=\"token punctuation\">></span></span>\n                                ${project.build.outputDirectory}/static/docs\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>outputDirectory</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span><span class=\"token punctuation\">></span></span>\n                                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>directory</span><span class=\"token punctuation\">></span></span>\n                                        ${project.build.directory}/generated-docs\n                                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>directory</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resource</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span></code></pre>\n<ul>\n<li>\n<p>템플릿 파일 추가</p>\n<ul>\n<li>src/main/asciidoc/index.adoc</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"문서-생성하기\"><a href=\"#%EB%AC%B8%EC%84%9C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>문서 생성하기</h3>\n<ul>\n<li>\n<p>mvn package</p>\n<ul>\n<li>test</li>\n<li>prepare-package :: process-asciidoc</li>\n<li>prepare-package :: copy-resources</li>\n</ul>\n</li>\n<li>\n<p>문서 확인</p>\n<ul>\n<li>/docs/index.html</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"테스트-할-것-3\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>API 문서 만들기</p>\n<ul>\n<li>요청 본문 문서화</li>\n<li>응답 본문 문서화</li>\n<li>\n<p>링크 문서화</p>\n<ul>\n<li>self</li>\n<li>query-events</li>\n<li>update-event</li>\n<li>profile 링크 추가</li>\n</ul>\n</li>\n<li>요청 헤더 문서화</li>\n<li>요청 필드 문서화</li>\n<li>응답 헤더 문서화</li>\n<li>응답 필드 문서화</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"postgresql-적용\"><a href=\"#postgresql-%EC%A0%81%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>PostgreSQL 적용</h2>\n<p>테스트 할 때는 계속 H2를 사용해도 좋지만 애플리케이션 서버를 실행할 때 PostgreSQL을 사용하도록 변경하자.</p>\n<p>/scripts.md 참고</p>\n<ol>\n<li>PostgreSQL 드라이버 의존성 추가</li>\n</ol>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.postgresql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>postgresql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<ol start=\"2\">\n<li>도커로 PostgreSQL 컨테이너 실행</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">docker run --name ndb -p <span class=\"token number\">5432</span>:5432 -e <span class=\"token assign-left variable\">POSTGRES_PASSWORD</span><span class=\"token operator\">=</span>pass -d postgres</code></pre>\n<ol start=\"3\">\n<li>도커 컨테이너에 들어가보기</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">docker <span class=\"token builtin class-name\">exec</span> -i -t ndb <span class=\"token function\">bash</span>\n<span class=\"token function\">su</span> - postgres\npsql -d postgres -U postgres\n<span class=\"token punctuation\">\\</span>l\n<span class=\"token punctuation\">\\</span>dt</code></pre>\n<ol start=\"4\">\n<li>데이터소스 설정</li>\n</ol>\n<pre class=\"language-xml\"><code class=\"language-xml\">application.properties\nspring.datasource.username=postgres\nspring.datasource.password=pass\nspring.datasource.url=jdbc:postgresql://localhost:5432/postgres\nspring.datasource.driver-class-name=org.postgresql.Driver</code></pre>\n<ol start=\"5\">\n<li>하이버네이트 설정</li>\n</ol>\n<p><strong>application.properties</strong></p>\n<pre class=\"language-xml\"><code class=\"language-xml\">spring.jpa.hibernate.ddl-auto=create-drop\nspring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true\nspring.jpa.properties.hibernate.format_sql=true\nlogging.level.org.hibernate.SQL=DEBUG\nlogging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE</code></pre>\n<h3 id=\"애플리케이션-설정과-테스트-설정-중복-어떻게-줄일-것인가\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%A4%EC%A0%95%EA%B3%BC-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%84%A4%EC%A0%95-%EC%A4%91%EB%B3%B5-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A4%84%EC%9D%BC-%EA%B2%83%EC%9D%B8%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>애플리케이션 설정과 테스트 설정 중복 어떻게 줄일 것인가?</h3>\n<ul>\n<li>프로파일과 @ActiveProfiles 활용</li>\n</ul>\n<p><strong>application-test.properties</strong></p>\n<pre class=\"language-xml\"><code class=\"language-xml\">spring.datasource.username=sa\nspring.datasource.password=\nspring.datasource.url=jdbc:h2:mem:testdb\nspring.datasource.driver-class-name=org.h2.Driver\n\nspring.datasource.hikari.jdbc-url=jdbc:h2:mem:testdb\n\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</code></pre>\n<br/>\n<h2 id=\"인덱스-핸들러-만들기\"><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4-%ED%95%B8%EB%93%A4%EB%9F%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>인덱스 핸들러 만들기</h2>\n<h3 id=\"인덱스-핸들러\"><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4-%ED%95%B8%EB%93%A4%EB%9F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>인덱스 핸들러</h3>\n<ul>\n<li>다른 리소스에 대한 링크 제공</li>\n<li>문서화</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResourceSupport</span> <span class=\"token function\">root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ResourceSupport</span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResourceSupport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        index<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token function\">linkTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EventController</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withRel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"events\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"테스트-컨트롤러-리팩토링\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 컨트롤러 리팩토링</h3>\n<ul>\n<li>중복 코드 제거</li>\n</ul>\n<h3 id=\"에러-리소스\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%A6%AC%EC%86%8C%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>에러 리소스</h3>\n<ul>\n<li>인덱스로 가는 링크 제공</li>\n</ul>\n"}},{"node":{"title":"[Springboot API] Springboot REST API : 이벤트 생성 API 개발","path":"/02-springboot-restapi/","date":"10. September 2020","timeToRead":6,"description":" 'Springboot REST API'의 두번째 게시글입니다. ","content":"<h1 id=\"이벤트-생성-api-개발\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B0%9C%EB%B0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 개발</h1>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--이벤트-api-테스트-클래스-생성\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EC%9D%B4%EB%B2%A4%ED%8A%B8-api-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 이벤트 API 테스트 클래스 생성</h2>\n<h3 id=\"스프링-부트-슬라이스-테스트\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EC%8A%A4-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 슬라이스 테스트</h3>\n<ul>\n<li>\n<p>@WebMvcTest</p>\n<ul>\n<li>MockMvc 빈을 자동 설정 해준다. 따라서 그냥 가져와서 쓰면 됨.</li>\n<li>웹 관련 빈만 등록해 준다. (슬라이스)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mockmvc스프링\"><a href=\"#mockmvc%EC%8A%A4%ED%94%84%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MockMvc스프링</h3>\n<ul>\n<li>MVC 테스트 핵심 클래스</li>\n<li>웹 서버를 띄우지 않고도 스프링 MVC (DispatcherServlet)가 요청을 처리하는 과정을 확인할 수 있기 때문에 컨트롤러 테스트용으로 자주 쓰임.</li>\n</ul>\n<h3 id=\"테스트-할-것입력\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83%EC%9E%85%EB%A0%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것입력</h3>\n<ul>\n<li>\n<p>값들을 전달하면 JSON 응답으로 201이 나오는지 확인.</p>\n<ul>\n<li>Location 헤더에 생성된 이벤트를 조회할 수 있는 URI 담겨 있는지 확인.</li>\n<li>id는 DB에 들어갈 때 자동생성된 값으로 나오는지 확인</li>\n</ul>\n</li>\n<li>\n<p>입력값으로 누가 id나 eventStatus, offline, free 이런 데이터까지 같이 주면?</p>\n<ul>\n<li>Bad_Request로 응답 vs <strong>받기로 한 값 이외는 무시</strong></li>\n</ul>\n</li>\n<li>\n<p>입력 데이터가 이상한 경우 Bad_Request로 응답</p>\n<ul>\n<li>입력값이 이상한 경우 에러</li>\n<li>비즈니스 로직으로 검사할 수 있는 에러</li>\n<li>에러 응답 메시지에 에러에 대한 정보가 있어야 한다.</li>\n</ul>\n</li>\n<li>\n<p>비즈니스 로직 적용 됐는지 응답 메시지 확인</p>\n<ul>\n<li>offline과 free 값 확인</li>\n</ul>\n</li>\n<li>\n<p>응답에 HATEOA와 profile 관련 링크가 있는지 확인.</p>\n<ul>\n<li>self (view)</li>\n<li>update (만든 사람은 수정할 수 있으니까)</li>\n<li>events (목록으로 가는 링크)</li>\n</ul>\n</li>\n<li>\n<p>API 문서 만들기</p>\n<ul>\n<li>요청 문서화</li>\n<li>응답 문서화</li>\n<li>링크 문서화</li>\n<li>profile 링크 추가</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--201-응답-받기\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--201-%EC%9D%91%EB%8B%B5-%EB%B0%9B%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 201 응답 받기</h2>\n<h3 id=\"restcontroller\"><a href=\"#restcontroller\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@RestController</h3>\n<ul>\n<li>@ResponseBody를 모든 메소드에 적용한 것과 동일하다.</li>\n</ul>\n<h3 id=\"responseentity를-사용하는-이유\"><a href=\"#responseentity%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ResponseEntity를 사용하는 이유</h3>\n<ul>\n<li>응답 코드, 헤더, 본문 모두 다루기 편한 API</li>\n</ul>\n<h3 id=\"location-uri-만들기\"><a href=\"#location-uri-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Location URI 만들기</h3>\n<ul>\n<li>HATEOS가 제공하는 linkTo(), methodOn() 사용</li>\n</ul>\n<h3 id=\"객체를-json으로-변환\"><a href=\"#%EA%B0%9D%EC%B2%B4%EB%A5%BC-json%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>객체를 JSON으로 변환</h3>\n<ul>\n<li>ObjectMapper 사용</li>\n</ul>\n<h3 id=\"테스트-할-것\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력값들을 전달하면 JSON 응답으로 201이 나오는지 확인.</p>\n<ul>\n<li>Location 헤더에 생성된 이벤트를 조회할 수 있는 URI 담겨 있는지 확인.</li>\n<li>id는 DB에 들어갈 때 자동생성된 값으로 나오는지 확인</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--eventrepository-구현\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--eventrepository-%EA%B5%AC%ED%98%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : EventRepository 구현</h2>\n<h3 id=\"스프링-데이터-jpa\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-jpa\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 데이터 JPA</h3>\n<ul>\n<li>JpaRepository 상속 받아 만들기</li>\n</ul>\n<h3 id=\"enum을-jpa-맵핑시-주의할-것\"><a href=\"#enum%EC%9D%84-jpa-%EB%A7%B5%ED%95%91%EC%8B%9C-%EC%A3%BC%EC%9D%98%ED%95%A0-%EA%B2%83\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Enum을 JPA 맵핑시 주의할 것</h3>\n<ul>\n<li>@Enumerated(EnumType.STRING)</li>\n</ul>\n<h3 id=\"mockbean\"><a href=\"#mockbean\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@MockBean</h3>\n<ul>\n<li>Mockito를 사용해서 mock 객체를 만들고 빈으로 등록해 줌.</li>\n<li>(주의) 기존 빈을 테스트용 빈이 대체 한다.</li>\n</ul>\n<h3 id=\"테스트-할-것-1\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력값들을 전달하면 JSON 응답으로 201이 나오는지 확인.</p>\n<ul>\n<li>Location 헤더에 생성된 이벤트를 조회할 수 있는 URI 담겨 있는지 확인.</li>\n<li>id는 DB에 들어갈 때 자동생성된 값으로 나오는지 확인</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--입력값-제한하기\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EC%9E%85%EB%A0%A5%EA%B0%92-%EC%A0%9C%ED%95%9C%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 입력값 제한하기</h2>\n<h3 id=\"입력값-제한\"><a href=\"#%EC%9E%85%EB%A0%A5%EA%B0%92-%EC%A0%9C%ED%95%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>입력값 제한</h3>\n<ul>\n<li>id 또는 입력 받은 데이터로 계산해야 하는 값들은 입력을 받지 않아야 한다.</li>\n<li>EventDto 적용</li>\n</ul>\n<h3 id=\"dto---도메인-객체로-값-복사\"><a href=\"#dto---%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B0%9D%EC%B2%B4%EB%A1%9C-%EA%B0%92-%EB%B3%B5%EC%82%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DTO -> 도메인 객체로 값 복사</h3>\n<ul>\n<li>ModelMapper</li>\n</ul>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.modelmapper<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>modelmapper<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.3.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"통합-테스트로-전환\"><a href=\"#%ED%86%B5%ED%95%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A1%9C-%EC%A0%84%ED%99%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>통합 테스트로 전환</h3>\n<ul>\n<li>\n<p>@WebMvcTest 빼고 다음 애노테이션 추가</p>\n<ul>\n<li>@SpringBootTest</li>\n<li>@AutoConfigureMockMvc</li>\n</ul>\n</li>\n<li>Repository @MockBean 코드 제거</li>\n</ul>\n<h3 id=\"테스트-할-것-2\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력값으로 누가 id나 eventStatus, offline, free 이런 데이터까지 같이 주면?</p>\n<ul>\n<li>Bad_Request로 응답 vs 받기로 한 값 이외는 무시  </li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--입력값-이외에-에러-발생\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EC%9E%85%EB%A0%A5%EA%B0%92-%EC%9D%B4%EC%99%B8%EC%97%90-%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 입력값 이외에 에러 발생</h2>\n<h3 id=\"objectmapper-커스터마이징\"><a href=\"#objectmapper-%EC%BB%A4%EC%8A%A4%ED%84%B0%EB%A7%88%EC%9D%B4%EC%A7%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ObjectMapper 커스터마이징</h3>\n<ul>\n<li>spring.jackson.deserialization.fail-on-unknown-properties=true</li>\n</ul>\n<h3 id=\"테스트-할-것-3\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력값으로 누가 id나 eventStatus, offline, free 이런 데이터까지 같이 주면?</p>\n<ul>\n<li>Bad_Request로 응답 vs 받기로 한 값 이외는 무시</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--bad-request-처리하기\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--bad-request-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : Bad Request 처리하기</h2>\n<h3 id=\"valid와-bindingresult-또는-errors\"><a href=\"#valid%EC%99%80-bindingresult-%EB%98%90%EB%8A%94-errors\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@Valid와 BindingResult (또는 Errors)</h3>\n<ul>\n<li>BindingResult는 항상 @Valid 바로 다음 인자로 사용해야 함. (스프링 MVC)</li>\n<li>@NotNull, @NotEmpty, @Min, @Max, ... 사용해서 입력값 바인딩할 때 에러 확인할 수 있음</li>\n</ul>\n<h3 id=\"도메인-validator-만들기\"><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-validator-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>도메인 Validator 만들기</h3>\n<ul>\n<li>Validator 인터페이스 없이 만들어도 상관없음</li>\n</ul>\n<h3 id=\"테스트-설명-용-애노테이션-만들기\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%84%A4%EB%AA%85-%EC%9A%A9-%EC%95%A0%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 설명 용 애노테이션 만들기</h3>\n<ul>\n<li>@Target, @Retention</li>\n</ul>\n<h3 id=\"테스트-할-것-4\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력 데이터가 이상한 경우 Bad_Request로 응답</p>\n<ul>\n<li>입력값이 이상한 경우 에러</li>\n<li>비즈니스 로직으로 검사할 수 있는 에러</li>\n<li>에러 응답 메시지에 에러에 대한 정보가 있어야 한다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--bad-request-응답-본문-만들기\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--bad-request-%EC%9D%91%EB%8B%B5-%EB%B3%B8%EB%AC%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : Bad Request 응답 본문 만들기</h2>\n<h3 id=\"커스텀-json-serializer-만들기\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-json-serializer-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>커스텀 JSON Serializer 만들기</h3>\n<ul>\n<li>extends JsonSerializer<T> (Jackson JSON 제공)</li>\n<li>@JsonComponent (스프링 부트 제공)</li>\n</ul>\n<h3 id=\"bindingerror\"><a href=\"#bindingerror\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>BindingError</h3>\n<ul>\n<li>FieldError 와 GlobalError (ObjectError)가 있음</li>\n<li>objectName</li>\n<li>defaultMessage</li>\n<li>code</li>\n<li>field</li>\n<li>rejectedValue</li>\n</ul>\n<h3 id=\"테스트-할-것-5\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>입력 데이터가 이상한 경우 Bad_Request로 응답</p>\n<ul>\n<li>입력값이 이상한 경우 에러</li>\n<li>비즈니스 로직으로 검사할 수 있는 에러</li>\n<li><strong>에러 응답 메시지에 에러에 대한 정보가 있어야 한다.</strong></li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--비즈니스-로직-적용\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81-%EC%A0%81%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 비즈니스 로직 적용</h2>\n<h3 id=\"테스트-할-것-6\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A0-%EA%B2%83-6\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 할 것</h3>\n<ul>\n<li>\n<p>비즈니스 로직 적용 됐는지 응답 메시지 확인</p>\n<ul>\n<li>offline과 free 값 확인</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"이벤트-생성-api-구현--매개변수를-이용한-테스트\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84--%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 생성 API 구현 : 매개변수를 이용한 테스트</h2>\n<h3 id=\"테스트-코드-리팩토링\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>테스트 코드 리팩토링</h3>\n<ul>\n<li>테스트에서 중복 코드 제거</li>\n<li>매개변수만 바꿀 수 있으면 좋겠는데?</li>\n<li>JUnitParams</li>\n</ul>\n<h3 id=\"junitparams\"><a href=\"#junitparams\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JUnitParams</h3>\n<ul>\n<li><a href=\"https://github.com/Pragmatists/JUnitParams\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/Pragmatists/JUnitParams</a></li>\n</ul>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/pl.pragmatists/JUnitParams --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>pl.pragmatists<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>JUnitParams<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.1.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n"}},{"node":{"title":"[Springboot API] Springboot REST API : 시작하기","path":"/01-springboot-restapi/","date":"7. September 2020","timeToRead":8,"description":" 'Springboot REST API'의 첫번째 게시글입니다. ","content":"<h1 id=\"springboot-api-시작하기\"><a href=\"#springboot-api-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Springboot API 시작하기.</h1>\n<p><a href=\"https://drive.google.com/file/d/0B-4fgYvMaU-zYVlVUzB2ZnpuRU8ySFVpV2h3ZjRmd096azFN/view\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">강의 자료</a></p>\n<p><a href=\"https://docs.google.com/document/d/1GFo3W6XxqhxDVVqxiSEtqkuVCX93Tdb3xzINRtTIx10/edit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">수업 자료</a></p>\n<p><a href=\"https://gitlab.com/whiteship/natural\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">코드</a></p>\n<br/>\n<h2 id=\"rest-api\"><a href=\"#rest-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST API</h2>\n<h3 id=\"api\"><a href=\"#api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>API</h3>\n<ul>\n<li><strong>A</strong>pplication <strong>P</strong>rogramming <strong>I</strong>nterface</li>\n</ul>\n<h3 id=\"rest\"><a href=\"#rest\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST</h3>\n<ul>\n<li><strong>RE</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer</li>\n<li>인터넷 상의 시스템 간의 상호 운용성(interoperability)을 제공하는 방법중 하나</li>\n<li>시스템 제각각의 독립적인 진화를 보장하기 위한 방법</li>\n<li>REST API: REST 아키텍처 스타일을 따르는 API</li>\n</ul>\n<h3 id=\"rest-아키텍처-스타일-발표-영상-11분\"><a href=\"#rest-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EC%8A%A4%ED%83%80%EC%9D%BC-%EB%B0%9C%ED%91%9C-%EC%98%81%EC%83%81-11%EB%B6%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST 아키텍처 스타일 (<a href=\"https://www.youtube.com/watch?v=RP_f5dMoHFc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">발표 영상</a> 11분)</h3>\n<ul>\n<li>Client-Server</li>\n<li>Stateless</li>\n<li>Cache</li>\n<li><strong>Uniform Interface</strong></li>\n<li>Layered System</li>\n<li>Code-On-Demand (optional)</li>\n</ul>\n<h3 id=\"uniform-interface-발표-영상-11분-40초\"><a href=\"#uniform-interface-%EB%B0%9C%ED%91%9C-%EC%98%81%EC%83%81-11%EB%B6%84-40%EC%B4%88\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Uniform Interface (발표 영상 11분 40초)</h3>\n<details>\n<summary>상세</summary>\n<div markdown=\"1\">\n<p>Uniform Interface(일관된 인터페이스)란, Resource(URI)에 대한 요청을 통일되고, 한정적으로 수행하는 아키텍처 스타일을 의미합니다. 이것은 요청을 하는 Client가 플랫폼(Android, Ios, Jsp 등) 에 무관하며, 특정 언어나 기술에 종속받지 않는 특징을 의미합니다. 이러한 특징 덕분에 Rest API는 HTTP를 사용하는 모든 플랫폼에서 요청가능하며, Loosely Coupling(느슨한 결함) 형태를 갖게 되었습니다.</p>\n</div>\n</details>\n<ul>\n<li>\n<p>Identification of resources</p>\n<ul>\n<li>리소스가 URI로 식별되면 된다.</li>\n</ul>\n</li>\n<li>\n<p>manipulation of resources through represenations</p>\n<ul>\n<li>리소스를 요청할 때 서버는 리소스를 표현하여 응답한다.</li>\n<li>대표적인 API 예로는 HTML, JSON, XML이 있다. </li>\n<li>\n<p>콘텐츠 협상</p>\n<ul>\n<li>클라이언트가 클라이언트의 요구에 맞는 특정 표현을 요청할 수 있다. </li>\n<li>예를 들어 클라이언트는 리소스의 JSON 표현 또는 리소스의 XML 표현을 요청할 수 있다. </li>\n<li>서버는 그렇게 할 수 있는 경우 이 표현을 제공할 수 있다.</li>\n</ul>\n</li>\n<li>API에서 콘텐츠 협상을 사용하여 여러 클라이언트가 동일한 URL에서 다른 리소스 표현에 액세스할 수 있도록 할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p><strong>self-descrive messages</strong></p>\n<ul>\n<li>클라이언트가 resource를 가지고 어떤 일을 수행할때 필요한 모든 데이터가 응답되어야함.</li>\n<li>보통 안에 profile(docs) 링크를 명시하는식으로 구현.</li>\n</ul>\n</li>\n<li>\n<p><strong>hypermedia as the engine of appliaction state (HATEOAS)</strong></p>\n<ul>\n<li>거의 모든 rest api에서 지키지못함. </li>\n<li>어플리케이션의 상태가 하이퍼링크를 통해서 항상 전이가 되어야함. </li>\n<li>스프링에서는 spring-boot-hateoas 패키지로 좀 편하게 구현 가능.</li>\n</ul>\n</li>\n</ul>\n<details>\n<summary>좋은 API 예시(github API)</summary>\n<div markdown=\"1\">\n<pre class=\"language-xml\"><code class=\"language-xml\">{\n  \"timeline_url\": \"https://github.com/timeline\",\n  \"user_url\": \"https://github.com/{user}\",\n  \"current_user_public_url\": \"https://github.com/octocat\",\n  \"current_user_url\": \"https://github.com/octocat.private?token=abc123\",\n  \"current_user_actor_url\": \"https://github.com/octocat.private.actor?token=abc123\",\n  \"current_user_organization_url\": \"\",\n  \"current_user_organization_urls\": [\n    \"https://github.com/organizations/github/octocat.private.atom?token=abc123\"\n  ],\n  \"security_advisories_url\": \"https://github.com/security-advisories\",\n  \"_links\": {\n    \"timeline\": {\n      \"href\": \"https://github.com/timeline\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"user\": {\n      \"href\": \"https://github.com/{user}\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"current_user_public\": {\n      \"href\": \"https://github.com/octocat\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"current_user\": {\n      \"href\": \"https://github.com/octocat.private?token=abc123\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"current_user_actor\": {\n      \"href\": \"https://github.com/octocat.private.actor?token=abc123\",\n      \"type\": \"application/atom+xml\"\n    },\n    \"current_user_organization\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"current_user_organizations\": [\n      {\n        \"href\": \"https://github.com/organizations/github/octocat.private.atom?token=abc123\",\n        \"type\": \"application/atom+xml\"\n      }\n    ],\n    \"security_advisories\": {\n      \"href\": \"https://github.com/security-advisories\",\n      \"type\": \"application/atom+xml\"\n    }\n  }\n}</code></pre>\n</div>\n</details>\n<h3 id=\"두-문제를-좀-더-자세히-살펴보자-발표-영상-37분-50초\"><a href=\"#%EB%91%90-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%A2%80-%EB%8D%94-%EC%9E%90%EC%84%B8%ED%9E%88-%EC%82%B4%ED%8E%B4%EB%B3%B4%EC%9E%90-%EB%B0%9C%ED%91%9C-%EC%98%81%EC%83%81-37%EB%B6%84-50%EC%B4%88\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>두 문제를 좀 더 자세히 살펴보자. (발표 영상 37분 50초)</h3>\n<ul>\n<li>\n<p>Self-descriptive message</p>\n<ul>\n<li>메시지 스스로 메시지에 대한 설명이 가능해야 한다.</li>\n<li>서버가 변해서 메시지가 변해도 클라이언트는 그 메시지를 보고 해석이 가능하다.</li>\n<li>확장 가능한 커뮤니케이션</li>\n</ul>\n</li>\n<li>\n<p>HATEOAS</p>\n<ul>\n<li>하이퍼미디어(링크)를 통해 애플리케이션 상태 변화가 가능해야 한다.</li>\n<li>링크 정보를 동적으로 바꿀 수 있다. (Versioning 할 필요 없이!)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"self-descriptive-message-해결-방법\"><a href=\"#self-descriptive-message-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Self-descriptive message 해결 방법</h3>\n<ul>\n<li>방법 1: 미디어 타입을 정의하고 IANA에 등록하고 그 미디어 타입을 리소스 리턴할 때 Content-Type으로 사용한다.</li>\n<li>\n<p>방법 2: profile 링크 헤더를 추가한다. (발표 영상 41분 50초)</p>\n<ul>\n<li><a href=\"http://test.greenbytes.de/tech/tc/httplink/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">브라우저들이 아직 스팩 지원을 잘 안해</a></li>\n<li>대안으로 <a href=\"http://stateless.co/hal_specification.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HAL</a>의 링크 데이터에 <a href=\"https://tools.ietf.org/html/draft-wilde-profile-link-04\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">profile 링크</a> 추가</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"hateoas-해결-방법\"><a href=\"#hateoas-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HATEOAS 해결 방법</h3>\n<ul>\n<li>\n<p>방법1: 데이터에 링크 제공</p>\n<ul>\n<li>링크를 어떻게 정의할 것인가? HAL</li>\n</ul>\n</li>\n<li>방법2: 링크 헤더나 Location을 제공</li>\n</ul>\n<br/>\n<h2 id=\"event-rest-api\"><a href=\"#event-rest-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>“Event” REST API</h2>\n<blockquote>\n<p><a href=\"https://gitlab.com/whiteship/natural\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">참고 자료</a></p>\n</blockquote>\n<p>이벤트 등록, 조회 및 수정 API</p>\n<h3 id=\"get-apievents\"><a href=\"#get-apievents\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GET /api/events</h3>\n<h4 id=\"이벤트-목록-조회-rest-api-로그인-안-한-상태\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%AA%A9%EB%A1%9D-%EC%A1%B0%ED%9A%8C-rest-api-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%95%88-%ED%95%9C-%EC%83%81%ED%83%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 목록 조회 REST API (로그인 안 한 상태)</h4>\n<ul>\n<li>\n<p>응답에 보여줘야 할 데이터</p>\n<ul>\n<li>이벤트 목록</li>\n<li>\n<p>링크</p>\n<ul>\n<li>self</li>\n<li>profile: 이벤트 목록 조회 API 문서로 링크</li>\n<li>get-an-event: 이벤트 하나 조회하는 API 링크</li>\n<li>next: 다음 페이지 (optional)</li>\n<li>prev: 이전 페이지 (optional)</li>\n</ul>\n</li>\n<li>\n<p>문서?</p>\n<ul>\n<li>스프링 REST Docs로 만들 예정</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"이벤트-목록-조회-rest-api-로그인-한-상태\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%AA%A9%EB%A1%9D-%EC%A1%B0%ED%9A%8C-rest-api-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%95%9C-%EC%83%81%ED%83%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트 목록 조회 REST API (로그인 한 상태)</h4>\n<ul>\n<li>\n<p>응답에 보여줘야 할 데이터</p>\n<ul>\n<li>이벤트 목록</li>\n<li>\n<p>링크</p>\n<ul>\n<li>self</li>\n<li>profile: 이벤트 목록 조회 API 문서로 링크</li>\n<li>get-an-event: 이벤트 하나 조회하는 API 링크</li>\n<li><strong>create-new-event: 이벤트를 생성할 수 있는 API 링크</strong></li>\n<li>next: 다음 페이지 (optional)</li>\n<li>prev: 이전 페이지 (optional)</li>\n</ul>\n</li>\n<li>\n<p>로그인 한 상태???? (stateless라며..)</p>\n<ul>\n<li>아니, 사실은 Bearer 헤더에 유효한 AccessToken이 들어있는 경우!</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"post-apievents\"><a href=\"#post-apievents\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>POST /api/events</h3>\n<ul>\n<li>이벤트 생성</li>\n</ul>\n<h3 id=\"get-apieventsid\"><a href=\"#get-apieventsid\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GET /api/events/{id}</h3>\n<ul>\n<li>이벤트 하나 조회</li>\n</ul>\n<h3 id=\"put-apieventsid\"><a href=\"#put-apieventsid\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>PUT /api/events/{id}</h3>\n<ul>\n<li>이벤트 수정</li>\n</ul>\n<br/>\n<h2 id=\"events-api-사용-예제\"><a href=\"#events-api-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Events API 사용 예제</h2>\n<ol>\n<li>\n<p>(토큰 없이) 이벤트 목록 조회</p>\n<ul>\n<li>create 안 보임</li>\n</ul>\n</li>\n<li>access token 발급 받기 (A 사용자 로그인)</li>\n<li>\n<p>(유효한 A 토큰 가지고) 이벤트 목록 조회</p>\n<ul>\n<li>create event 보임</li>\n</ul>\n</li>\n<li>(유효한 A 토큰 가지고) 이벤트 만들기</li>\n<li>\n<p>(토큰 없이) 이벤트 조회</p>\n<ul>\n<li>update 링크 안 보임</li>\n</ul>\n</li>\n<li>\n<p>(유효한 A 토큰 가지고) 이벤트 조회</p>\n<ul>\n<li>update 링크 보임</li>\n</ul>\n</li>\n<li>access token 발급 받기 (B 사용자 로그인)</li>\n<li>\n<p>(유효한 B 토큰 가지고) 이벤트 조회</p>\n<ul>\n<li>update 안 보임</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"rest-api-테스트-클라이언트-애플리케이션\"><a href=\"#rest-api-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>REST API 테스트 클라이언트 애플리케이션</h3>\n<ul>\n<li>\n<p>크롬 플러그인</p>\n<ul>\n<li>Restlet</li>\n</ul>\n</li>\n<li>\n<p>애플리케이션</p>\n<ul>\n<li>Postman</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"스프링-부트-프로젝트-만들기\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 프로젝트 만들기</h2>\n<h3 id=\"추가할-의존성\"><a href=\"#%EC%B6%94%EA%B0%80%ED%95%A0-%EC%9D%98%EC%A1%B4%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>추가할 의존성</h3>\n<ul>\n<li>Web</li>\n<li>JPA</li>\n<li>HATEOAS</li>\n<li>REST Docs</li>\n<li>H2</li>\n<li>PostgreSQL</li>\n<li>Lombok</li>\n</ul>\n<h3 id=\"자바-버전-11로-시작\"><a href=\"#%EC%9E%90%EB%B0%94-%EB%B2%84%EC%A0%84-11%EB%A1%9C-%EC%8B%9C%EC%9E%91\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>자바 버전 11로 시작</h3>\n<ul>\n<li>자바는 여전히 무료다.</li>\n</ul>\n<h3 id=\"스프링-부트-핵심-원리\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>스프링 부트 핵심 원리</h3>\n<ul>\n<li>의존성 설정 (pom.xml)</li>\n<li>자동 설정 (@EnableAutoConfiguration)</li>\n<li>내장 웹 서버 (의존성과 자동 설정의 일부)</li>\n<li>독립적으로 실행 가능한 JAR (pom.xml의 플러그인)</li>\n</ul>\n<h2 id=\"event-생성-api-구현-비즈니스-로직\"><a href=\"#event-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84-%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 생성 API 구현: 비즈니스 로직</h2>\n<h3 id=\"event-생성-api\"><a href=\"#event-%EC%83%9D%EC%84%B1-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 생성 API</h3>\n<ul>\n<li>\n<p>다음의 입력 값을 받는다.</p>\n<ul>\n<li>name</li>\n<li>description</li>\n<li>beginEnrollmentDateTime</li>\n<li>closeEnrollmentDateTime</li>\n<li>beginEventDateTime</li>\n<li>endEventDateTime</li>\n<li>location (optional) 이게 없으면 온라인 모임</li>\n<li>basePrice (optional) </li>\n<li>maxPrice (optional)</li>\n<li>limitOfEnrollment</li>\n</ul>\n</li>\n</ul>\n<p>basePrice와 maxPrice 경우의 수와 각각의 로직\n| basePrice | maxPrice |                                                              |\n| --------- | -------- | ------------------------------------------------------------ |\n| 0         | 100      | 선착순 등록                                                  |\n| 0         | 0        | 무로                                                         |\n| 100       | 0        | 무제한 경매 (높은 금액 낸 사람이 등록)                       |\n| 100       | 200      | 제한가 선착순 등록<br /><br />처음부터 200을 낸 사람은 선 등록<br /><br />100을 내고 등록할 수 있으나 더 많이 낸 사람에 의해 밀려날 수 있음. |</p>\n<ul>\n<li>\n<p>결과값</p>\n<ul>\n<li>id</li>\n<li>name</li>\n<li>...</li>\n<li>eventStatus: DRAFT, PUBLISHED, ENROLLMENT_STARTED, ...</li>\n<li>offline</li>\n<li>free</li>\n<li>\n<p>_links</p>\n<ul>\n<li>profile (for the self-descriptive message)</li>\n<li>self </li>\n<li>publish</li>\n<li>...</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"event-생성-api-구현-event-도메인-구현\"><a href=\"#event-%EC%83%9D%EC%84%B1-api-%EA%B5%AC%ED%98%84-event-%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B5%AC%ED%98%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event 생성 API 구현: Event 도메인 구현</h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Event</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> beginEnrollmentDateTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> closeEnrollmentDateTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> beginEventDateTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> endEventDateTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> location<span class=\"token punctuation\">;</span> <span class=\"token comment\">// (optional) 이게 없으면 온라인 모임</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> basePrice<span class=\"token punctuation\">;</span> <span class=\"token comment\">// (optional)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> maxPrice<span class=\"token punctuation\">;</span> <span class=\"token comment\">// (optional)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> limitOfEnrollment<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n<p>추가 필드</p>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> offline<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> free<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">EventStatus</span> eventStatus <span class=\"token operator\">=</span> <span class=\"token class-name\">EventStatus</span><span class=\"token punctuation\">.</span>DRAFT<span class=\"token punctuation\">;</span></code></pre>\n<p>EventStatus ENUM 추가</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">EventStatus</span> <span class=\"token punctuation\">{</span>\n\n    DRAFT<span class=\"token punctuation\">,</span> PUBLISHED<span class=\"token punctuation\">,</span> BEGAN_ENROLLMEND<span class=\"token punctuation\">,</span> CLOSED_ENROLLMENT<span class=\"token punctuation\">,</span> STARTED<span class=\"token punctuation\">,</span> ENDED\n\n<span class=\"token punctuation\">}</span></code></pre>\n<p>롬복 애노테이션 추가</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Getter</span> <span class=\"token annotation punctuation\">@Setter</span> <span class=\"token annotation punctuation\">@EqualsAndHashCode</span><span class=\"token punctuation\">(</span>of <span class=\"token operator\">=</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Builder</span> <span class=\"token annotation punctuation\">@NoArgsConstructor</span> <span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Event</span> <span class=\"token punctuation\">{</span></code></pre>\n<ul>\n<li>왜 @EqualsAndHasCode에서 of를 사용하는가</li>\n<li>왜 @Builder를 사용할 때 @AllArgsConstructor가 필요한가</li>\n<li>@Data를 쓰지 않는 이유</li>\n<li>애노테이션 줄일 수 없나</li>\n</ul>\n"}}]}}},"context":{}}