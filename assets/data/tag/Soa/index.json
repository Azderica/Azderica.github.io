{"hash":"a48ca53256831608b767e7c070d0a68a0cbdb4b7","data":{"tag":{"title":"Soa","belongsTo":{"edges":[{"node":{"title":"[Architecture] SOA 패턴이란","path":"/01-architecture-soa/","date":"1. January 2021","timeToRead":6,"description":" SOA 패턴에 대해 정리합니다.","content":"<h1 id=\"soa-패턴을-알아보자\"><a href=\"#soa-%ED%8C%A8%ED%84%B4%EC%9D%84-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SOA 패턴을 알아보자.</h1>\n<p>대용량의 분산 시스템에서 SOA라는 개념에 대해 많이 듣습니다. 서버사이드의 근간이 되는 SOA(Service Oriented Architecture)에 대해 알아보겠습니다.</p>\n<br/>\n<h2 id=\"soa이란\"><a href=\"#soa%EC%9D%B4%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SOA이란?</h2>\n<p>SOA란 Service Oriented Architecture의 약자로서, 이를 해석하면 서비스 지향 아키텍쳐를 의미합니다.</p>\n<p>기존의 애플리케이션의 기능들을 <strong>비지니스적인 의미를 가지는 기능 단위</strong>로 묶어서 표준화된 호출 인터페이스를 통해 서비스로 구현하고, 이 서비스들을 기업의 업무에 따라 어플리케이션을 구성하는 소프트웨어 개발 아키텍처를 의미합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/103477346-5f8de280-4e01-11eb-9500-25672abe187f.png\" alt=\"SoaModel\">\n: <a href=\"https://songii00.github.io/2019/11/17/2019-11-17-CleanArchitecture%20Item%2027/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://songii00.github.io/2019/11/17/2019-11-17-CleanArchitecture%20Item%2027/</a></p>\n<h3 id=\"왜-soa가-주목-받나요\"><a href=\"#%EC%99%9C-soa%EA%B0%80-%EC%A3%BC%EB%AA%A9-%EB%B0%9B%EB%82%98%EC%9A%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>왜 SOA가 주목 받나요?</h3>\n<ul>\n<li>웹 서비스의 등장으로 인해 다양한 기술적 복합도를 낮출 수 있게되어, 기술적인 대안이 등장하였습니다.</li>\n<li>점점 확장되는 독립된 업무 시스템으로 인해 통합에 대한 필요가 생겼습니다.</li>\n<li>기업의 비지니스 속도가 빨라져서 민첩한 대응이 필요해졌습니다.</li>\n</ul>\n<br/>\n<h2 id=\"soa의-기본적인-개념\"><a href=\"#soa%EC%9D%98-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EA%B0%9C%EB%85%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SOA의 기본적인 개념</h2>\n<h3 id=\"서비스란\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>서비스란?</h3>\n<p>서비스란 플랫폼에 종속되지 않는 표준 인터페이스를 통해 비지니스적인 의미를 가지는 기능들을 모아놓은 <strong>소프트웨어 컴포넌트</strong>를 의미합니다.</p>\n<p>ex. 임직원 정보 서비스, 계좌이체 서비스, 상품 주문 서비스</p>\n<p>일반적으로 SOA에서 정의하는 서비스는 <strong>비지니스 서비스</strong>를 의미합니다.</p>\n<p>그 외의 서비스로는 Intermediary 서비스나 Process Centrix 서비스, Application 서비스, Public Enterprise 서비스 등이 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/103477324-1e95ce00-4e01-11eb-8332-46a5dd17f6fb.png\" alt=\"ServiceImage\">\n: <a href=\"https://www.slideshare.net/Byungwook/soa-61487404\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.slideshare.net/Byungwook/soa-61487404</a></p>\n<br/>\n<h2 id=\"soa의-단계적-발전-구조\"><a href=\"#soa%EC%9D%98-%EB%8B%A8%EA%B3%84%EC%A0%81-%EB%B0%9C%EC%A0%84-%EA%B5%AC%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SOA의 단계적 발전 구조.</h2>\n<p>SOA는 시스템의 규모와 업무적 요구 사항에 따라 3단계 순서로 발전됩니다.</p>\n<h3 id=\"fundamental-soa\"><a href=\"#fundamental-soa\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Fundamental SOA</h3>\n<p>기존 시스템들을 서비스화하여, 각 시스템들을 통합하는 단계입니다.</p>\n<ul>\n<li>서비스화와 통합이 중점 전체를 한 시스템화합니다.</li>\n<li>서비스에 대한 조합은, Front End에서 담당합니다.</li>\n<li>비지니스 서비스와 Application서비스로만 구성됩니다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/103477424-230eb680-4e02-11eb-96d1-3d5efa11bd40.png\" alt=\"FundamentalSOA\"></p>\n<h3 id=\"networked-soa\"><a href=\"#networked-soa\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Networked SOA</h3>\n<p>Fundamental SOA의 문제점</p>\n<ul>\n<li>시스템의 크기가 증가됨에 따라 서비스와 Front-End 사이에 연결이 복잡해집니다.</li>\n<li>시스템의 유연성이 떨어집니다.</li>\n<li>관리 및 중앙 통제가 어렵습니다.</li>\n</ul>\n<p>이러한 단점을 해결하기 위해 Networked SOA는 아래의 특징을 가지고 있습니다.</p>\n<ul>\n<li>SOA 시스템의 가운데 서비스 허브를 둬서 서비스의 중앙 통제력 및 유연성을 강화합니다.</li>\n<li>Intermediary 서비스가 ESB(라우팅, 변환, 로깅, 서비스 통제 등)에 위치합니다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/103477468-8d275b80-4e02-11eb-9fc0-d2a37057ac5b.png\" alt=\"NetworkedSOA\"></p>\n<h3 id=\"process-oriented-soa\"><a href=\"#process-oriented-soa\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Process Oriented SOA</h3>\n<p>기존에 Networked SOA에서 발전한 단계입니다.</p>\n<ul>\n<li>비지니스 플로우(Business Flow)가 있을 경우에만 적용됩니다.</li>\n<li>서비스의 조합을 통한 업무의 구현을 BPM을 이용합니다.</li>\n<li>업무 변화에 민첩하게 반응합니다,. (Agile 가능)</li>\n<li>기술조직과 비지니스 조직간의 의사 소통이 원할합니다.</li>\n</ul>\n<br/>\n<h2 id=\"다른-아키텍처와-비교\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EC%99%80-%EB%B9%84%EA%B5%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>다른 아키텍처와 비교</h2>\n<h3 id=\"monolithic-보다-나은점\"><a href=\"#monolithic-%EB%B3%B4%EB%8B%A4-%EB%82%98%EC%9D%80%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Monolithic 보다 나은점</h3>\n<ul>\n<li>출시 일정 단축 및 유연성이 향상됩니다.</li>\n<li>신규 시장에서 레거시 인프라를 활용가능합니다.</li>\n<li>더 효율적인 애자일 개발 방식으로 비용을 아낄 수 있습니다.</li>\n<li>손쉽게 유지관리합니다.</li>\n<li>확정성을 가지고 있습니다.</li>\n<li>안정성이 강화됩니다.</li>\n<li>편리한 이용이 가능합니다.</li>\n</ul>\n<h3 id=\"msa와-비교\"><a href=\"#msa%EC%99%80-%EB%B9%84%EA%B5%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MSA와 비교</h3>\n<p>MSA와 SOA는 유사한 개념 때문에 혼동하기 쉽습니다. 다만 둘의 <strong>근본적인 차이점은 범위</strong>입니다. <strong>SOA는 전사적인 아키텍처 접근 방식이며, MSA는 어플리케이션 개발 팀 내의 구현 전략</strong>입니다.</p>\n<p>또한 각각의 구성 요소와 통신하는 방법에서 차이가 있습니다. <strong>SOA는 ESB를 사용</strong>하는 반면에 <strong>마이크로서비스끼리는 언어의 제약이 없는 API</strong>를 통해 stateless 방식으로 통신합니다. 마이크로서비스의 API에는 언어의 제약이 없기 때문에 개발팀에서 사용하고 싶은 툴을 선택할 수 있습니다. 따라서, 마이크로서비스의 내결합성과 유연성이 더 유연합니다.</p>\n<br/>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리.</h2>\n<p>오늘은 간단하게 SOA개념에 대해 정리해보았습니다. MSA와 혼란스러운 부분이 있었으나 큰 차이를 이해할 수 있었습니다. 해당 게시글의 잘못된 부분을 알려주시면 감사합니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://sarc.io/index.php/miscellaneous/742-soa-service-oriented-architecture\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://sarc.io/index.php/miscellaneous/742-soa-service-oriented-architecture</a></li>\n<li><a href=\"https://www.slideshare.net/Byungwook/soa-61487404\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.slideshare.net/Byungwook/soa-61487404</a></li>\n<li><a href=\"https://www.redhat.com/ko/topics/cloud-native-apps/what-is-service-oriented-architecture\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.redhat.com/ko/topics/cloud-native-apps/what-is-service-oriented-architecture</a></li>\n</ul>\n"}}]}}},"context":{}}