{"hash":"78233c70288de5cc80ede0d03ef7918cb4b6eee5","data":{"post":{"title":"[[VueJS] Vuejs 시작하기","path":"/01-vuejs-starter/","date":"31. July 2020","timeToRead":5,"tags":[{"id":"VueJS","title":"VueJS","path":"/tag/VueJS/"},{"id":"Vue","title":"Vue","path":"/tag/Vue/"},{"id":"Frontend","title":"Frontend","path":"/tag/Frontend/"}],"description":" 'Vuejs 시작하기'의 첫번째 게시글입니다. ","content":"<h1 id=\"vuejs-시작하기\"><a href=\"#vuejs-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue.js 시작하기</h1>\n<br/>\n<h2 id=\"개발-환경-설정\"><a href=\"#%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>개발 환경 설정</h2>\n<p>설치할 프로그램</p>\n<ul>\n<li>Chrome</li>\n<li>Visual Studio Code</li>\n<li>Node.js</li>\n<li>Vue.js Devtools</li>\n</ul>\n<p>관련 코드</p>\n<ul>\n<li><a href=\"https://github.com/joshua1988/learn-vue-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">깃헙 리포지토리 주소</a></li>\n</ul>\n<p>설정 플러그인</p>\n<ul>\n<li>Vetur</li>\n<li>Night Owl</li>\n<li>Material Icon Theme</li>\n<li>Live Server</li>\n<li>ESLint</li>\n<li>Prettier</li>\n<li>Auto Close Tag</li>\n<li>Atom Keymap</li>\n</ul>\n<br/>\n<h2 id=\"vue-이해하기\"><a href=\"#vue-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue 이해하기</h2>\n<h3 id=\"vue-는-무엇인가\"><a href=\"#vue-%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue 는 무엇인가?</h3>\n<p>MVVM 패턴의 뷰모델(ViewModel)레이어에 해당하는 화면(View)단 라이브러리입니다.</p>\n<p>View(DOM) ---> ViewModel, DOM Listeners(Vue) ----> Model(Plain Jav Script Object)</p>\n<p>View(DOM) &#x3C;--- ViewModel, DOM Bindings(Vue) &#x3C;---- Model(Plain Jav Script Object)</p>\n<h3 id=\"단축키\"><a href=\"#%EB%8B%A8%EC%B6%95%ED%82%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>단축키</h3>\n<ol>\n<li><code class=\"language-text\">! + tab</code> 을 누르게 되면, head, body 등을 다 만들어준다.</li>\n<li><code class=\"language-text\">div#{id이름}</code> 을 작성하게 되면 자동완성해준다.</li>\n<li><code class=\"language-text\">script + tab</code> 을 누르게 되면 script을 자동완성해준다.</li>\n<li><code class=\"language-text\">log + tab</code> 을 누르게 되면, console.log 를 완성해준다.</li>\n<li><code class=\"language-text\">tab</code> 은 자동완성이 된다.</li>\n</ol>\n<p>등등 편한 테크가 많다.</p>\n<h3 id=\"reactivity\"><a href=\"#reactivity\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>reactivity</h3>\n<p>데이터의 변화를 인지하여 화면에 그려주는 것.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Object.defineProperty() API 문서 링크</a></p>\n<pre class=\"language-html\"><code class=\"language-html\">// Object.defineProperty('대상 객체', '객체_속성', {\n//    // 정의할 내용\n// })\n\nObject.defineProperty(viewModel, 'str', {\n  // 속성에 접근했을 때의 동작을 정의\n  get: function() {\n    console.log('접근');\n  },\n  // 속성에 값을 할당했을 때의 동작을 정의\n  set: function(newValue) {\n    console.log('할당', newValue);\n    render(newValue);\n  }\n});</code></pre>\n<p>reacitivity의 핵심은 데이터의 변화를 라이브러리에서 감지해서, 알아서 화면을 자동으로 그려주는 것.</p>\n<h3 id=\"라이브러리화\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>라이브러리화?</h3>\n<blockquote>\n<p>아래처럼 할 수 있음</p>\n</blockquote>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">,</span> <span class=\"token string\">'str'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 속성에 접근했을 때의 동작을 정의</span>\n      <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'접근'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 속성에 값을 할당했을 때의 동작을 정의</span>\n      <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'할당'</span><span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    div<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </code></pre>\n<br/>\n<h2 id=\"인스턴스\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>인스턴스</h2>\n<p>인스턴스는 뷰로 개발할 때 필수로 생성해야 하는 코드입니다.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이런식으로 하면 인스턴스를 생성한것.</span></code></pre>\n<h3 id=\"생성자-함수\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>생성자 함수</h3>\n<p>약속 중 하나는 생성자 함수의 맨앞은 대문자로 시작</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Obsolete_Pages/Core_JavaScript_1.5_Guide/Creating_New_Objects/Using_a_Constructor_Function\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN 생성자 함수 설명 문서</a></p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN Prototype 설명 문서</a></p>\n<h3 id=\"인스턴스-옵션-속성\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%98%B5%EC%85%98-%EC%86%8D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>인스턴스 옵션 속성</h3>\n<p>일반적으로 객체를 선언할 때, 리터럴 방법이 더 좋을 때가 많다.(변수 선언하지말고.)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  template<span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  created<span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n  watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>인스턴스에서 사용할 수 있는 속성과 API는 다음과 같다.</p>\n<ul>\n<li>el : 인스턴스가 그려지는 화면의 시작점(특정 HTML 태그)</li>\n<li>template : 화면에 표시할 요소 (HTML, CSS 등)</li>\n<li>data : 뷰의 반응성(Reactivity)가 반영된 데이터 속성</li>\n<li>methods : 화면의 동작과 이벤트 로지ㅡㄹ 제어하는 메서드</li>\n<li>created : 뷰의 라이프 사이클과 관련된 속성</li>\n<li>watch : data에서 정의한 속서이 변화했을 때 추가 동작을 수행할 수 있게 정으히ㅏ는 속성</li>\n<li>이외에도 많은 속성들이 있음...</li>\n</ul>\n<h2 id=\"컴포넌트\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>컴포넌트</h2>\n<p>가장 큰 장점은 재사용이 가능한 것. 화면의 영역을 분리해서 보여주는 것.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-header</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-header</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-footer</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-footer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-header</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-header</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-footer</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-footer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token comment\">// 전역 컴포넌트</span>\n    <span class=\"token comment\">// Vue.component('컴포넌트 이름', 컴포넌트 내용);</span>\n    <span class=\"token maybe-class-name\">Vue</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app-header'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'&lt;h1>Header&lt;/h1>'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      el<span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 지역 컴포넌트 등록 방식</span>\n      components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// '컴포넌트 이름': 컴포넌트 내용,</span>\n        <span class=\"token string\">'app-footer'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          template<span class=\"token operator\">:</span> <span class=\"token string\">'&lt;footer>footer&lt;/footer>'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      el<span class=\"token operator\">:</span> <span class=\"token string\">'#app2'</span><span class=\"token punctuation\">,</span>\n      components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'app-footer'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          template<span class=\"token operator\">:</span> <span class=\"token string\">'&lt;footer>footer&lt;/footer>'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>위를 보면 전역 컴포넌트와 지역 컴포넌트가 있는 것을 확인할 수 있다.</p>\n<h3 id=\"전역-컴포넌트\"><a href=\"#%EC%A0%84%EC%97%AD-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>전역 컴포넌트</h3>\n<p>하나면 들어가기 때문에 <code class=\"language-text\">component</code> 라고 넣어났다.</p>\n<h3 id=\"지역-컴포넌트\"><a href=\"#%EC%A7%80%EC%97%AD-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>지역 컴포넌트</h3>\n<p>여러개가 들어가기 때문에 <code class=\"language-text\">components</code> 라고 붙여놓았다.</p>\n<p>마찬가지로 <code class=\"language-text\">methods</code> 도 비슷한 논리.</p>\n<h3 id=\"컴포넌트와-인스턴트와의-관계\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%ED%8A%B8%EC%99%80%EC%9D%98-%EA%B4%80%EA%B3%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>컴포넌트와 인스턴트와의 관계</h3>\n<p>인스턴트는 여러개를 생성할 수 있다. (필요없을지라도)</p>\n<p>인스턴트를 생성하면 Root가 2개가 생긴다.</p>\n<p>좀더 자세하게 알 수 있는 곳.</p>\n<p><a href=\"http://wiki.sys4u.co.kr/pages/viewpage.action?pageId=8553372\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://wiki.sys4u.co.kr/pages/viewpage.action?pageId=8553372</a></p>\n<p><a href=\"https://develop-designer.tistory.com/3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://develop-designer.tistory.com/3</a></p>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/VuejsLogo.07cc2b7.002474823d306f1f7557fc6051189f5a.png","size":{"width":860,"height":361},"sizes":"(max-width: 860px) 100vw, 860px","srcset":["/assets/static/VuejsLogo.a67b0b2.002474823d306f1f7557fc6051189f5a.png 480w","/assets/static/VuejsLogo.07cc2b7.002474823d306f1f7557fc6051189f5a.png 860w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 860 361' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-84c24112a11bbc8b6c465cbab01d73a1'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-84c24112a11bbc8b6c465cbab01d73a1)' width='860' height='361' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAbCAYAAADMIInqAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFfUlEQVRYw%2bVZ61NTRxTnf%2bnnfukHO36wGqGK8tK2M47WOlUpA74VqRgFA0KIlFGxRctIZXzVx6D1QXjLGwIKKhV5iIgMlvJQiUByE7j3d3p3b3JNwiu8HDpsZufs7j3Z7Pmd356ze%2bMzNDRkHhkZsdtsNsFut7Nqc5E2j77g8Wyi73jqC5PoC9NoCxPMafNivWPWJwiCxUc23kaLtACQfJjnHZ1FVZjNkiSJPowOTgC8QGyy%2bbzWWQCe9x4AN8RkKUoSREiKFEVeXb4LyWVc1YWk6iwEJGbEAG%2beT2WbCwjOvlpdxxcsA9oHe1DW/Rym/heoaGxAWVUdymvqIdjsKgOa2l6huPIhymsfo%2bqfZlT1tqC27wVGpFGu42CMarDMkikBUEBS2pIX%2bnMOgCR/WLu%2bvx3L78dAU6DDsrSD%2bHL1Zny%2b4jtk3rjLn3f39MF/0058sXwDlu4Ig29eHJbcOYSEJ1lwJcB4i/eCPdPSn9MtwJ7J%2b5g3zzblwc%2bowzflKbRGG0krg7YTM/rdgBkpv1/CEv/v4b95JwXfSqCgYgNtKj6F97YhPveo7P38kioSBCXziqJEhWUmsliFMVuCVeZtOYx8NFaWTa0vYbFYMR4bvAVl2gxwBkAm3wmD2PjgJNYW6ikgKx5%2bG8Ppq%2bCtCI2MQ%2bCWPVgRsJVWJ0ZhXVkyabJjkdVhUoyXRC7DZL36v5v43J1d3fTDjuhxKS1Jrm3JOYaLN%2b4ypqlMmgkbZsQAJkTHqm531EKTfYwbuUofBd/gUFq2fhs060LJ78cIBBn1WJ13nMIr0%2bE0nHmfyStZ2XTm/BU%2b79VbRjqdfpm3bTY7l4NDw5wZrDxrbqPON93k6gCbEm/A9B89acS/vf3zywD3QKToMCB2VZ3Hqrx4CsrRw3drBPy%2bDaOV60Lh/5sWIaXJ9LUxDtU9LYo%2biyKKF9H6soP2Hknicx5OPE31Dc8pJS1TNuYZH4uKS6H211106eY9Dk58yjkqrqhVlxgdfxIyMEhKzaAzGVdx8fpdHkinw4RZpUHRERBr%2b9rAjGTG%2bp87As2abfDbvRshRQb4GnWkq7/BPSU5gHNNk3uPGqjheSvtOqznTNbKQJgePeXPIo/9QiVVD2n7/ljOgMtZ92nHoQSFBTKLImOTyVTXQOFR8Sg31c0oKM76JCg5onn845vwzdFRSNEJ8tu7B2svxCCoxEDB%2bUlgKVOhrqQegOQUyOdh3v3pgI55kPf3yYA8bWzh7f0xJyi/tJq27YulO7nFlPuggtpedapr26PV43VXN4YtVr6VtImpJN9u5p8B7gFRMapjsBchBQYEFugp0JiIkHwDaYzHkN5coMQMR%2bZw%2bUE%2bD9sGny3xp9LqR7z/x5%2b3Kfr4Kbp%2bJ5cifj7Os8RBXQrdNhaR7GUwtjyoqEFDYwtiDL9SZe0T5BVXctC27NJS/9v3zjgxvwC4BUSHcRktRdAYY7G%2bKJnW5CXQ5pJUfLBb1Mzhmdqc6Y%2blQzmdqfPmFJbT2czr1OcwZuDDIGVe%2b4vSLlzjUb%2bmrgFvuntwVJ/KtgbKqut4jGDbxJk18IkAcAuIgyNWbCk9g4D8RJK3A7I769RASZ6nnwkONJ5jzizgWV60v2ZpEwPmD7M6FM0KALeA6DAyv%2bsplt7TYn9Nptulx9M4tyOwKI3psxjhzP/KmKhWVlhMKJDjA0%2bro6MOfenTpMHJ7gise0A23tTb6pYppjhbjAFnsuOuNM4haTpGzwsArnLAPixfeESMA85sb26qkczb4gw8Pi8AjAfCRGNzAYKn0Z/0MuTNNvBsL/B3gXMDwFTRfFEB8D97G/wRAJe3wtIieyvMjuaj7H%2bBUVrExcdsNvdYrVazxWJ5L8uBxVSHh4ff/gdM2NX3GxIfRQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}}},"context":{}}