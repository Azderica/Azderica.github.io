{"hash":"0db5b7b00e6830052e821ce8347a6dcc59b0c652","data":{"post":{"title":"[Docker] Docker란?","path":"/00-docker/","date":"19. November 2020","timeToRead":9,"tags":[{"id":"Docker","title":"Docker","path":"/tag/Docker/"},{"id":"Containter","title":"Containter","path":"/tag/Containter/"},{"id":"Backend","title":"Backend","path":"/tag/Backend/"}],"description":" 도커에 대한 기본 내용을 정리한 글입니다. ","content":"<h1 id=\"docker\"><a href=\"#docker\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Docker.</h1>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/99796462-dd0ed380-2b70-11eb-9ed1-88a6f7dbd2be.png\" alt=\"image\"></p>\n<blockquote>\n<p>귀여운 고래 모습을 볼 수 있다.</p>\n</blockquote>\n<p>도커에 대해 사용하고 있으나, 도커에 대한 명확한 정의를 할려고하면, 컨테이너화 기술 정도밖에 기억이 나지않는다.</p>\n<p>그래서 이번 기회에 docker(도커)에 대해서 한 번 정의해볼려고 한다.</p>\n<br/>\n<h2 id=\"docker의-정의\"><a href=\"#docker%EC%9D%98-%EC%A0%95%EC%9D%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Docker의 정의</h2>\n<ul>\n<li>Linux 컨테이너를 만들고 사용할 수 있도록 하는 컨테이너화 기술</li>\n<li>\n<p>컨테이너 기반의 오픈소스 가상화 플랫폼</p>\n<ul>\n<li>PC, AWS, Azure, Google Cloud 등에서 어디든 실행할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"container컨테이너\"><a href=\"#container%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Container(컨테이너)</h2>\n<p>격리된 공간에서 사용되는 프로세스가 동작하는 기술입니다. 컨테이너와 같은 가상화 기술 말고도, VMware 등과의 가상화 기술과는 차이가 있습니다.</p>\n<p>컨테이너는 마이크로서비스, 애플리케이션 등을 실행하는데 필요한 모든 것이 포함되어 있습니다. 컨테이너에 있는 모든 것은 '이미지'라는 모든 라이브러리와 종속성 등을 포함하는 파일에 저장됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/99797425-915d2980-2b72-11eb-8e11-8b7be0b4f30a.png\" alt=\"image\"></p>\n<p>VM과 같이, 추가적인 OS를 설치하여 가상화하는 것은 성능상의 문제가 있습니다. 최근 HVM(CPU 가상화 기술)등을 이용한 기술이 있지만 이 또한 Docker에 비해 성능적 이슈가 존재합니다.</p>\n<p>프로세스를 컨테이너로 격리하여 사용하는 방법은 프로세스만을 격리시키기 때문에 빠르게 동작합니다. CPU나 메모리 모두 필요한 만큼만 추가로 사용하고 성능적으로도 거의 이슈가 없습니다. </p>\n<p>하나의 서버에 여러개의 컨테이너를 돌려도 서로 영향을 미치지 않고, 독립적으로 실행되기 때문에 가벼운 느낌을 받을 수 있습니다. 실행중인 컨테이너에서 명령어를 입력할 수 있고, 사용자를 추가하거나 여러개의 프로세스를 백그라운드로 실행될 수도 있습니다. 더 나아가서 CPU나 메모리 사용량을 제한할 수 있고, 호스트의 특정 포트와 연결하고 호스트의 특정 디렉토리를 내부 디렉토리인 것처럼 사용할 수도 있습니다.</p>\n<br/>\n<h3 id=\"but-무조건-컨테이너가-답인가요\"><a href=\"#but-%EB%AC%B4%EC%A1%B0%EA%B1%B4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EA%B0%80-%EB%8B%B5%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><strong>But, 무조건 컨테이너가 답인가요?</strong></h3>\n<blockquote>\n<p>VM과 Container는 사용시기가 다릅니다.</p>\n</blockquote>\n<h4 id=\"vm이-좀-더-유리할-때\"><a href=\"#vm%EC%9D%B4-%EC%A2%80-%EB%8D%94-%EC%9C%A0%EB%A6%AC%ED%95%A0-%EB%95%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>VM이 좀 더 유리할 때</h4>\n<ul>\n<li>기존, 레거시 및 모놀리식 워크로드를 가져올 때</li>\n<li>위험한 개발 사이클을 분리할 때</li>\n<li>인프라 리소스(네트워크 ,서버, 데이터 등)의 프로비저닝</li>\n<li>다른 OS에서 다른 OS를 실행할 때 (Ex, Linux -> Unix)</li>\n</ul>\n<h4 id=\"컨테이너가-유리할-때\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EA%B0%80-%EC%9C%A0%EB%A6%AC%ED%95%A0-%EB%95%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>컨테이너가 유리할 때</h4>\n<ul>\n<li>Cloud native application을 빌드 할 때</li>\n<li>마이크로서비스 패키징 등에서</li>\n<li>DevOps나 CI/CD 등의 환경에서</li>\n<li>동일한 OS를 공유하는 다양한 공간에서 확장할 때</li>\n</ul>\n<br/>\n<h2 id=\"image이미지\"><a href=\"#image%EC%9D%B4%EB%AF%B8%EC%A7%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Image(이미지)</h2>\n<p>도커에서 가장 중요한 개념은 컨테이너와 더불어 다른 하나는 이미지(Image)입니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/99798882-1cd7ba00-2b75-11eb-92ff-8af89b0eafee.png\" alt=\"image\"></p>\n<p>이미지는 앞서 이야기 했듯이 <strong>컨테이너 실행에 필요한 파일과 설정값을 포함하고 있는 파일</strong>입니다. 이러한 이미지는 상태값을 가지지 않고 변하지 않습니다.</p>\n<p>위의 그림처럼, 컨테이너는 이미지를 실행한 상태라고 볼 수 있으며 추가/변경 사항은 컨테이너에 저장됩니다. 같은 이미지에서는 여러개의 컨테이너를 생성할 수 있고 컨테이너의 상태가 바뀌거나 삭제되더라도 이미지는 변하지 않고 남아 있습니다.</p>\n<p>이미지의 예시로는 다음과 같습니다.</p>\n<ul>\n<li>ubuntu image, db image, nginx 등등이 존재합ㄴ니다.</li>\n<li>\n<p>좀 더 자세하게 보고 싶다면 아래의 링크를 추천드립니다.</p>\n<ul>\n<li><a href=\"https://hub.docker.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Docker Hub</a></li>\n<li><a href=\"https://docs.docker.com/registry/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Docker Repository</a></li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"docker의-장점\"><a href=\"#docker%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Docker의 장점.</h2>\n<h3 id=\"레이어-저장방식\"><a href=\"#%EB%A0%88%EC%9D%B4%EC%96%B4-%EC%A0%80%EC%9E%A5%EB%B0%A9%EC%8B%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>레이어 저장방식</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/99800041-11858e00-2b77-11eb-8ef4-c1d0187332a5.png\" alt=\"image\"></p>\n<p>도커 이미지는 컨테이너를 실행하기 위한 모든 정보를 가지고 있기 때문에 용량이 큽니다. 이러한 이미지가 쌓일수록 비효율적입니다.</p>\n<p>이를 해결하기 위해서 도커는 레이어의 개념을 사용합니다. 윗 사진처럼 ubuntu가 A, B, C의 레이어를 가지고 nginx가 A, B, C, nginx 등의 레이어를 가진다면 A, B, C는 중복되기 때문에 nginx 레이어만 받으며, 효율적으로 이미지를 관리합니다.</p>\n<p>이렇기 때문에 기존의 이미지 레이어 위에 여러 컨테이너를 생성하더라도 최소양의 용량만 사용합니다.</p>\n<h3 id=\"이미지-경로\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80-%EA%B2%BD%EB%A1%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이미지 경로</h3>\n<p><img src=\"https://user-images.githubusercontent.com/42582516/99871551-169e1800-2c1f-11eb-8b5a-31f81ee8ece8.png\" alt=\"image\"></p>\n<p>이미지를 url 방식으로 관리해서 태그를 붙일 수 있습니다. ubuntu 14.04의 이미지는 <code class=\"language-text\">docker.io/libary/ubuntu:14.04</code>이나 <code class=\"language-text\">docker.io/libaray/ubuntu:trusty</code>이며, <code class=\"language-text\">docker.io/library</code> 는 생략할 수 있습니다. 이러한 방식을 통해서 이해하기 쉽고 편리하게 사용할 수 있습니다.</p>\n<h3 id=\"dockerfile\"><a href=\"#dockerfile\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dockerfile</h3>\n<p>도커는 이미지 파일을 만들기 위해서 <code class=\"language-text\">Dockerfile</code>이라는 파일에 DSL(Domain-specific language) 언어를 통해서 이미지 생성 과정을 작성합니다.</p>\n<pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token keyword\">FROM</span> ubuntu<span class=\"token punctuation\">:</span>18.04\n<span class=\"token keyword\">COPY</span> . /app\n<span class=\"token keyword\">RUN</span> make /app\n<span class=\"token keyword\">CMD</span> python /app/app.py</code></pre>\n<p>다음과 같이, <code class=\"language-text\">Dockerfile</code> 의 예시를 볼 수 있습니다. 위의 샘플은 복잡하지 않다는 것을 알 수 있습니다.</p>\n<p>다음에 대해서 간략하게 설명하면, 다음과 같습니다.</p>\n<ul>\n<li>FROM : ubuntu:18.04 Docker image으로 부터 레이어를 만듭니다.</li>\n<li>COPY : Docker의 현재 directory에 파일을 추가합니다.</li>\n<li>RUN : make를 통해 어플리케이션을 빌드합니다.</li>\n<li>CMD : 해당 컨테이너안에서 어떠한 명령을 할지 특정합니다.</li>\n</ul>\n<p>해당 <code class=\"language-text\">Dockerfile</code>을 통해서 어떤 프로그램을 설치할려고 할때, 쉽게 관리할 수 있습니다.</p>\n<h3 id=\"docker-hub\"><a href=\"#docker-hub\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Docker Hub</h3>\n<p><code class=\"language-text\">Docker Hub</code>를 통해서 공개 이미지를 무료로 사용할 수도 있습니다.</p>\n<h3 id=\"command-api\"><a href=\"#command-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Command, API</h3>\n<p><code class=\"language-text\">Docker</code> 클라이언트의 커맨드 명령어는 쉽게 만들어져있습니다. </p>\n<p>간단한 명령어는 다음과 같습니다.</p>\n<table>\n<thead>\n<tr>\n<th>명령어</th>\n<th>내용</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">docker search {image-name}</code></td>\n<td>docker hub로부터 이미지 검색</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">docker pull {image-name}</code></td>\n<td>docker hub로부터 이미지 다운로드</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">docker images</code></td>\n<td>현재 PC에 다운 받아있는 이미지등을 출력</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">docker run &lt;옵션&gt; {image-name} &lt;실행파일&gt;</code></td>\n<td>컨테이너 생성과 동시에 접속</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">docker ps</code></td>\n<td>실행중인 컨테이너 확인</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">docker start {containter-Id}</code></td>\n<td>종료된 컨테이너 실행</td>\n</tr>\n</tbody>\n</table>\n<p>이 외에도 다양한 명령어와 옵션 등이 있지만, 간단하게 설명했습니다.</p>\n<h3 id=\"좋은-생태계와-커뮤니티\"><a href=\"#%EC%A2%8B%EC%9D%80-%EC%83%9D%ED%83%9C%EA%B3%84%EC%99%80-%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>좋은 생태계와 커뮤니티</h3>\n<p>도커는 큰 생태계를 가지고 있으며, 좋은 커뮤니티를 가지고 있습니다. 많은 기업들과 협력하여서 클라우드 컨테이너에서 사실상의 표준이 되었습니다.</p>\n<p>또한, 발전속도가 빠른 오픈소스이기때문에, 사용하면서 필요한 부분은 대부분 금방 나오고 있습니다.</p>\n<h2 id=\"마무리\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마무리.</h2>\n<p>도커에 대한 이론적인 부분에 대해, 간략하지만 크게 정리하였습니다. 이후 도커를 직접 설치하고, 이를 활용하는 모습은 이후에 추가적으로 정리하겠습니다. 감사합니다.</p>\n<hr>\n<p><strong>출처</strong></p>\n<ul>\n<li><a href=\"https://www.redhat.com/ko/topics/containers/what-is-docker\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.redhat.com/ko/topics/containers/what-is-docker</a></li>\n<li><a href=\"https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html</a></li>\n<li><a href=\"https://www.redhat.com/ko/topics/containers/containers-vs-vms\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.redhat.com/ko/topics/containers/containers-vs-vms</a></li>\n<li><a href=\"https://siner308.github.io/2019/02/25/django-docker-custom-image/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://siner308.github.io/2019/02/25/django-docker-custom-image/</a></li>\n<li><a href=\"https://captcha.tistory.com/49\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://captcha.tistory.com/49</a></li>\n<li><a href=\"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.docker.com/develop/develop-images/dockerfile_best-practices/</a></li>\n</ul>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/DockerLogo.839b3db.d16c7d3d0bc56aea895acbd360bff690.png","size":{"width":696,"height":364},"sizes":"(max-width: 696px) 100vw, 696px","srcset":["/assets/static/DockerLogo.839b3db.d16c7d3d0bc56aea895acbd360bff690.png 696w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 696 364' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ab80687425500475446722854169fbd4'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ab80687425500475446722854169fbd4)' width='696' height='364' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAhCAIAAADmozp2AAAACXBIWXMAAAsSAAALEgHS3X78AAAML0lEQVRYw9VYCVDTZxaPnYW2s9Pd2d2ZdXvurlfVKrqduu20VVsVD7xKXeut1XrhgVhQUBFELVVBETlVwKAgiKKicgm5E0hCEEJA5AhXuJJA/ndCzv%2b%2bfyIRr9ad7ezWmTcf3/f%2bv%2b%2b933vvuwKrk7S/1MJ6caiGsGmgfXkD6DE69EaHzuTopF6eADpwK0g7Zuk10TlCReCl24cv327SEd1GGgrirsyvNwCD3YE56H6bw0bTEVfu/Cni4uSwhFqNvnfgYQDQ9pjpTuNzwwA9pOAFl%2bgLIl8gAMLe7sz9hWJR1M2S2JslyQXCddHnRh298GlYnKpD12mk4Su4hEik9a1NWkO3iYZCPR1GF%2bUAzItQ6TY6ekz0LxQAZe%2bz0riFnh4W4/F99LshsaMiUkaHJgyPOD/hQEyrDsFopyfK0YUY55y5tiWjuH/AprPRQMKdTogHgmxFBu619LgXpEs5NOugAYE4m/SkskMPHVdqfgI/VPPsAFoMxqvlystCxRfhp986kjY%2bPMnreOYHYQnvHE2bsO9USpEou6y6rsugtdBVjW2TMxR/y1BeuVUkv6%2b%2b39XvZACVcSAOh4mmy%2btbV%2b0KVhtMoO%2bHBUnTfbZHy09rZjQGux2n6cuF/J2HjumttN7q6DYCexv0ceYr7WbfRdlRmtZbHBriOQEAyOCgW7R9E0Oifx8UPT4kZtKJzLGhce/tjR6z75RXVNaE8KThgcff2vWDSPWAomkdii1OLX67QP/HxFJWHHfmiQstvYiBplUafer1wqscSZGsZqX/3hbEBCW9La5MzrnFrXoAfXDUb6Or2nrPXb3DvnW3A7dAANvDfiBoukhe06jDEZrmKxviMnNv8GW9JhvUVmum23FTdrGIr2x0b0LWUOpM1QhrZXPXXZF8SmjMu6FxE0JOekWmjz0Q%2b9fg6PeDo7yOX5p4MH7E/tNj9p7IyudI61ty%2bbIFZ2%2b/dkHxu0SO19nCi4JK1AEMVPPWbNwUEr4%2bKHTGN2uW7whsMZj2HDu9cL2ff8Sx2Su%2bjUrLBKJ5oop5q7/bERb5jd/ujAJuLq884EhUYvbNuas3tmPmhKwbc1Zt2BVxfMWOwN1Ho4FebVffKv%2b9X23cnlnIg%2bK4FhJrkL0dNlArZu3Uo7MSc99Jr5iYLh%2bTVTMus3rclboP0uVj02VjLyvHZdeOv1g57kL52Kwar4xKr2zVyKzaYVeaVqcXqhpb77d2Iza6y0gv3borMTuPpGnI4uGE1BU7glJuFH69eafaQIFS1tgxf91mzr37y7cHpt0shmXWSQxoB%2bjrvPLPfZcv3rCtuq0HMMBefF9N0/TVUtEUH9/qdm3wiTN7jsWCTa3Z/uQSggX6oBc7nXEtiX156nH2mydvTjiYPCqJO5ItH3GWPzrs/Lj98SNTxCMuSMceTR8fHDMqoWTkRcXoVMnYw%2bz3/COTcgugFOGJFyrU3SpNn%2b%2bmHep%2bArYvXBeS2obN%2byICI0/FpGfDgq7vwaBE%2b6JiI%2bJS1gXuVxsYWHMf1W9nApjsvYBbqXLQdFLObb8DEWaajr98/culq%2b9IKmH9rNgZxKuu01tomPKMTdyGmpv6jN3YwKbELNbh3N%2beFb6eyPVMFr6RzBuezPFI4nsmcDxAk8j1SOZ7xnM8Y4pfjcpnhVw8mHa1h7A%2b0BLqfiMYgcr6btyRyysz0jRkN/bS1e3hkSnXC9YEhEDdYeU09%2bGLNvjBggFCNwRSwOgsVtia1/nSj318N%2bw52ElaedUPvt7sfzQpbalfgKJZA5HDsb52dwi3qt69eJ4MAIoA6wyx03llVa/uY7MSRMMSBaxYzt/j7iw4f%2bs3aXKPlHKPVCnTJok8Y7keMVxW%2bLUVsZmdCNk9QMN0lwXYmllF/JnL1h6OT9l/MsF7xbfFclU35Vi9K3hNQHBM%2bhVYSwFHo2AlsPPuQnYBtvPQj9l3hbDjNwaHh0TFwZ6B0gH7MZ/N2H00yv/w8bsVKp2FXrLFv0RRC4fYTx2j8FbTDTj2n81Yeiw5KKc4roDne60Mgnn1nNgzWeSZIPCM5b1yspT1Y6HHPrbf2RyNAe8ZoIfeX9CHJJVW1kXEp0Qms6UNHeAbNpjaQMLGCI1JhP3aRcGB6AB9oUwZfuYcwCpbuhXq7jyhDA7Wszm363sQ%2bHpLrIiIOw%2brqNH5eMks4Kk6%2b8DUUHfPOEa7jI4O1JhdyMnmCCXNrcUt3f/IkLJOcoZFl7Ai81mHcl8LvTT9WPpljlRvtAL46dvXeYQzBzzGbDjmWnAd4YiD0cAx/fBt6wzVDYPHos7scJ3j3RQDgNMWlhZIj/N%2b7HNelO7t%2b9yLjCEE8yn7XcX91Nsl7DvFcdcLpkdlfBR50Tcu50Bm/p3y6i4DCduu3UnimVeh634demu6L92hLw7XXevSuN9CMHwC7wY/7Y713HcVJMBG95oc9b14bWd/mxbV9OFa3IzamKu0nbS3opb/7zv051%2bjrqz0GGm49uCtBge8Bp4JoPzP34y/ih80L/1Pyl9pAP%2bz37i/%2bO/pDsIOhxVTgY6nPnQQz0D/N8w0T9kBTfugI81T8vPsSbveaOf2mllthF1nfIy3lrJrjYyVjkGX0NcaHe3EY6bdziANzLH9HAYap4Ue6qF9nfERdb3zvwQucC9l7wJTzk439ZCi5jnSzsy1S/WW/UqCdbqBKtNbIAyY2Wtk7Eq0Fn6vuYcJg7Gud4Yn01vAmSswkC7Gk8PltQ6xNGNWwDMWKEePk0EX%2bVBgCBMbUFtCI3XqAQVeQdNvcuiMjrzOgesdA5CvNtym0Jtz2015HSa53tKEWeGGAZhTHE8IuIAsCLWWsBpiHwQQcA8/oCSi66mkRiqxkTpRTwYrib1VeFKjEWxBShR9lr3VxDQ%2bAqGqECs4BqItmK3GYBX2DuS2GxMbjGy1Mb/TJNKa7/VZ6hBrI2prwW2QJxAYAstDKiKoCg%2buJiBn55uNeZqBoGpidAkypgQJrMITG8mLavKSmmlBzjeR0fXklTajuHegos%2bs7LeoDNZap0C/XGfOajOBnZ2V%2bLJyjDVXiKyRYdsr8e%2briD3VREg1EVpD7K9hPm9R4FsV%2bAwBMrwIeb0IG3EXmSdCQ5TkmQaSrSYzWxhnbDUF7NOaqZQmit1MZajJ7FYyp43KbgU9Fd9AHaklXbwhW7vu4Wtl2AwB%2bn4J8kYh%2bkohNqwQ%2b0MRMoWLrpSiB5X4yXrixzqGQIhzyon7BMSW2sS4Yz8MDD7hG%2bTYv8rQmQJkKg9hTecj03gIsJwrQhdL0CUSbLEYBaLeQuRTHuLFQT7goBM46ERouagXB51cikzhILMEyNIydKsCO1iDH6vDExrI1GbyXBMJnZP15JFahm7APWKbAt9Uga%2bTYUvK0FlCdAqXsTa6FB1Zir5fikJ/vHM4ooQZfshBoM7eAmShGF0vxzZWYEB0WyW%2buwpM4X4KHBL9lQSbLUS/cHKGFmiz4A%2bIK4ypgwL96U7llwB6QgTITAEKVsDNsnJ8s4JYK8MXiTEfEeIjQt0yR8gECWDg9BkP%2bZzHdL5wDsHmLD4yc9Cgqw%2b%2bpjqZwCxIIpAGy%2bAC4vnS9XUIsaGcWcul%2bNdl%2bEIxNo/xColnZJaAKZC3kygIFGe%2bGFskwQAJpNfIiO/k4ID0U5BbFeQWBfldBblKSiwBOxLGzmynBcaUAIG%2bD1NbbKUUSkEsLcfni5lPMxkXTFlmOb24MMuk%2bHo5Y3Oz0yy0a%2bXEN%2bX4VxKG4XwRszQYETItUPKV4KwFEsIt8wfFR0zME%2bNzxYS3iJgtwp0CHQI0Cx4BYMhgoJ3n0ouJOU4Y4L0ZYYbzJfgj%2b2Ji4ZA%2buADYLCFjfI4Id811emSMu2S%2b%2bCHeR%2bIy7gIzBFx61qRSzKsUm1SKT2LaRwLKT3iYjxhfLiXWV5AbKkjoeAvxyRwX/gnBJ5Zi/%2bRiC8TEKin5rZwpyGIJMU2Ae5UOxePuPuA/5GDAZqUMtgrlf4%2bCeq6WkgvFxGd87PFZDPgjLj5HTCyCUkiYmKdwGSVgWG8WoG8/Lm/mo6OKMSARrKTCVNThWipiUGAYUEWBxb/ko%2b8M4qHz53x0mgDOLuqQE%2b8SwB%2booXZXUR9z8aF4xkUBCnXbq6QOPm4f%2bmAB7GyrJCFTMOvdAnR4PvoJD98DZGoemQ2qptbKyE/5xL8BmSY/o6bGX9YAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}}},"context":{}}